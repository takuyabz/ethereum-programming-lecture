{
  "contractName": "ResalePurchaser",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "cid",
          "type": "uint256"
        },
        {
          "name": "price",
          "type": "uint256"
        },
        {
          "name": "ratio",
          "type": "uint256"
        },
        {
          "name": "limitSupply",
          "type": "uint256"
        },
        {
          "name": "publish",
          "type": "bool"
        }
      ],
      "name": "updateTradeInfo",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "count",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tid",
          "type": "uint256"
        }
      ],
      "name": "getResaleContent",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "cid",
          "type": "uint256"
        }
      ],
      "name": "getTradeInfo",
      "outputs": [
        {
          "name": "price",
          "type": "uint256"
        },
        {
          "name": "ratio",
          "type": "uint256"
        },
        {
          "name": "limitSupply",
          "type": "uint256"
        },
        {
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "name": "publish",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "cid",
          "type": "uint256"
        }
      ],
      "name": "getTradeContent",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceWhitelistAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "countTradePurchased",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelistAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "cid",
          "type": "uint256"
        },
        {
          "name": "title",
          "type": "string"
        },
        {
          "name": "description",
          "type": "string"
        },
        {
          "name": "imgsrc",
          "type": "string"
        }
      ],
      "name": "updateContent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "cid",
          "type": "uint256"
        }
      ],
      "name": "purchaseTrade",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tid",
          "type": "uint256"
        }
      ],
      "name": "getResaleInfo",
      "outputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelistAdmin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tid",
          "type": "uint256"
        }
      ],
      "name": "getLogTrade",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tid",
          "type": "uint256"
        },
        {
          "name": "price",
          "type": "uint256"
        },
        {
          "name": "limitSupply",
          "type": "uint256"
        },
        {
          "name": "publish",
          "type": "bool"
        }
      ],
      "name": "updateResaleInfo",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "title",
          "type": "string"
        },
        {
          "name": "description",
          "type": "string"
        },
        {
          "name": "imgsrc",
          "type": "string"
        }
      ],
      "name": "createContent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "rid",
          "type": "uint256"
        }
      ],
      "name": "getLogResale",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tradeAtIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistedAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistedRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistAdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistAdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tid",
          "type": "uint256"
        },
        {
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "purchaseResale",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "countResalePurchased",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "resaleAtIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cid\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"ratio\",\"type\":\"uint256\"},{\"name\":\"limitSupply\",\"type\":\"uint256\"},{\"name\":\"publish\",\"type\":\"bool\"}],\"name\":\"updateTradeInfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tid\",\"type\":\"uint256\"},{\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"purchaseResale\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tid\",\"type\":\"uint256\"}],\"name\":\"getResaleContent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cid\",\"type\":\"uint256\"}],\"name\":\"getTradeInfo\",\"outputs\":[{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"ratio\",\"type\":\"uint256\"},{\"name\":\"limitSupply\",\"type\":\"uint256\"},{\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"name\":\"publish\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cid\",\"type\":\"uint256\"}],\"name\":\"getTradeContent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceWhitelistAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countTradePurchased\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addWhitelistAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cid\",\"type\":\"uint256\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"imgsrc\",\"type\":\"string\"}],\"name\":\"updateContent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countResalePurchased\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cid\",\"type\":\"uint256\"}],\"name\":\"purchaseTrade\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tid\",\"type\":\"uint256\"}],\"name\":\"getResaleInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelistAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tid\",\"type\":\"uint256\"}],\"name\":\"getLogTrade\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tid\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"limitSupply\",\"type\":\"uint256\"},{\"name\":\"publish\",\"type\":\"bool\"}],\"name\":\"updateResaleInfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"imgsrc\",\"type\":\"string\"}],\"name\":\"createContent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"resaleAtIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"rid\",\"type\":\"uint256\"}],\"name\":\"getLogResale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tradeAtIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistedAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistedRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistAdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistAdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/tech/dev/prd/programming-lectures/lesson011/contracts/Product/ResalePurchaser.sol\":\"ResalePurchaser\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/tech/dev/prd/programming-lectures/lesson011/contracts/Product/Article.sol\":{\"keccak256\":\"0x07b55d2fe20ce16265daafe2486c2dd4ab1a75e5035290a629dfae189c9ca9dc\",\"urls\":[\"bzzr://550e13764dbab28652bd37674c5b6f3797f90018caf4164993bc36796d2275c1\"]},\"/Users/tech/dev/prd/programming-lectures/lesson011/contracts/Product/Resale.sol\":{\"keccak256\":\"0xb5314abf06180a6aea487d957595355d46ada1108a5bb0495a8baf8b0eb95237\",\"urls\":[\"bzzr://2b256be37826448d06aff09e7422d394559dfd264b674436697ad41f16827350\"]},\"/Users/tech/dev/prd/programming-lectures/lesson011/contracts/Product/ResaleHistory.sol\":{\"keccak256\":\"0xc7890a0757325f0cacab13ba50b11fed624b2dfe3c9c67040e3bea02fc600bdc\",\"urls\":[\"bzzr://48b0748260119a864fcdfa7299cd5b90ad86198acd5bed121619a641c365c531\"]},\"/Users/tech/dev/prd/programming-lectures/lesson011/contracts/Product/ResalePurchaser.sol\":{\"keccak256\":\"0x7a75c748bdb220c75dcaefb408fc3de5323762869fcb33939a6aaeaca1a6c1c4\",\"urls\":[\"bzzr://4ef41e6d6f45a793d5aa3f90decfb412e3e47ec1e91bec273b8663c74c4e58b6\"]},\"/Users/tech/dev/prd/programming-lectures/lesson011/contracts/Product/Trade.sol\":{\"keccak256\":\"0x97d8bed59eabc69b3d0424a647c0b7d926b186e2d3d5b5cf029192efb7e9f2af\",\"urls\":[\"bzzr://594374ad7497571be794a999cd8728e95bacc0148b1a396d535190e5358fb753\"]},\"/Users/tech/dev/prd/programming-lectures/lesson011/contracts/Product/TradeHistory.sol\":{\"keccak256\":\"0x08d7fd3031f162ba8d2538205e7c41086c5f97b21687e9250d4bea4ad729dc35\",\"urls\":[\"bzzr://c5d04e094d51c0217916f6a0ce6a62743eb65f4496a1f7a7f7efc2c8717c1100\"]},\"/Users/tech/dev/prd/programming-lectures/lesson011/contracts/Product/TradePurchaser.sol\":{\"keccak256\":\"0x49163e02382069a9b83bc64743fe993edf2816c17e3cf442b58720c119b80d80\",\"urls\":[\"bzzr://493ea038264b8bea9946815654155849c1d7d9410db95238e01ed938ce8260fd\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzzr://bd34c1ce05b5b2b3a62fc02e160f6805b1cadd476854664f433c685b2fda8dad\"]},\"openzeppelin-solidity/contracts/access/roles/WhitelistAdminRole.sol\":{\"keccak256\":\"0xd2c87384e7346f702df3be70e99fff30f22f7b9767a9502afb345f0457ddf36f\",\"urls\":[\"bzzr://3f300be02f06cae39a29cdf6d4f1d6b3faedf818c83c5623a512e189bdad690a\"]},\"openzeppelin-solidity/contracts/access/roles/WhitelistedRole.sol\":{\"keccak256\":\"0x110b2fab50ea257de28a8d2b03e05dc11b9e5213841dabfe784aacca8c109cda\",\"urls\":[\"bzzr://a7085973dd319349c9cfd1323e560bddc5e1db25959fd0198b2db1bd02631f72\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5eb69360d3441ab2ee799bd7c007cccbffb0896f12b2dfe1456193e2aa180a11\",\"urls\":[\"bzzr://ecd0352164978c418c8f5b0080c972b65e4b07f6afc593fb7cdd856185a458ea\"]},\"openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xac2eacd7e7762e275442f28f21d821544df5aae2ed7698af13be8c41b7005e2e\",\"urls\":[\"bzzr://43e901f6f210568ebc1d3591da3ce6a9d10796b854767a9c6e3da10305a8a332\"]},\"openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x661553e43d7c4fbb2de504e5999fd5c104d367488350ed5bf023031bd1ba5ac5\",\"urls\":[\"bzzr://fc2ba15143ce3a00268ecd15fc98eb2469b18bfe27a64bbab0ac6446f161c739\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xf79fb10e8235770eb4aea7249034076a3cc9f9119ad944fc48705bae9c9d20dc\",\"urls\":[\"bzzr://d12a11272051eb6586de8f7e0a82c04a98c9984ce8b2a6cf1ee439f65aba29a9\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xf151df411bbf4eaef1fc8e8480cd10c2cd985f1a36517e63981517610213efc1\",\"urls\":[\"bzzr://9bca20c0c1208be8f31fc7a73faccd2fca4c5f84dc0a432ae2e066970551db34\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0xb42cb5a7471d98114af8f7050e7d08dfd543f432713a8aee72a45ce9485f5bed\",\"urls\":[\"bzzr://b0d4d8eb319d67dc4b5def23d48a84806dcd6492782c176309da449903e58766\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0x908d0d6fd8d30cffb1fe9fce1f7db6802cb885fbe88d2f170539e8dcc6afa946\",\"urls\":[\"bzzr://691f4df66b5aa95410d8205f7afcd90e5f066d13513392ab797b2c9ce2f4f669\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0xe5e28b1a405164faa98f8ecd8ed2b00907b89e3d58b2b2bb8ac8b12bc5714489\",\"urls\":[\"bzzr://5a804c3710e9eca0a111db4536b0c5d23bf4a66734a9856f3df2992900ed8f28\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xce48937a8007c580b8e2e35705738c922dd17540de89ebee6df06d2917a3f9fc\",\"urls\":[\"bzzr://de494d3843e2c151aa108782382720b5d9f4531f0aa620a4244ca12fc1f8a780\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x5c573acd6c7b98d71f3c1c44d63dc17400b0fd7b26a52c9fded43b8b533dc4ec\",\"urls\":[\"bzzr://8f483b76debd9f5948c445dcb83dac4c8b4881218776a6cd43ca07bd62f647de\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x2b2b99dc7fe8fcd1f9427d00822b99cbc683dc21f5dd7532bd7e2281fd2c2ca2\",\"urls\":[\"bzzr://b89c69b072072e7fa1c8da973f82c7b28a64fb6bdc1e47626fedc89050ae783c\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xadbfb7028fb0f851dc848a48b9e54e7c89ffd2c2edc12fa4ba9bb383dfaa83d9\",\"urls\":[\"bzzr://2466b6491600969dd9ffdeb0b705e7cecc38418aa215cec64b2481273bba9076\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzzr://f7f6da60a184233fd666ac44e6fb2bd51ca6ebdc4867a310d368049aa4e62786\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280601281526020017f4169726520566f6963652041727469636c6500000000000000000000000000008152506040518060400160405280600381526020017f414941000000000000000000000000000000000000000000000000000000000081525081816200008a6301ffc9a760e01b6200011f60201b60201c565b620000a26380ac58cd60e01b6200011f60201b60201c565b620000ba63780e9d6360e01b6200011f60201b60201c565b8160099080519060200190620000d29291906200044d565b5080600a9080519060200190620000eb9291906200044d565b5062000104635b5e139f60e01b6200011f60201b60201c565b5050505062000119336200022860201b60201c565b620004fc565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620001bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6200024381600c6200028960201b6200484c1790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b6200029b82826200036d60201b60201c565b156200030f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620003f6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180620058da6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200049057805160ff1916838001178555620004c1565b82800160010185558215620004c1579182015b82811115620004c0578251825591602001919060010190620004a3565b5b509050620004d09190620004d4565b5090565b620004f991905b80821115620004f5576000816000905550600101620004db565b5090565b90565b6153ce806200050c6000396000f3fe60806040526004361061023b5760003560e01c80636713ad4d1161012e578063bb5f747b116100ab578063d6cd94731161006f578063d6cd947314611512578063df696adf14611529578063e985e9c514611578578063eeb2923014611601578063ff3b0160146116f05761023b565b8063bb5f747b146111b5578063c6ce7ab81461121e578063c87b56dd146112d3578063cf40a86614611387578063d35216a2146113e25761023b565b806395d89b41116100f257806395d89b4114610eb3578063a22cb46514610f43578063aa5ddec614610fa0578063aee7e54c14610fce578063b88d4fde146110a35761023b565b80636713ad4d14610c6d57806370a0823114610c985780637362d9c814610cfd578063786f7e5714610d4e5780637cfeb18a14610e885761023b565b806323b872dd116101bc5780633b64d29a116101805780633b64d29a1461094b57806342842e0e14610b115780634c5a628c14610b8c5780634f6ccce714610ba35780636352211e14610bf25761023b565b806323b872dd14610738578063291d9549146107b35780632f745c591461080457806336c67897146108735780633af32abf146108e25761023b565b8063095ea7b311610203578063095ea7b31461044d57806310154bad146104a8578063111eb967146104f957806318160ddd146105475780631d143ff5146105725761023b565b806301ffc9a714610240578063031941ef146102b257806306661abd1461031757806306fdde0314610342578063081812fc146103d2575b600080fd5b34801561024c57600080fd5b506102986004803603602081101561026357600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061173f565b604051808215151515815260200191505060405180910390f35b3480156102be57600080fd5b50610315600480360360a08110156102d557600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291908035151590602001909291905050506117a6565b005b34801561032357600080fd5b5061032c611921565b6040518082815260200191505060405180910390f35b34801561034e57600080fd5b50610357611930565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561039757808201518184015260208101905061037c565b50505050905090810190601f1680156103c45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103de57600080fd5b5061040b600480360360208110156103f557600080fd5b81019080803590602001909291905050506119d2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561045957600080fd5b506104a66004803603604081101561047057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611a6d565b005b3480156104b457600080fd5b506104f7600480360360208110156104cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c46565b005b6105456004803603604081101561050f57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611cb0565b005b34801561055357600080fd5b5061055c611ec5565b6040518082815260200191505060405180910390f35b34801561057e57600080fd5b506105ab6004803603602081101561059557600080fd5b8101908080359060200190929190505050611ed2565b604051808681526020018060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848103845288818151815260200191508051906020019080838360005b8381101561062b578082015181840152602081019050610610565b50505050905090810190601f1680156106585780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b83811015610691578082015181840152602081019050610676565b50505050905090810190601f1680156106be5780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b838110156106f75780820151818401526020810190506106dc565b50505050905090810190601f1680156107245780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b34801561074457600080fd5b506107b16004803603606081101561075b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612004565b005b3480156107bf57600080fd5b50610802600480360360208110156107d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612073565b005b34801561081057600080fd5b5061085d6004803603604081101561082757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506120dd565b6040518082815260200191505060405180910390f35b34801561087f57600080fd5b506108ac6004803603602081101561089657600080fd5b810190808035906020019092919050505061219c565b60405180868152602001858152602001848152602001838152602001821515151581526020019550505050505060405180910390f35b3480156108ee57600080fd5b506109316004803603602081101561090557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612207565b604051808215151515815260200191505060405180910390f35b34801561095757600080fd5b506109846004803603602081101561096e57600080fd5b8101908080359060200190929190505050612219565b604051808681526020018060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848103845288818151815260200191508051906020019080838360005b83811015610a045780820151818401526020810190506109e9565b50505050905090810190601f168015610a315780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b83811015610a6a578082015181840152602081019050610a4f565b50505050905090810190601f168015610a975780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b83811015610ad0578082015181840152602081019050610ab5565b50505050905090810190601f168015610afd5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b348015610b1d57600080fd5b50610b8a60048036036060811015610b3457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061232b565b005b348015610b9857600080fd5b50610ba161234b565b005b348015610baf57600080fd5b50610bdc60048036036020811015610bc657600080fd5b8101908080359060200190929190505050612356565b6040518082815260200191505060405180910390f35b348015610bfe57600080fd5b50610c2b60048036036020811015610c1557600080fd5b81019080803590602001909291905050506123d6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610c7957600080fd5b50610c8261249e565b6040518082815260200191505060405180910390f35b348015610ca457600080fd5b50610ce760048036036020811015610cbb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506124eb565b6040518082815260200191505060405180910390f35b348015610d0957600080fd5b50610d4c60048036036020811015610d2057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125c0565b005b348015610d5a57600080fd5b50610e8660048036036080811015610d7157600080fd5b810190808035906020019092919080359060200190640100000000811115610d9857600080fd5b820183602082011115610daa57600080fd5b80359060200191846001830284011164010000000083111715610dcc57600080fd5b909192939192939080359060200190640100000000811115610ded57600080fd5b820183602082011115610dff57600080fd5b80359060200191846001830284011164010000000083111715610e2157600080fd5b909192939192939080359060200190640100000000811115610e4257600080fd5b820183602082011115610e5457600080fd5b80359060200191846001830284011164010000000083111715610e7657600080fd5b909192939192939050505061262a565b005b348015610e9457600080fd5b50610e9d61272d565b6040518082815260200191505060405180910390f35b348015610ebf57600080fd5b50610ec861277a565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610f08578082015181840152602081019050610eed565b50505050905090810190601f168015610f355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610f4f57600080fd5b50610f9e60048036036040811015610f6657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061281c565b005b610fcc60048036036020811015610fb657600080fd5b81019080803590602001909291905050506129bf565b005b348015610fda57600080fd5b5061100760048036036020811015610ff157600080fd5b8101908080359060200190929190505050612b3d565b604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018381526020018215151515815260200197505050505050505060405180910390f35b3480156110af57600080fd5b506111b3600480360360808110156110c657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561112d57600080fd5b82018360208201111561113f57600080fd5b8035906020019184600183028401116401000000008311171561116157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612bfe565b005b3480156111c157600080fd5b50611204600480360360208110156111d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612c70565b604051808215151515815260200191505060405180910390f35b34801561122a57600080fd5b506112576004803603602081101561124157600080fd5b8101908080359060200190929190505050612c8d565b604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390f35b3480156112df57600080fd5b5061130c600480360360208110156112f657600080fd5b8101908080359060200190929190505050612d05565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561134c578082015181840152602081019050611331565b50505050905090810190601f1680156113795780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561139357600080fd5b506113e0600480360360808110156113aa57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803515159060200190929190505050612e18565b005b3480156113ee57600080fd5b506115106004803603606081101561140557600080fd5b810190808035906020019064010000000081111561142257600080fd5b82018360208201111561143457600080fd5b8035906020019184600183028401116401000000008311171561145657600080fd5b90919293919293908035906020019064010000000081111561147757600080fd5b82018360208201111561148957600080fd5b803590602001918460018302840111640100000000831117156114ab57600080fd5b9091929391929390803590602001906401000000008111156114cc57600080fd5b8201836020820111156114de57600080fd5b8035906020019184600183028401116401000000008311171561150057600080fd5b9091929391929390505050612fae565b005b34801561151e57600080fd5b506115276131ba565b005b34801561153557600080fd5b506115626004803603602081101561154c57600080fd5b81019080803590602001909291905050506131c5565b6040518082815260200191505060405180910390f35b34801561158457600080fd5b506115e76004803603604081101561159b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506132e2565b604051808215151515815260200191505060405180910390f35b34801561160d57600080fd5b5061163a6004803603602081101561162457600080fd5b8101908080359060200190929190505050613376565b604051808681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405180910390f35b3480156116fc57600080fd5b506117296004803603602081101561171357600080fd5b8101908080359060200190929190505050613421565b6040518082815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b82606481111561181e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f726174696f206f766572666c6f7700000000000000000000000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1661183e876123d6565b73ffffffffffffffffffffffffffffffffffffffff161461185e57600080fd5b6118678661353e565b61187057600080fd5b6000600f60008881526020019081526020016000209050858160000181905550828160040160006101000a81548160ff02191690831515021790555084816001018190555083816002018190555060018160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050505050565b600061192b611ec5565b905090565b606060098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119c85780601f1061199d576101008083540402835291602001916119c8565b820191906000526020600020905b8154815290600101906020018083116119ab57829003601f168201915b5050505050905090565b60006119dd8261353e565b611a32576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615205602c913960400191505060405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000611a78826123d6565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611aff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806153256021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611b3f5750611b3e81336132e2565b5b611b94576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806151596038913960400191505060405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b611c4f33612c70565b611ca4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604081526020018061527c6040913960400191505060405180910390fd5b611cad816135b0565b50565b81600060136000838152602001908152602001600020905080600101543414611d41576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f726573616c65207072696365206572726f72000000000000000000000000000081525060200191505060405180910390fd5b611d4a8461361a565b600060136000868152602001908152602001600020905060166000611d7283600001546123d6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001816000015490806001815401808255809150509060018203906000526020600020016000909192909190915055506000600f6000836000015481526020019081526020016000209050611e0582600001546123d6565b73ffffffffffffffffffffffffffffffffffffffff166108fc6064836001015485600101540281611e3257fe5b049081150290604051600060405180830381858888f19350505050158015611e5e573d6000803e3d6000fd5b508473ffffffffffffffffffffffffffffffffffffffff166108fc6064836001015460640385600101540281611e9057fe5b049081150290604051600060405180830381858888f19350505050158015611ebc573d6000803e3d6000fd5b50505050505050565b6000600780549050905090565b6000606080606060008560006013600083815260200190815260200160002090508060060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611fb4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6e6f74207369676e65642c20706c6561736520757064617465496e666f00000081525060200191505060405180910390fd5b6000601360008a81526020019081526020016000209050611fd8816000015461353e565b611fe157600080fd5b611fee8160000154613752565b9750975097509750975050505091939590929450565b61200e3382613a5b565b612063576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806153466031913960400191505060405180910390fd5b61206e838383613b4f565b505050565b61207c33612c70565b6120d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604081526020018061527c6040913960400191505060405180910390fd5b6120da81613b73565b50565b60006120e8836124eb565b821061213f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806150ac602b913960400191505060405180910390fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061218957fe5b9060005260206000200154905092915050565b60008060008060006121ad8661353e565b6121b657600080fd5b6000600f6000888152602001908152602001600020905080600001548160010154826002015483600301548460040160009054906101000a900460ff16955095509550955095505091939590929450565b600061221282613bcd565b9050919050565b6000606080606060008560006013600083815260200190815260200160002090508060060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166122fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6e6f74207369676e65642c20706c6561736520757064617465496e666f00000081525060200191505060405180910390fd5b6123048861353e565b61230d57600080fd5b61231688613752565b96509650965096509650505091939590929450565b61234683838360405180602001604052806000815250612bfe565b505050565b61235433613bea565b565b6000612360611ec5565b82106123b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615377602c913960400191505060405180910390fd5b600782815481106123c457fe5b90600052602060002001549050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612495576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806151bb6029913960400191505060405180910390fd5b80915050919050565b6000601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180549050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612572576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180615191602a913960400191505060405180910390fd5b6125b9600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613c44565b9050919050565b6125c933612c70565b61261e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604081526020018061527c6040913960400191505060405180910390fd5b61262781613c52565b50565b61263333612207565b612688576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a8152602001806152eb603a913960400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166126a8886123d6565b73ffffffffffffffffffffffffffffffffffffffff16146126c857600080fd5b6000600e88815481106126d757fe5b9060005260206000209060040201905086868260000191906126fa929190614f32565b50848482600101919061270e929190614f32565b508282826002019190612722929190614f32565b505050505050505050565b6000601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180549050905090565b6060600a8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128125780601f106127e757610100808354040283529160200191612812565b820191906000526020600020905b8154815290600101906020018083116127f557829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156128be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b806000600f6000838152602001908152602001600020905080600001543414612a50576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f7472616465207072696365206572726f7200000000000000000000000000000081525060200191505060405180910390fd5b612a5983613cac565b6000600f6000858152602001908152602001600020905060126000612a7d866123d6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001849080600181540180825580915050906001820390600052602060002001600090919290919091505550612aed846123d6565b73ffffffffffffffffffffffffffffffffffffffff166108fc82600001549081150290604051600060405180830381858888f19350505050158015612b36573d6000803e3d6000fd5b5050505050565b600080600080600080600080601360008a81526020019081526020016000209050612b6b816000015461353e565b612b7457600080fd5b8060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600001548360010154846002015485600301548660050160149054906101000a900460ff16975097509750975097509750975050919395979092949650565b612c09848484612004565b612c1584848484613d89565b612c6a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806150d76032913960400191505060405180910390fd5b50505050565b6000612c8682600c613f7290919063ffffffff16565b9050919050565b60008060008060106000868152602001908152602001600020905080600001548160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16935093509350509193909250565b6060612d108261353e565b612d65576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806152bc602f913960400191505060405180910390fd5b600b60008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612e0c5780601f10612de157610100808354040283529160200191612e0c565b820191906000526020600020905b815481529060010190602001808311612def57829003601f168201915b50505050509050919050565b6000806000612e2687612c8d565b9250925092503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612e6457600080fd5b612e6d8361353e565b612e7657600080fd5b6000601360008981526020019081526020016000209050838160000181905550868160010181905550858160020181905550848160050160146101000a81548160ff021916908315150217905550828160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018160060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050505050505050565b612fb733612207565b61300c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a8152602001806152eb603a913960400191505060405180910390fd5b613014614fb2565b86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816000018190525084848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816020018190525082828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816040018190525060006001600e83908060018154018082558091505090600182039060005260206000209060040201600090919290919091506000820151816000019080519060200190613149929190614fda565b506020820151816001019080519060200190613166929190614fda565b506040820151816002019080519060200190613183929190614fda565b5060608201518160030190805190602001906131a0929190614fda565b5050500390506131b03382614050565b5050505050505050565b6131c333613b73565b565b60008180601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054905010613282576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f696e646578206f766572666c6f7700000000000000000000000000000000000081525060200191505060405180910390fd5b601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000183815481106132cf57fe5b9060005260206000200154915050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080600080600080601460008881526020019081526020016000209050806000015481600101548260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16955095509550955095505091939590929450565b60008180601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180549050106134de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f696e646578206f766572666c6f7700000000000000000000000000000000000081525060200191505060405180910390fd5b601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001838154811061352b57fe5b9060005260206000200154915050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6135b933612c70565b61360e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604081526020018061527c6040913960400191505060405180910390fd5b61361781614071565b50565b600080600061362884612c8d565b9250925092506136378361353e565b61364057600080fd5b613649846140cb565b600060146000601560008154809291906001019190505581526020019081526020016000209050838160000181905550848160010181905550828160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550338160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b6000606080606060006137648661353e565b61376d57600080fd5b613775614fb2565b600e878154811061378257fe5b9060005260206000209060040201604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156138345780601f1061380957610100808354040283529160200191613834565b820191906000526020600020905b81548152906001019060200180831161381757829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156138d65780601f106138ab576101008083540402835291602001916138d6565b820191906000526020600020905b8154815290600101906020018083116138b957829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156139785780601f1061394d57610100808354040283529160200191613978565b820191906000526020600020905b81548152906001019060200180831161395b57829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613a1a5780601f106139ef57610100808354040283529160200191613a1a565b820191906000526020600020905b8154815290600101906020018083116139fd57829003601f168201915b505050505081525050905086816000015182602001518360400151613a3e8b6123d6565b839350829250819150955095509550955095505091939590929450565b6000613a668261353e565b613abb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061512d602c913960400191505060405180910390fd5b6000613ac6836123d6565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480613b3557508373ffffffffffffffffffffffffffffffffffffffff16613b1d846119d2565b73ffffffffffffffffffffffffffffffffffffffff16145b80613b465750613b4581856132e2565b5b91505092915050565b613b5a8383836142cf565b613b64838261452a565b613b6e82826146c8565b505050565b613b8781600d61478f90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b660405160405180910390a250565b6000613be382600d613f7290919063ffffffff16565b9050919050565b613bfe81600c61478f90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e16560405160405180910390a250565b600081600001549050919050565b613c6681600c61484c90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b613cb58161353e565b613cbe57600080fd5b613cc781614927565b600060106000601160008154809291906001019190505581526020019081526020016000209050613cf7826123d6565b8160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550338160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508181600001819055505050565b6000613daa8473ffffffffffffffffffffffffffffffffffffffff16614b3b565b613db75760019050613f6a565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015613e92578082015181840152602081019050613e77565b50505050905090810190601f168015613ebf5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015613ee157600080fd5b505af1158015613ef5573d6000803e3d6000fd5b505050506040513d6020811015613f0b57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613ff9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806152316022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61405a8282614b4e565b61406482826146c8565b61406d81614d66565b5050565b61408581600d61484c90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f60405160405180910390a250565b8060006013600083815260200190815260200160002090508060030154816002015411614160576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f737570706c79206f766572666c6f77000000000000000000000000000000000081525060200191505060405180910390fd5b826000601360008381526020019081526020016000209050600015158160060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514614240576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f726573616c65206578697374000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000601360008781526020019081526020016000209050614264816000015461353e565b61426d57600080fd5b60018160060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050505050565b8273ffffffffffffffffffffffffffffffffffffffff166142ef826123d6565b73ffffffffffffffffffffffffffffffffffffffff161461435b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806152536029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156143e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806151096024913960400191505060405180910390fd5b6143ea81614db2565b614431600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020614e70565b614478600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020614e93565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006145826001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050614ea990919063ffffffff16565b905060006006600084815260200190815260200160002054905081811461466f576000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106145ef57fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061464757fe5b9060005260206000200181905550816006600083815260200190815260200160002081905550505b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036146c1919061505a565b5050505050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506006600083815260200190815260200160002081905550600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6147998282613f72565b6147ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806151e46021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6148568282613f72565b156148c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b80600060136000838152602001908152602001600020905080600301548160020154116149bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f737570706c79206f766572666c6f77000000000000000000000000000000000081525060200191505060405180910390fd5b826000600f60008381526020019081526020016000209050600015158160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514614a9c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f747261646520657869737400000000000000000000000000000000000000000081525060200191505060405180910390fd5b614aa58561353e565b614aae57600080fd5b6000600f6000878152602001908152602001600020905060018160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508060030160008154809291906001019190505550505050505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415614bf1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b614bfa8161353e565b15614c6d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550614d06600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020614e93565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6007805490506008600083815260200190815260200160002081905550600781908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614614e6d5760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b614e8860018260000154614ea990919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600082821115614f21576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10614f7357803560ff1916838001178555614fa1565b82800160010185558215614fa1579182015b82811115614fa0578235825591602001919060010190614f85565b5b509050614fae9190615086565b5090565b6040518060800160405280606081526020016060815260200160608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061501b57805160ff1916838001178555615049565b82800160010185558215615049579182015b8281111561504857825182559160200191906001019061502d565b5b5090506150569190615086565b5090565b815481835581811115615081578183600052602060002091820191016150809190615086565b5b505050565b6150a891905b808211156150a457600081600090555060010161508c565b5090565b9056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e57686974656c69737441646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652057686974656c69737441646d696e20726f6c654552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e57686974656c6973746564526f6c653a2063616c6c657220646f6573206e6f742068617665207468652057686974656c697374656420726f6c654552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a165627a7a723058209382af2aa8e7679352e0f875aa88a54156f0544eda7ae87c3277a14c47e2e5c60029526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x60806040526004361061023b5760003560e01c80636713ad4d1161012e578063bb5f747b116100ab578063d6cd94731161006f578063d6cd947314611512578063df696adf14611529578063e985e9c514611578578063eeb2923014611601578063ff3b0160146116f05761023b565b8063bb5f747b146111b5578063c6ce7ab81461121e578063c87b56dd146112d3578063cf40a86614611387578063d35216a2146113e25761023b565b806395d89b41116100f257806395d89b4114610eb3578063a22cb46514610f43578063aa5ddec614610fa0578063aee7e54c14610fce578063b88d4fde146110a35761023b565b80636713ad4d14610c6d57806370a0823114610c985780637362d9c814610cfd578063786f7e5714610d4e5780637cfeb18a14610e885761023b565b806323b872dd116101bc5780633b64d29a116101805780633b64d29a1461094b57806342842e0e14610b115780634c5a628c14610b8c5780634f6ccce714610ba35780636352211e14610bf25761023b565b806323b872dd14610738578063291d9549146107b35780632f745c591461080457806336c67897146108735780633af32abf146108e25761023b565b8063095ea7b311610203578063095ea7b31461044d57806310154bad146104a8578063111eb967146104f957806318160ddd146105475780631d143ff5146105725761023b565b806301ffc9a714610240578063031941ef146102b257806306661abd1461031757806306fdde0314610342578063081812fc146103d2575b600080fd5b34801561024c57600080fd5b506102986004803603602081101561026357600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061173f565b604051808215151515815260200191505060405180910390f35b3480156102be57600080fd5b50610315600480360360a08110156102d557600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291908035151590602001909291905050506117a6565b005b34801561032357600080fd5b5061032c611921565b6040518082815260200191505060405180910390f35b34801561034e57600080fd5b50610357611930565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561039757808201518184015260208101905061037c565b50505050905090810190601f1680156103c45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103de57600080fd5b5061040b600480360360208110156103f557600080fd5b81019080803590602001909291905050506119d2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561045957600080fd5b506104a66004803603604081101561047057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611a6d565b005b3480156104b457600080fd5b506104f7600480360360208110156104cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c46565b005b6105456004803603604081101561050f57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611cb0565b005b34801561055357600080fd5b5061055c611ec5565b6040518082815260200191505060405180910390f35b34801561057e57600080fd5b506105ab6004803603602081101561059557600080fd5b8101908080359060200190929190505050611ed2565b604051808681526020018060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848103845288818151815260200191508051906020019080838360005b8381101561062b578082015181840152602081019050610610565b50505050905090810190601f1680156106585780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b83811015610691578082015181840152602081019050610676565b50505050905090810190601f1680156106be5780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b838110156106f75780820151818401526020810190506106dc565b50505050905090810190601f1680156107245780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b34801561074457600080fd5b506107b16004803603606081101561075b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612004565b005b3480156107bf57600080fd5b50610802600480360360208110156107d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612073565b005b34801561081057600080fd5b5061085d6004803603604081101561082757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506120dd565b6040518082815260200191505060405180910390f35b34801561087f57600080fd5b506108ac6004803603602081101561089657600080fd5b810190808035906020019092919050505061219c565b60405180868152602001858152602001848152602001838152602001821515151581526020019550505050505060405180910390f35b3480156108ee57600080fd5b506109316004803603602081101561090557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612207565b604051808215151515815260200191505060405180910390f35b34801561095757600080fd5b506109846004803603602081101561096e57600080fd5b8101908080359060200190929190505050612219565b604051808681526020018060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848103845288818151815260200191508051906020019080838360005b83811015610a045780820151818401526020810190506109e9565b50505050905090810190601f168015610a315780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b83811015610a6a578082015181840152602081019050610a4f565b50505050905090810190601f168015610a975780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b83811015610ad0578082015181840152602081019050610ab5565b50505050905090810190601f168015610afd5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b348015610b1d57600080fd5b50610b8a60048036036060811015610b3457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061232b565b005b348015610b9857600080fd5b50610ba161234b565b005b348015610baf57600080fd5b50610bdc60048036036020811015610bc657600080fd5b8101908080359060200190929190505050612356565b6040518082815260200191505060405180910390f35b348015610bfe57600080fd5b50610c2b60048036036020811015610c1557600080fd5b81019080803590602001909291905050506123d6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610c7957600080fd5b50610c8261249e565b6040518082815260200191505060405180910390f35b348015610ca457600080fd5b50610ce760048036036020811015610cbb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506124eb565b6040518082815260200191505060405180910390f35b348015610d0957600080fd5b50610d4c60048036036020811015610d2057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125c0565b005b348015610d5a57600080fd5b50610e8660048036036080811015610d7157600080fd5b810190808035906020019092919080359060200190640100000000811115610d9857600080fd5b820183602082011115610daa57600080fd5b80359060200191846001830284011164010000000083111715610dcc57600080fd5b909192939192939080359060200190640100000000811115610ded57600080fd5b820183602082011115610dff57600080fd5b80359060200191846001830284011164010000000083111715610e2157600080fd5b909192939192939080359060200190640100000000811115610e4257600080fd5b820183602082011115610e5457600080fd5b80359060200191846001830284011164010000000083111715610e7657600080fd5b909192939192939050505061262a565b005b348015610e9457600080fd5b50610e9d61272d565b6040518082815260200191505060405180910390f35b348015610ebf57600080fd5b50610ec861277a565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610f08578082015181840152602081019050610eed565b50505050905090810190601f168015610f355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610f4f57600080fd5b50610f9e60048036036040811015610f6657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061281c565b005b610fcc60048036036020811015610fb657600080fd5b81019080803590602001909291905050506129bf565b005b348015610fda57600080fd5b5061100760048036036020811015610ff157600080fd5b8101908080359060200190929190505050612b3d565b604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018381526020018215151515815260200197505050505050505060405180910390f35b3480156110af57600080fd5b506111b3600480360360808110156110c657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561112d57600080fd5b82018360208201111561113f57600080fd5b8035906020019184600183028401116401000000008311171561116157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612bfe565b005b3480156111c157600080fd5b50611204600480360360208110156111d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612c70565b604051808215151515815260200191505060405180910390f35b34801561122a57600080fd5b506112576004803603602081101561124157600080fd5b8101908080359060200190929190505050612c8d565b604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390f35b3480156112df57600080fd5b5061130c600480360360208110156112f657600080fd5b8101908080359060200190929190505050612d05565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561134c578082015181840152602081019050611331565b50505050905090810190601f1680156113795780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561139357600080fd5b506113e0600480360360808110156113aa57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803515159060200190929190505050612e18565b005b3480156113ee57600080fd5b506115106004803603606081101561140557600080fd5b810190808035906020019064010000000081111561142257600080fd5b82018360208201111561143457600080fd5b8035906020019184600183028401116401000000008311171561145657600080fd5b90919293919293908035906020019064010000000081111561147757600080fd5b82018360208201111561148957600080fd5b803590602001918460018302840111640100000000831117156114ab57600080fd5b9091929391929390803590602001906401000000008111156114cc57600080fd5b8201836020820111156114de57600080fd5b8035906020019184600183028401116401000000008311171561150057600080fd5b9091929391929390505050612fae565b005b34801561151e57600080fd5b506115276131ba565b005b34801561153557600080fd5b506115626004803603602081101561154c57600080fd5b81019080803590602001909291905050506131c5565b6040518082815260200191505060405180910390f35b34801561158457600080fd5b506115e76004803603604081101561159b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506132e2565b604051808215151515815260200191505060405180910390f35b34801561160d57600080fd5b5061163a6004803603602081101561162457600080fd5b8101908080359060200190929190505050613376565b604051808681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405180910390f35b3480156116fc57600080fd5b506117296004803603602081101561171357600080fd5b8101908080359060200190929190505050613421565b6040518082815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b82606481111561181e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f726174696f206f766572666c6f7700000000000000000000000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1661183e876123d6565b73ffffffffffffffffffffffffffffffffffffffff161461185e57600080fd5b6118678661353e565b61187057600080fd5b6000600f60008881526020019081526020016000209050858160000181905550828160040160006101000a81548160ff02191690831515021790555084816001018190555083816002018190555060018160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050505050565b600061192b611ec5565b905090565b606060098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119c85780601f1061199d576101008083540402835291602001916119c8565b820191906000526020600020905b8154815290600101906020018083116119ab57829003601f168201915b5050505050905090565b60006119dd8261353e565b611a32576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615205602c913960400191505060405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000611a78826123d6565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611aff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806153256021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611b3f5750611b3e81336132e2565b5b611b94576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806151596038913960400191505060405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b611c4f33612c70565b611ca4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604081526020018061527c6040913960400191505060405180910390fd5b611cad816135b0565b50565b81600060136000838152602001908152602001600020905080600101543414611d41576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f726573616c65207072696365206572726f72000000000000000000000000000081525060200191505060405180910390fd5b611d4a8461361a565b600060136000868152602001908152602001600020905060166000611d7283600001546123d6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001816000015490806001815401808255809150509060018203906000526020600020016000909192909190915055506000600f6000836000015481526020019081526020016000209050611e0582600001546123d6565b73ffffffffffffffffffffffffffffffffffffffff166108fc6064836001015485600101540281611e3257fe5b049081150290604051600060405180830381858888f19350505050158015611e5e573d6000803e3d6000fd5b508473ffffffffffffffffffffffffffffffffffffffff166108fc6064836001015460640385600101540281611e9057fe5b049081150290604051600060405180830381858888f19350505050158015611ebc573d6000803e3d6000fd5b50505050505050565b6000600780549050905090565b6000606080606060008560006013600083815260200190815260200160002090508060060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611fb4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6e6f74207369676e65642c20706c6561736520757064617465496e666f00000081525060200191505060405180910390fd5b6000601360008a81526020019081526020016000209050611fd8816000015461353e565b611fe157600080fd5b611fee8160000154613752565b9750975097509750975050505091939590929450565b61200e3382613a5b565b612063576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806153466031913960400191505060405180910390fd5b61206e838383613b4f565b505050565b61207c33612c70565b6120d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604081526020018061527c6040913960400191505060405180910390fd5b6120da81613b73565b50565b60006120e8836124eb565b821061213f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806150ac602b913960400191505060405180910390fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061218957fe5b9060005260206000200154905092915050565b60008060008060006121ad8661353e565b6121b657600080fd5b6000600f6000888152602001908152602001600020905080600001548160010154826002015483600301548460040160009054906101000a900460ff16955095509550955095505091939590929450565b600061221282613bcd565b9050919050565b6000606080606060008560006013600083815260200190815260200160002090508060060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166122fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6e6f74207369676e65642c20706c6561736520757064617465496e666f00000081525060200191505060405180910390fd5b6123048861353e565b61230d57600080fd5b61231688613752565b96509650965096509650505091939590929450565b61234683838360405180602001604052806000815250612bfe565b505050565b61235433613bea565b565b6000612360611ec5565b82106123b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615377602c913960400191505060405180910390fd5b600782815481106123c457fe5b90600052602060002001549050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612495576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806151bb6029913960400191505060405180910390fd5b80915050919050565b6000601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180549050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612572576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180615191602a913960400191505060405180910390fd5b6125b9600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613c44565b9050919050565b6125c933612c70565b61261e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604081526020018061527c6040913960400191505060405180910390fd5b61262781613c52565b50565b61263333612207565b612688576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a8152602001806152eb603a913960400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166126a8886123d6565b73ffffffffffffffffffffffffffffffffffffffff16146126c857600080fd5b6000600e88815481106126d757fe5b9060005260206000209060040201905086868260000191906126fa929190614f32565b50848482600101919061270e929190614f32565b508282826002019190612722929190614f32565b505050505050505050565b6000601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180549050905090565b6060600a8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128125780601f106127e757610100808354040283529160200191612812565b820191906000526020600020905b8154815290600101906020018083116127f557829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156128be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b806000600f6000838152602001908152602001600020905080600001543414612a50576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f7472616465207072696365206572726f7200000000000000000000000000000081525060200191505060405180910390fd5b612a5983613cac565b6000600f6000858152602001908152602001600020905060126000612a7d866123d6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001849080600181540180825580915050906001820390600052602060002001600090919290919091505550612aed846123d6565b73ffffffffffffffffffffffffffffffffffffffff166108fc82600001549081150290604051600060405180830381858888f19350505050158015612b36573d6000803e3d6000fd5b5050505050565b600080600080600080600080601360008a81526020019081526020016000209050612b6b816000015461353e565b612b7457600080fd5b8060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600001548360010154846002015485600301548660050160149054906101000a900460ff16975097509750975097509750975050919395979092949650565b612c09848484612004565b612c1584848484613d89565b612c6a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806150d76032913960400191505060405180910390fd5b50505050565b6000612c8682600c613f7290919063ffffffff16565b9050919050565b60008060008060106000868152602001908152602001600020905080600001548160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16935093509350509193909250565b6060612d108261353e565b612d65576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806152bc602f913960400191505060405180910390fd5b600b60008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612e0c5780601f10612de157610100808354040283529160200191612e0c565b820191906000526020600020905b815481529060010190602001808311612def57829003601f168201915b50505050509050919050565b6000806000612e2687612c8d565b9250925092503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612e6457600080fd5b612e6d8361353e565b612e7657600080fd5b6000601360008981526020019081526020016000209050838160000181905550868160010181905550858160020181905550848160050160146101000a81548160ff021916908315150217905550828160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018160060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050505050505050565b612fb733612207565b61300c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a8152602001806152eb603a913960400191505060405180910390fd5b613014614fb2565b86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816000018190525084848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816020018190525082828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816040018190525060006001600e83908060018154018082558091505090600182039060005260206000209060040201600090919290919091506000820151816000019080519060200190613149929190614fda565b506020820151816001019080519060200190613166929190614fda565b506040820151816002019080519060200190613183929190614fda565b5060608201518160030190805190602001906131a0929190614fda565b5050500390506131b03382614050565b5050505050505050565b6131c333613b73565b565b60008180601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054905010613282576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f696e646578206f766572666c6f7700000000000000000000000000000000000081525060200191505060405180910390fd5b601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000183815481106132cf57fe5b9060005260206000200154915050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080600080600080601460008881526020019081526020016000209050806000015481600101548260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16955095509550955095505091939590929450565b60008180601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180549050106134de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f696e646578206f766572666c6f7700000000000000000000000000000000000081525060200191505060405180910390fd5b601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001838154811061352b57fe5b9060005260206000200154915050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6135b933612c70565b61360e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604081526020018061527c6040913960400191505060405180910390fd5b61361781614071565b50565b600080600061362884612c8d565b9250925092506136378361353e565b61364057600080fd5b613649846140cb565b600060146000601560008154809291906001019190505581526020019081526020016000209050838160000181905550848160010181905550828160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550338160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b6000606080606060006137648661353e565b61376d57600080fd5b613775614fb2565b600e878154811061378257fe5b9060005260206000209060040201604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156138345780601f1061380957610100808354040283529160200191613834565b820191906000526020600020905b81548152906001019060200180831161381757829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156138d65780601f106138ab576101008083540402835291602001916138d6565b820191906000526020600020905b8154815290600101906020018083116138b957829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156139785780601f1061394d57610100808354040283529160200191613978565b820191906000526020600020905b81548152906001019060200180831161395b57829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613a1a5780601f106139ef57610100808354040283529160200191613a1a565b820191906000526020600020905b8154815290600101906020018083116139fd57829003601f168201915b505050505081525050905086816000015182602001518360400151613a3e8b6123d6565b839350829250819150955095509550955095505091939590929450565b6000613a668261353e565b613abb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061512d602c913960400191505060405180910390fd5b6000613ac6836123d6565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480613b3557508373ffffffffffffffffffffffffffffffffffffffff16613b1d846119d2565b73ffffffffffffffffffffffffffffffffffffffff16145b80613b465750613b4581856132e2565b5b91505092915050565b613b5a8383836142cf565b613b64838261452a565b613b6e82826146c8565b505050565b613b8781600d61478f90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b660405160405180910390a250565b6000613be382600d613f7290919063ffffffff16565b9050919050565b613bfe81600c61478f90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e16560405160405180910390a250565b600081600001549050919050565b613c6681600c61484c90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b613cb58161353e565b613cbe57600080fd5b613cc781614927565b600060106000601160008154809291906001019190505581526020019081526020016000209050613cf7826123d6565b8160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550338160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508181600001819055505050565b6000613daa8473ffffffffffffffffffffffffffffffffffffffff16614b3b565b613db75760019050613f6a565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015613e92578082015181840152602081019050613e77565b50505050905090810190601f168015613ebf5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015613ee157600080fd5b505af1158015613ef5573d6000803e3d6000fd5b505050506040513d6020811015613f0b57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613ff9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806152316022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61405a8282614b4e565b61406482826146c8565b61406d81614d66565b5050565b61408581600d61484c90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f60405160405180910390a250565b8060006013600083815260200190815260200160002090508060030154816002015411614160576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f737570706c79206f766572666c6f77000000000000000000000000000000000081525060200191505060405180910390fd5b826000601360008381526020019081526020016000209050600015158160060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514614240576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f726573616c65206578697374000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000601360008781526020019081526020016000209050614264816000015461353e565b61426d57600080fd5b60018160060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050505050565b8273ffffffffffffffffffffffffffffffffffffffff166142ef826123d6565b73ffffffffffffffffffffffffffffffffffffffff161461435b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806152536029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156143e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806151096024913960400191505060405180910390fd5b6143ea81614db2565b614431600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020614e70565b614478600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020614e93565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006145826001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050614ea990919063ffffffff16565b905060006006600084815260200190815260200160002054905081811461466f576000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106145ef57fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061464757fe5b9060005260206000200181905550816006600083815260200190815260200160002081905550505b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036146c1919061505a565b5050505050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506006600083815260200190815260200160002081905550600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6147998282613f72565b6147ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806151e46021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6148568282613f72565b156148c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b80600060136000838152602001908152602001600020905080600301548160020154116149bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f737570706c79206f766572666c6f77000000000000000000000000000000000081525060200191505060405180910390fd5b826000600f60008381526020019081526020016000209050600015158160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514614a9c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f747261646520657869737400000000000000000000000000000000000000000081525060200191505060405180910390fd5b614aa58561353e565b614aae57600080fd5b6000600f6000878152602001908152602001600020905060018160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508060030160008154809291906001019190505550505050505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415614bf1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b614bfa8161353e565b15614c6d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550614d06600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020614e93565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6007805490506008600083815260200190815260200160002081905550600781908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614614e6d5760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b614e8860018260000154614ea990919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600082821115614f21576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10614f7357803560ff1916838001178555614fa1565b82800160010185558215614fa1579182015b82811115614fa0578235825591602001919060010190614f85565b5b509050614fae9190615086565b5090565b6040518060800160405280606081526020016060815260200160608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061501b57805160ff1916838001178555615049565b82800160010185558215615049579182015b8281111561504857825182559160200191906001019061502d565b5b5090506150569190615086565b5090565b815481835581811115615081578183600052602060002091820191016150809190615086565b5b505050565b6150a891905b808211156150a457600081600090555060010161508c565b5090565b9056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e57686974656c69737441646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652057686974656c69737441646d696e20726f6c654552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e57686974656c6973746564526f6c653a2063616c6c657220646f6573206e6f742068617665207468652057686974656c697374656420726f6c654552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a165627a7a723058209382af2aa8e7679352e0f875aa88a54156f0544eda7ae87c3277a14c47e2e5c60029",
  "sourceMap": "56:2090:11:-;;;452:155:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;529:4;535:6;718:40:19;385:10;737:20;;718:18;;;:40;;:::i;:::-;2220::23;2094:10;2239:20;;2220:18;;;:40;;:::i;:::-;1316:51:24;1131:10;1335:31;;1316:18;;;:51;;:::i;:::-;833:4:26;825:5;:12;;;;;;;;;;;;:::i;:::-;;857:6;847:7;:16;;;;;;;;;;;;:::i;:::-;;951:49;687:10;970:29;;951:18;;;:49;;:::i;:::-;753:254;;452:155:25;;433:30:16;452:10;433:18;;;:30;;:::i;:::-;56:2090:11;;1442:190:19;1532:10;1517:25;;:11;:25;;;;;1509:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1621:4;1585:20;:33;1606:11;1585:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1442:190;:::o;991:143:16:-;1055:29;1076:7;1055:16;:20;;;;;;:29;;;;:::i;:::-;1119:7;1099:28;;;;;;;;;;;;991:143;:::o;260:175:15:-;337:18;341:4;347:7;337:3;;;:18;;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;779:200::-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;56:2090:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "56:2090:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;915:133:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;915:133:19;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;554:444:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;554:444:12;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;554:444:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1729:82:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1729:82:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1112:83:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1112:83:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1112:83:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4237:200:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4237:200:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4237:200:23;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3541:411;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3541:411:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3541:411:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1815:107:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1815:107:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1815:107:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;412:500:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;412:500:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2130:94:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2130:94:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1665:341:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1665:341:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1665:341:9;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1665:341:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1665:341:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1665:341:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5877:285:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5877:285:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5877:285:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1024:114:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1024:114:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1024:114:17;;;;;;;;;;;;;;;;;;;:::i;:::-;;1748:229:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1748:229:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1748:229:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1002:411:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1002:411:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1002:411:12;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1926:112:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1926:112:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1926:112:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1598:277:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1598:277:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1598:277:12;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1598:277:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1598:277:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1598:277:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6795:132:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6795:132:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6795:132:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;894:91:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;894:91:16;;;:::i;:::-;;2562:196:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2562:196:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2562:196:24;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2897:223:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2897:223:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2897:223:23;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;689:157:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;689:157:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2471:207:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2471:207:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2471:207:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;774:114:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;774:114:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;774:114:16;;;;;;;;;;;;;;;;;;;:::i;:::-;;1005:365:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1005:365:7;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1005:365:7;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1005:365:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1005:365:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1005:365:7;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1005:365:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1005:365:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1005:365:7;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1005:365:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1005:365:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1005:365:7;;;;;;;;;;;;:::i;:::-;;916:156:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;916:156:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1304:87:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1304:87:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1304:87:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4730:243:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4730:243:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4730:243:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;392:293:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;392:293:14;;;;;;;;;;;;;;;;;:::i;:::-;;1021:455:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1021:455:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1021:455:9;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7632:265:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7632:265:23;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7632:265:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7632:265:23;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7632:265:23;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7632:265:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7632:265:23;;;;;;;;;;;;;;;:::i;:::-;;645:123:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;645:123:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;645:123:16;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;549:272:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;549:272:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;549:272:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1591:202:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1591:202:26;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1591:202:26;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1591:202:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;473:544:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;473:544:9;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;473:544:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;639:362:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;639:362:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;639:362:7;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;639:362:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;639:362:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;639:362:7;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;639:362:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;639:362:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;639:362:7;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;639:362:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;639:362:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;639:362:7;;;;;;;;;;;;:::i;:::-;;1144:85:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1144:85:17;;;:::i;:::-;;1232:199:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1232:199:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1232:199:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5295:145:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5295:145:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5295:145:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;721:345:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;721:345:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;721:345:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1004:208:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1004:208:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1004:208:14;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;915:133:19;985:4;1008:20;:33;1029:11;1008:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:40;;915:133;;;:::o;554:444:12:-;711:5;516:3;507:5;:12;;499:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;750:10;734:26;;:12;742:3;734:7;:12::i;:::-;:26;;;726:35;;;;;;775:12;783:3;775:7;:12::i;:::-;767:21;;;;;;794:25;822:8;:13;831:3;822:13;;;;;;;;;;;794:41;;855:5;841;:11;;:19;;;;882:7;866:5;:13;;;:23;;;;;;;;;;;;;;;;;;909:5;895;:11;;:19;;;;940:11;920:5;:17;;:31;;;;989:4;957:5;:17;;:29;975:10;957:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;544:1;554:444;;;;;;:::o;1729:82:7:-;1766:7;1787:19;:17;:19::i;:::-;1780:26;;1729:82;:::o;1112:83:26:-;1151:13;1183:5;1176:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:83;:::o;4237:200:23:-;4296:7;4323:16;4331:7;4323;:16::i;:::-;4315:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4406:15;:24;4422:7;4406:24;;;;;;;;;;;;;;;;;;;;;4399:31;;4237:200;;;:::o;3541:411::-;3604:13;3620:16;3628:7;3620;:16::i;:::-;3604:32;;3660:5;3654:11;;:2;:11;;;;3646:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3736:5;3722:19;;:10;:19;;;:58;;;;3745:35;3762:5;3769:10;3745:16;:35::i;:::-;3722:58;3714:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3900:2;3873:15;:24;3889:7;3873:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3937:7;3933:2;3917:28;;3926:5;3917:28;;;;;;;;;;;;3541:411;;;:::o;1815:107:7:-;524:28:16;541:10;524:16;:28::i;:::-;516:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1888:29:7;1909:7;1888:20;:29::i;:::-;1815:107;:::o;412:500:11:-;510:3;290:27;320:9;:14;330:3;320:14;;;;;;;;;;;290:44;;361:6;:12;;;348:9;:25;340:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;535:26;557:3;535:21;:26::i;:::-;567:27;597:9;:14;607:3;597:14;;;;;;;;;;;567:44;;617:15;:36;633:19;641:6;:10;;;633:7;:19::i;:::-;617:36;;;;;;;;;;;;;;;:49;;672:6;:10;;;617:66;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;617:66:11;;;;;;;;;;;;;;;;;;;;;;689:25;717:8;:20;726:6;:10;;;717:20;;;;;;;;;;;689:48;;759:19;767:6;:10;;;759:7;:19::i;:::-;743:46;;:82;821:3;806:5;:11;;;790:6;:12;;;:28;:34;;;;;;743:82;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;743:82:11;847:6;831:33;;:76;903:3;888:5;:11;;;882:3;:17;865:6;:12;;;:35;:41;;;;;;831:76;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;831:76:11;402:1;;412:500;;;;:::o;2130:94:24:-;2174:7;2200:10;:17;;;;2193:24;;2130:94;:::o;1665:341:9:-;1775:7;1791:13;1813;1835;1857:7;1751:3;1527:27;1557:9;:14;1567:3;1557:14;;;;;;;;;;;1527:44;;1585:6;:18;;:30;1604:10;1585:30;;;;;;;;;;;;;;;;;;;;;;;;;1577:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1881:27;1911:9;:14;1921:3;1911:14;;;;;;;;;;;1881:44;;1939:19;1947:6;:10;;;1939:7;:19::i;:::-;1931:28;;;;;;1972:29;1990:6;:10;;;1972:17;:29::i;:::-;1965:36;;;;;;;;;;;1665:341;;;;;;;;;:::o;5877:285:23:-;6019:39;6038:10;6050:7;6019:18;:39::i;:::-;6011:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6123:32;6137:4;6143:2;6147:7;6123:13;:32::i;:::-;5877:285;;;:::o;1024:114:17:-;524:28:16;541:10;524:16;:28::i;:::-;516:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1104:27:17;1123:7;1104:18;:27::i;:::-;1024:114;:::o;1748:229:24:-;1828:7;1863:16;1873:5;1863:9;:16::i;:::-;1855:5;:24;1847:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1944:12;:19;1957:5;1944:19;;;;;;;;;;;;;;;1964:5;1944:26;;;;;;;;;;;;;;;;1937:33;;1748:229;;;;:::o;1002:411:12:-;1089:13;1110;1131:19;1158;1185:12;1220;1228:3;1220:7;:12::i;:::-;1212:21;;;;;;1239:25;1267:8;:13;1276:3;1267:13;;;;;;;;;;;1239:41;;1301:5;:11;;;1320:5;:11;;;1339:5;:17;;;1364:5;:17;;;1389:5;:13;;;;;;;;;;;;1286:122;;;;;;;;;;;1002:411;;;;;;;:::o;1926:112:7:-;1986:4;2005:28;2025:7;2005:19;:28::i;:::-;1998:35;;1926:112;;;:::o;1598:277:12:-;1708:7;1724:13;1746;1768;1790:7;1684:3;1527:27:9;1557:9;:14;1567:3;1557:14;;;;;;;;;;;1527:44;;1585:6;:18;;:30;1604:10;1585:30;;;;;;;;;;;;;;;;;;;;;;;;;1577:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1822:12:12;1830:3;1822:7;:12::i;:::-;1814:21;;;;;;1848:22;1866:3;1848:17;:22::i;:::-;1841:29;;;;;;;;;;1598:277;;;;;;;;;:::o;6795:132:23:-;6881:39;6898:4;6904:2;6908:7;6881:39;;;;;;;;;;;;:16;:39::i;:::-;6795:132;;;:::o;894:91:16:-;945:33;967:10;945:21;:33::i;:::-;894:91::o;2562:196:24:-;2620:7;2655:13;:11;:13::i;:::-;2647:5;:21;2639:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2734:10;2745:5;2734:17;;;;;;;;;;;;;;;;2727:24;;2562:196;;;:::o;2897:223:23:-;2952:7;2971:13;2987:11;:20;2999:7;2987:20;;;;;;;;;;;;;;;;;;;;;2971:36;;3042:1;3025:19;;:5;:19;;;;3017:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3108:5;3101:12;;;2897:223;;;:::o;689:157:14:-;765:7;795:14;:26;810:10;795:26;;;;;;;;;;;;;;;:39;;:46;;;;788:53;;689:157;:::o;2471:207:23:-;2526:7;2570:1;2553:19;;:5;:19;;;;2545:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2637:34;:17;:24;2655:5;2637:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2630:41;;2471:207;;;:::o;774:114:16:-;524:28;541:10;524:16;:28::i;:::-;516:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;854:27;873:7;854:18;:27::i;:::-;774:114;:::o;1005:365:7:-;675:25:17;689:10;675:13;:25::i;:::-;667:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1208:10:7;1192:26;;:12;1200:3;1192:7;:12::i;:::-;:26;;;1184:35;;;;;;1225:29;1257:8;1266:3;1257:13;;;;;;;;;;;;;;;;;;1225:45;;1292:5;;1276:7;:13;;:21;;;;;;;:::i;:::-;;1325:11;;1303:7;:19;;:33;;;;;;;:::i;:::-;;1359:6;;1342:7;:14;;:23;;;;;;;:::i;:::-;;773:1:17;1005:365:7;;;;;;;:::o;916:156:11:-;990:7;1020:15;:27;1036:10;1020:27;;;;;;;;;;;;;;;:40;;:47;;;;1013:54;;916:156;:::o;1304:87:26:-;1345:13;1377:7;1370:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1304:87;:::o;4730:243:23:-;4815:10;4809:16;;:2;:16;;;;4801:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4903:8;4866:18;:30;4885:10;4866:30;;;;;;;;;;;;;;;:34;4897:2;4866:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4953:2;4926:40;;4941:10;4926:40;;;4957:8;4926:40;;;;;;;;;;;;;;;;;;;;;;4730:243;;:::o;392:293:14:-;468:3;275:25;303:8;:13;312:3;303:13;;;;;;;;;;;275:41;;343:5;:11;;;330:9;:24;322:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;493:25;514:3;493:20;:25::i;:::-;524;552:8;:13;561:3;552:13;;;;;;;;;;;524:41;;571:14;:28;586:12;594:3;586:7;:12::i;:::-;571:28;;;;;;;;;;;;;;;:41;;618:3;571:51;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;571:51:14;;;;;;;;;;;;;;;;;;;;;;644:12;652:3;644:7;:12::i;:::-;628:39;;:52;668:5;:11;;;628:52;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;628:52:14;382:1;392:293;;;:::o;1021:455:9:-;1109:7;1124;1139;1154;1169;1184;1199:4;1218:27;1248:9;:14;1258:3;1248:14;;;;;;;;;;;1218:44;;1276:19;1284:6;:10;;;1276:7;:19::i;:::-;1268:28;;;;;;1317:6;:12;;;;;;;;;;;;1337:6;:16;;;;;;;;;;;;1361:6;:10;;;1379:6;:12;;;1399:6;:18;;;1425:6;:18;;;1451:6;:14;;;;;;;;;;;;1302:169;;;;;;;;;;;;;;;1021:455;;;;;;;;;:::o;7632:265:23:-;7738:31;7751:4;7757:2;7761:7;7738:12;:31::i;:::-;7787:48;7810:4;7816:2;7820:7;7829:5;7787:22;:48::i;:::-;7779:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7632:265;;;;:::o;645:123:16:-;709:4;732:29;753:7;732:16;:20;;:29;;;;:::i;:::-;725:36;;645:123;;;:::o;549:272:13:-;631:7;646;661;683:34;720:7;:12;728:3;720:12;;;;;;;;;;;683:49;;753:7;:11;;;772:7;:13;;;;;;;;;;;;793:7;:17;;;;;;;;;;;;738:78;;;;;;;549:272;;;;;:::o;1591:202:26:-;1649:13;1682:16;1690:7;1682;:16::i;:::-;1674:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1767:10;:19;1778:7;1767:19;;;;;;;;;;;1760:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1591:202;;;:::o;473:544:9:-;607:11;620:13;635:17;656:22;674:3;656:17;:22::i;:::-;606:72;;;;;;705:10;692:23;;:9;:23;;;684:32;;;;;;730:12;738:3;730:7;:12::i;:::-;722:21;;;;;;749:27;779:9;:14;789:3;779:14;;;;;;;;;;;749:44;;812:3;799:6;:10;;:16;;;;836:5;821:6;:12;;:20;;;;868:11;847:6;:18;;:32;;;;902:7;885:6;:14;;;:24;;;;;;;;;;;;;;;;;;930:5;915:6;:12;;;:20;;;;;;;;;;;;;;;;;;960:9;941:6;:16;;;:28;;;;;;;;;;;;;;;;;;1008:4;975:6;:18;;:30;994:10;975:30;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;473:544;;;;;;;;:::o;639:362:7:-;675:25:17;689:10;675:13;:25::i;:::-;667:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;800:28:7;;:::i;:::-;850:5;;834:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;834:21:7;;;;;;:7;:13;;:21;;;;883:11;;861:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;861:33:7;;;;;;:7;:19;;:33;;;;917:6;;900:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;900:23:7;;;;;;:7;:14;;:23;;;;929:11;967:1;943:8;957:7;943:22;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;943:22:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:25;929:39;;974:22;980:10;992:3;974:5;:22::i;:::-;773:1:17;;639:362:7;;;;;;:::o;1144:85:17:-;1192:30;1211:10;1192:18;:30::i;:::-;1144:85::o;1232:199:11:-;1349:7;1322:5;1192;1142:15;:27;1158:10;1142:27;;;;;;;;;;;;;;;:40;;:47;;;;:55;1134:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1379:15;:27;1395:10;1379:27;;;;;;;;;;;;;;;:40;;1420:5;1379:47;;;;;;;;;;;;;;;;1372:54;;1232:199;;;;:::o;5295:145:23:-;5375:4;5398:18;:25;5417:5;5398:25;;;;;;;;;;;;;;;:35;5424:8;5398:35;;;;;;;;;;;;;;;;;;;;;;;;;5391:42;;5295:145;;;;:::o;721:345:10:-;804:7;819;834;849;864;886:35;924:7;:12;932:3;924:12;;;;;;;;;;;886:50;;957:7;:11;;;976:7;:11;;;995:7;:13;;;;;;;;;;;;1016:7;:14;;;;;;;;;;;;1038:7;:17;;;;;;;;;;;;942:119;;;;;;;;;;;721:345;;;;;;;:::o;1004:208:14:-;1131:7;1099:5;964;915:14;:26;930:10;915:26;;;;;;;;;;;;;;;:39;;:46;;;;:54;907:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1161:14;:26;1176:10;1161:26;;;;;;;;;;;;;;;:39;;1201:5;1161:46;;;;;;;;;;;;;;;;1154:53;;1004:208;;;;:::o;8092:152:23:-;8149:4;8165:13;8181:11;:20;8193:7;8181:20;;;;;;;;;;;;;;;;;;;;;8165:36;;8235:1;8218:19;;:5;:19;;;;8211:26;;;8092:152;;;:::o;910:108:17:-;524:28:16;541:10;524:16;:28::i;:::-;516:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;987:24:17;1003:7;987:15;:24::i;:::-;910:108;:::o;307:408:10:-;375:11;388:13;403:17;424:22;442:3;424:17;:22::i;:::-;374:72;;;;;;460:12;468:3;460:7;:12::i;:::-;452:21;;;;;;479:26;501:3;479:21;:26::i;:::-;511:35;549:7;:20;557:9;;:11;;;;;;;;;;;;549:20;;;;;;;;;;;511:58;;589:3;575:7;:11;;:17;;;;612:3;598:7;:11;;:17;;;;637:5;621:7;:13;;;:21;;;;;;;;;;;;;;;;;;665:9;648:7;:14;;;:26;;;;;;;;;;;;;;;;;;700:10;680:7;:17;;;:30;;;;;;;;;;;;;;;;;;307:408;;;;;:::o;1374:351:7:-;1460:7;1476:13;1498;1520;1542:7;1573:12;1581:3;1573:7;:12::i;:::-;1565:21;;;;;;1592:28;;:::i;:::-;1623:8;1632:3;1623:13;;;;;;;;;;;;;;;;;;1592:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1650:3;1655:7;:13;;;1670:7;:19;;;1691:7;:14;;;1707:12;1715:3;1707:7;:12::i;:::-;1642:78;;;;;;;;;;;;;;;;;;;;1374:351;;;;;;;:::o;8605:329:23:-;8690:4;8714:16;8722:7;8714;:16::i;:::-;8706:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8789:13;8805:16;8813:7;8805;:16::i;:::-;8789:32;;8850:5;8839:16;;:7;:16;;;:51;;;;8883:7;8859:31;;:20;8871:7;8859:11;:20::i;:::-;:31;;;8839:51;:87;;;;8894:32;8911:5;8918:7;8894:16;:32::i;:::-;8839:87;8831:96;;;8605:329;;;;:::o;3133:239:24:-;3218:38;3238:4;3244:2;3248:7;3218:19;:38::i;:::-;3267:47;3300:4;3306:7;3267:32;:47::i;:::-;3325:40;3353:2;3357:7;3325:27;:40::i;:::-;3133:239;;;:::o;1375:142:17:-;1439:29;1460:7;1439:13;:20;;:29;;;;:::i;:::-;1502:7;1483:27;;;;;;;;;;;;1375:142;:::o;787:117::-;848:4;871:26;889:7;871:13;:17;;:26;;;;:::i;:::-;864:33;;787:117;;;:::o;1140:151:16:-;1207:32;1231:7;1207:16;:23;;:32;;;;:::i;:::-;1276:7;1254:30;;;;;;;;;;;;1140:151;:::o;1063:112:18:-;1128:7;1154;:14;;;1147:21;;1063:112;;;:::o;991:143:16:-;1055:29;1076:7;1055:16;:20;;:29;;;;:::i;:::-;1119:7;1099:28;;;;;;;;;;;;991:143;:::o;265:279:13:-;339:12;347:3;339:7;:12::i;:::-;331:21;;;;;;358:25;379:3;358:20;:25::i;:::-;389:34;426:7;:20;434:9;;:11;;;;;;;;;;;;426:20;;;;;;;;;;;389:57;;468:12;476:3;468:7;:12::i;:::-;452:7;:13;;;:28;;;;;;;;;;;;;;;;;;506:10;486:7;:17;;;:30;;;;;;;;;;;;;;;;;;536:3;522:7;:11;;:17;;;;265:279;;:::o;11771:347:23:-;11892:4;11917:15;:2;:13;;;:15::i;:::-;11912:58;;11955:4;11948:11;;;;11912:58;11980:13;12012:2;11996:36;;;12033:10;12045:4;12051:7;12060:5;11996:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11996:70:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11996:70:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11996:70:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11996:70:23;;;;;;;;;;;;;;;;11980:86;;713:10;12094:16;;12084:26;;;:6;:26;;;;12076:35;;;11771:347;;;;;;;:::o;779:200:15:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;3629:196:24:-;3692:24;3704:2;3708:7;3692:11;:24::i;:::-;3727:40;3755:2;3759:7;3727:27;:40::i;:::-;3778;3810:7;3778:31;:40::i;:::-;3629:196;;:::o;1235:134:17:-;1296:26;1314:7;1296:13;:17;;:26;;;;:::i;:::-;1354:7;1337:25;;;;;;;;;;;;1235:134;:::o;2361:245:9:-;2439:3;2230:26;2259:9;:14;2269:3;2259:14;;;;;;;;;;;2230:43;;2307:5;:17;;;2287:5;:17;;;:37;2279:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2467:3;2057:27;2087:9;:14;2097:3;2087:14;;;;;;;;;;;2057:44;;2149:5;2115:39;;:6;:18;;:30;2134:10;2115:30;;;;;;;;;;;;;;;;;;;;;;;;;:39;;;2107:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2480:27;2510:9;:14;2520:3;2510:14;;;;;;;;;;;2480:44;;2538:19;2546:6;:10;;;2538:7;:19::i;:::-;2530:28;;;;;;2597:4;2564:6;:18;;:30;2583:10;2564:30;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;2177:1;2350;;2361:245;;;:::o;10751:447:23:-;10864:4;10844:24;;:16;10852:7;10844;:16::i;:::-;:24;;;10836:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10946:1;10932:16;;:2;:16;;;;10924:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11000:23;11015:7;11000:14;:23::i;:::-;11034:35;:17;:23;11052:4;11034:23;;;;;;;;;;;;;;;:33;:35::i;:::-;11079:33;:17;:21;11097:2;11079:21;;;;;;;;;;;;;;;:31;:33::i;:::-;11146:2;11123:11;:20;11135:7;11123:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11183:7;11179:2;11164:27;;11173:4;11164:27;;;;;;;;;;;;10751:447;;;:::o;6241:1128:24:-;6503:22;6528:32;6558:1;6528:12;:18;6541:4;6528:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6503:57;;6570:18;6591:17;:26;6609:7;6591:26;;;;;;;;;;;;6570:47;;6735:14;6721:10;:28;6717:323;;6765:19;6787:12;:18;6800:4;6787:18;;;;;;;;;;;;;;;6806:14;6787:34;;;;;;;;;;;;;;;;6765:56;;6869:11;6836:12;:18;6849:4;6836:18;;;;;;;;;;;;;;;6855:10;6836:30;;;;;;;;;;;;;;;:44;;;;6985:10;6952:17;:30;6970:11;6952:30;;;;;;;;;;;:43;;;;6717:323;;7126:12;:18;7139:4;7126:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6241:1128;;;;:::o;5087:183::-;5200:12;:16;5213:2;5200:16;;;;;;;;;;;;;;;:23;;;;5171:17;:26;5189:7;5171:26;;;;;;;;;;;:52;;;;5233:12;:16;5246:2;5233:16;;;;;;;;;;;;;;;5255:7;5233:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5233:30:24;;;;;;;;;;;;;;;;;;;;;;5087:183;;:::o;510:180:15:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o;260:175::-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;2221:257:12:-;2298:3;2230:26:9;2259:9;:14;2269:3;2259:14;;;;;;;;;;;2230:43;;2307:5;:17;;;2287:5;:17;;;:37;2279:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2325:3:12;1925:25;1953:8;:13;1962:3;1953:13;;;;;;;;;;;1925:41;;2013:5;1980:38;;:5;:17;;:29;1998:10;1980:29;;;;;;;;;;;;;;;;;;;;;;;;;:38;;;1972:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2346:12;2354:3;2346:7;:12::i;:::-;2338:21;;;;;;2365:25;2393:8;:13;2402:3;2393:13;;;;;;;;;;;2365:41;;2444:4;2412:5;:17;;:29;2430:10;2412:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;2454:5;:17;;;:19;;;;;;;;;;;;;2040:1;2350::9;;2221:257:12;;;:::o;542:413:31:-;602:4;805:12;914:7;902:20;894:28;;947:1;940:4;:8;933:15;;;542:413;;;:::o;9179:327:23:-;9264:1;9250:16;;:2;:16;;;;9242:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9322:16;9330:7;9322;:16::i;:::-;9321:17;9313:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9405:2;9382:11;:20;9394:7;9382:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9417:33;:17;:21;9435:2;9417:21;;;;;;;;;;;;;;;:31;:33::i;:::-;9491:7;9487:2;9466:33;;9483:1;9466:33;;;;;;;;;;;;9179:327;;:::o;5465:161:24:-;5568:10;:17;;;;5541:15;:24;5557:7;5541:24;;;;;;;;;;;:44;;;;5595:10;5611:7;5595:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5595:24:24;;;;;;;;;;;;;;;;;;;;;;5465:161;:::o;12280:171:23:-;12379:1;12343:38;;:15;:24;12359:7;12343:24;;;;;;;;;;;;;;;;;;;;;:38;;;12339:106;;12432:1;12397:15;:24;12413:7;12397:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;12339:106;12280:171;:::o;1276:108:18:-;1356:21;1375:1;1356:7;:14;;;:18;;:21;;;;:::i;:::-;1339:7;:14;;:38;;;;1276:108;:::o;1181:89::-;1262:1;1244:7;:14;;;:19;;;;;;;;;;;1181:89;:::o;1274:179:21:-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;56:2090:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./ResaleHistory.sol\";\n\ncontract ResalePurchaser is ResaleHistory {\n  struct ResalePurchaseStruct {\n    uint256[] purchaseList;\n  }\n  mapping(address => ResalePurchaseStruct) private resalePurchased;\n\n  modifier sameResalePrice(\n    uint256 tid\n  ) \n  {\n    ResaleStruct storage resale = resaleMap[tid];\n    require(msg.value == resale.price, \"resale price error\");\n    _;\n  }\n\n  function purchaseResale(\n    uint256 tid,\n    address seller\n  )\n    external\n    sameResalePrice(tid)\n    payable\n  {\n    super._purchaseResale(tid);\n    ResaleStruct storage resale = resaleMap[tid];\n    resalePurchased[ownerOf(resale.cid)].purchaseList.push(resale.cid);\n    TradeStruct storage trade = tradeMap[resale.cid];\n    address(uint160(ownerOf(resale.cid))).transfer(resale.price * (trade.ratio) / 100);\n    address(uint160(seller)).transfer(resale.price * ( 100 - trade.ratio) / 100);\n  }\n\n  function countResalePurchased() \n    public \n    view \n    returns(\n      uint256\n    ) \n  {\n    return resalePurchased[msg.sender].purchaseList.length;\n  }\n\n  modifier rangeResaleIndex(\n    uint256 index\n  ) \n  {\n    require(resalePurchased[msg.sender].purchaseList.length < index, \"index overflow\");\n    _;\n  }\n\n  function resaleAtIndex(\n    uint256 index\n  ) \n    public \n    view \n    rangeResaleIndex(index) \n    returns(\n      uint256\n    ) \n  {\n    return resalePurchased[msg.sender].purchaseList[index];\n  }\n\n  // step\n  // accounts = await web3.eth.getAccounts();\n  // i = await Purchaser.deployed()\n  // i.addWhitelisted(accounts[0]);\n  // i.isWhitelisted(accounts[0]);\n  // i.createContent(\"hello\",\"world\",\"img.png\");\n  // i.updateTradeInfo(0,100,true);\n  // i.getTradeInfo(0);\n  // i.getContent(0);\n  // i.getContent(0, {from: accounts[0]});\n  // i.getContent(0, {from: accounts[1]});\n  // i.purchase(0, {from: accounts[1], value: 100});\n  // i.getContent(0, {from: accounts[0]});\n  // i.getContent(0, {from: accounts[1]});\n  // i.createContent(\"hello2\",\"world2\",\"img2.png\");\n  // i.updateTradeInfo(1,300,true);\n  // i.purchase(1, {from: accounts[1], value: 300});\n  // i.countPurchased();\n  // i.purchaseAtIndex(1)\n\n}",
  "sourcePath": "/Users/tech/dev/prd/programming-lectures/lesson011/contracts/Product/ResalePurchaser.sol",
  "ast": {
    "absolutePath": "/Users/tech/dev/prd/programming-lectures/lesson011/contracts/Product/ResalePurchaser.sol",
    "exportedSymbols": {
      "ResalePurchaser": [
        1816
      ]
    },
    "id": 1817,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1654,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "absolutePath": "/Users/tech/dev/prd/programming-lectures/lesson011/contracts/Product/ResaleHistory.sol",
        "file": "./ResaleHistory.sol",
        "id": 1655,
        "nodeType": "ImportDirective",
        "scope": 1817,
        "sourceUnit": 1653,
        "src": "25:29:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1656,
              "name": "ResaleHistory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1652,
              "src": "84:13:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ResaleHistory_$1652",
                "typeString": "contract ResaleHistory"
              }
            },
            "id": 1657,
            "nodeType": "InheritanceSpecifier",
            "src": "84:13:11"
          }
        ],
        "contractDependencies": [
          1217,
          1528,
          1652,
          2098,
          2189,
          2317,
          2502,
          2612,
          2713,
          2723,
          3532,
          3869,
          3893,
          4022,
          4125,
          4152,
          4175
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1816,
        "linearizedBaseContracts": [
          1816,
          1652,
          1528,
          2317,
          2189,
          2098,
          1217,
          2612,
          2502,
          3893,
          4022,
          4175,
          3869,
          4152,
          3532,
          4125,
          2713,
          2723
        ],
        "name": "ResalePurchaser",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ResalePurchaser.ResalePurchaseStruct",
            "id": 1661,
            "members": [
              {
                "constant": false,
                "id": 1660,
                "name": "purchaseList",
                "nodeType": "VariableDeclaration",
                "scope": 1661,
                "src": "136:22:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 1658,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "136:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1659,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "136:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ResalePurchaseStruct",
            "nodeType": "StructDefinition",
            "scope": 1816,
            "src": "102:61:11",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1665,
            "name": "resalePurchased",
            "nodeType": "VariableDeclaration",
            "scope": 1816,
            "src": "166:64:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ResalePurchaseStruct_$1661_storage_$",
              "typeString": "mapping(address => struct ResalePurchaser.ResalePurchaseStruct)"
            },
            "typeName": {
              "id": 1664,
              "keyType": {
                "id": 1662,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "174:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "166:40:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ResalePurchaseStruct_$1661_storage_$",
                "typeString": "mapping(address => struct ResalePurchaser.ResalePurchaseStruct)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1663,
                "name": "ResalePurchaseStruct",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1661,
                "src": "185:20:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ResalePurchaseStruct_$1661_storage_ptr",
                  "typeString": "struct ResalePurchaser.ResalePurchaseStruct"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1685,
              "nodeType": "Block",
              "src": "284:124:11",
              "statements": [
                {
                  "assignments": [
                    1670
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1670,
                      "name": "resale",
                      "nodeType": "VariableDeclaration",
                      "scope": 1685,
                      "src": "290:27:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage_ptr",
                        "typeString": "struct Resale.ResaleStruct"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1669,
                        "name": "ResaleStruct",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1250,
                        "src": "290:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage_ptr",
                          "typeString": "struct Resale.ResaleStruct"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1674,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1671,
                      "name": "resaleMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1254,
                      "src": "320:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResaleStruct_$1250_storage_$",
                        "typeString": "mapping(uint256 => struct Resale.ResaleStruct storage ref)"
                      }
                    },
                    "id": 1673,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1672,
                      "name": "tid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1667,
                      "src": "330:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "320:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage",
                      "typeString": "struct Resale.ResaleStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "290:44:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1676,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4225,
                            "src": "348:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "348:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1678,
                            "name": "resale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1670,
                            "src": "361:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage_ptr",
                              "typeString": "struct Resale.ResaleStruct storage pointer"
                            }
                          },
                          "id": 1679,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1235,
                          "src": "361:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "348:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "726573616c65207072696365206572726f72",
                        "id": 1681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "375:20:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6adfbb5075e0a0ad80a4df265eb099d5ef74ba6d0103792362b2dbaa9fec26f2",
                          "typeString": "literal_string \"resale price error\""
                        },
                        "value": "resale price error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6adfbb5075e0a0ad80a4df265eb099d5ef74ba6d0103792362b2dbaa9fec26f2",
                          "typeString": "literal_string \"resale price error\""
                        }
                      ],
                      "id": 1675,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4228,
                        4229
                      ],
                      "referencedDeclaration": 4229,
                      "src": "340:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "340:56:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1683,
                  "nodeType": "ExpressionStatement",
                  "src": "340:56:11"
                },
                {
                  "id": 1684,
                  "nodeType": "PlaceholderStatement",
                  "src": "402:1:11"
                }
              ]
            },
            "documentation": null,
            "id": 1686,
            "name": "sameResalePrice",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1667,
                  "name": "tid",
                  "nodeType": "VariableDeclaration",
                  "scope": 1686,
                  "src": "265:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1666,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "265:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "259:21:11"
            },
            "src": "235:173:11",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1764,
              "nodeType": "Block",
              "src": "529:383:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1699,
                        "name": "tid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1688,
                        "src": "557:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1696,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4302,
                        "src": "535:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ResalePurchaser_$1816",
                          "typeString": "contract super ResalePurchaser"
                        }
                      },
                      "id": 1698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_purchaseResale",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1617,
                      "src": "535:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "535:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1701,
                  "nodeType": "ExpressionStatement",
                  "src": "535:26:11"
                },
                {
                  "assignments": [
                    1703
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1703,
                      "name": "resale",
                      "nodeType": "VariableDeclaration",
                      "scope": 1764,
                      "src": "567:27:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage_ptr",
                        "typeString": "struct Resale.ResaleStruct"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1702,
                        "name": "ResaleStruct",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1250,
                        "src": "567:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage_ptr",
                          "typeString": "struct Resale.ResaleStruct"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1707,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1704,
                      "name": "resaleMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1254,
                      "src": "597:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResaleStruct_$1250_storage_$",
                        "typeString": "mapping(uint256 => struct Resale.ResaleStruct storage ref)"
                      }
                    },
                    "id": 1706,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1705,
                      "name": "tid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1688,
                      "src": "607:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "597:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage",
                      "typeString": "struct Resale.ResaleStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "567:44:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1716,
                          "name": "resale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1703,
                          "src": "672:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage_ptr",
                            "typeString": "struct Resale.ResaleStruct storage pointer"
                          }
                        },
                        "id": 1717,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1233,
                        "src": "672:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1708,
                            "name": "resalePurchased",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1665,
                            "src": "617:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ResalePurchaseStruct_$1661_storage_$",
                              "typeString": "mapping(address => struct ResalePurchaser.ResalePurchaseStruct storage ref)"
                            }
                          },
                          "id": 1713,
                          "indexExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1710,
                                  "name": "resale",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1703,
                                  "src": "641:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage_ptr",
                                    "typeString": "struct Resale.ResaleStruct storage pointer"
                                  }
                                },
                                "id": 1711,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cid",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1233,
                                "src": "641:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1709,
                              "name": "ownerOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                3068
                              ],
                              "referencedDeclaration": 3068,
                              "src": "633:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 1712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "633:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "617:36:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResalePurchaseStruct_$1661_storage",
                            "typeString": "struct ResalePurchaser.ResalePurchaseStruct storage ref"
                          }
                        },
                        "id": 1714,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "purchaseList",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1660,
                        "src": "617:49:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "617:54:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "617:66:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1719,
                  "nodeType": "ExpressionStatement",
                  "src": "617:66:11"
                },
                {
                  "assignments": [
                    1721
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1721,
                      "name": "trade",
                      "nodeType": "VariableDeclaration",
                      "scope": 1764,
                      "src": "689:25:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeStruct_$1836_storage_ptr",
                        "typeString": "struct Trade.TradeStruct"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1720,
                        "name": "TradeStruct",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1836,
                        "src": "689:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeStruct_$1836_storage_ptr",
                          "typeString": "struct Trade.TradeStruct"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1726,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1722,
                      "name": "tradeMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1840,
                      "src": "717:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TradeStruct_$1836_storage_$",
                        "typeString": "mapping(uint256 => struct Trade.TradeStruct storage ref)"
                      }
                    },
                    "id": 1725,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1723,
                        "name": "resale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1703,
                        "src": "726:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage_ptr",
                          "typeString": "struct Resale.ResaleStruct storage pointer"
                        }
                      },
                      "id": 1724,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1233,
                      "src": "726:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "717:20:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeStruct_$1836_storage",
                      "typeString": "struct Trade.TradeStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "689:48:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1736,
                              "name": "resale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1703,
                              "src": "790:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage_ptr",
                                "typeString": "struct Resale.ResaleStruct storage pointer"
                              }
                            },
                            "id": 1737,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "price",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1235,
                            "src": "790:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1738,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1721,
                                  "src": "806:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeStruct_$1836_storage_ptr",
                                    "typeString": "struct Trade.TradeStruct storage pointer"
                                  }
                                },
                                "id": 1739,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ratio",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1825,
                                "src": "806:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1740,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "805:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "790:28:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 1742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "821:3:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "790:34:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1730,
                                      "name": "resale",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1703,
                                      "src": "767:6:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage_ptr",
                                        "typeString": "struct Resale.ResaleStruct storage pointer"
                                      }
                                    },
                                    "id": 1731,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "cid",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1233,
                                    "src": "767:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1729,
                                  "name": "ownerOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    3068
                                  ],
                                  "referencedDeclaration": 3068,
                                  "src": "759:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                    "typeString": "function (uint256) view returns (address)"
                                  }
                                },
                                "id": 1732,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "759:19:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "751:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint160_$",
                                "typeString": "type(uint160)"
                              },
                              "typeName": "uint160"
                            },
                            "id": 1733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "751:28:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 1727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "743:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "743:37:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "743:46:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "743:82:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1745,
                  "nodeType": "ExpressionStatement",
                  "src": "743:82:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1752,
                              "name": "resale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1703,
                              "src": "865:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage_ptr",
                                "typeString": "struct Resale.ResaleStruct storage pointer"
                              }
                            },
                            "id": 1753,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "price",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1235,
                            "src": "865:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1757,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "313030",
                                  "id": 1754,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "882:3:11",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1755,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1721,
                                    "src": "888:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TradeStruct_$1836_storage_ptr",
                                      "typeString": "struct Trade.TradeStruct storage pointer"
                                    }
                                  },
                                  "id": 1756,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "ratio",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1825,
                                  "src": "888:11:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "882:17:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1758,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "880:20:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "865:35:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 1760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "903:3:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "865:41:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1748,
                                "name": "seller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1690,
                                "src": "847:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "839:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint160_$",
                                "typeString": "type(uint160)"
                              },
                              "typeName": "uint160"
                            },
                            "id": 1749,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "839:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 1746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "831:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "831:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "831:33:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "831:76:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1763,
                  "nodeType": "ExpressionStatement",
                  "src": "831:76:11"
                }
              ]
            },
            "documentation": null,
            "id": 1765,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1693,
                    "name": "tid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1688,
                    "src": "510:3:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1694,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1692,
                  "name": "sameResalePrice",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1686,
                  "src": "494:15:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "494:20:11"
              }
            ],
            "name": "purchaseResale",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1688,
                  "name": "tid",
                  "nodeType": "VariableDeclaration",
                  "scope": 1765,
                  "src": "441:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1687,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "441:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1690,
                  "name": "seller",
                  "nodeType": "VariableDeclaration",
                  "scope": 1765,
                  "src": "458:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1689,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "435:41:11"
            },
            "returnParameters": {
              "id": 1695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "529:0:11"
            },
            "scope": 1816,
            "src": "412:500:11",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1777,
              "nodeType": "Block",
              "src": "1007:65:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1770,
                          "name": "resalePurchased",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1665,
                          "src": "1020:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ResalePurchaseStruct_$1661_storage_$",
                            "typeString": "mapping(address => struct ResalePurchaser.ResalePurchaseStruct storage ref)"
                          }
                        },
                        "id": 1773,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1771,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4225,
                            "src": "1036:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1036:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1020:27:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResalePurchaseStruct_$1661_storage",
                          "typeString": "struct ResalePurchaser.ResalePurchaseStruct storage ref"
                        }
                      },
                      "id": 1774,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "purchaseList",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1660,
                      "src": "1020:40:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 1775,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1020:47:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1769,
                  "id": 1776,
                  "nodeType": "Return",
                  "src": "1013:54:11"
                }
              ]
            },
            "documentation": null,
            "id": 1778,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "countResalePurchased",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "945:2:11"
            },
            "returnParameters": {
              "id": 1769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1768,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1778,
                  "src": "990:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1767,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "990:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "982:21:11"
            },
            "scope": 1816,
            "src": "916:156:11",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1795,
              "nodeType": "Block",
              "src": "1128:100:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1783,
                                "name": "resalePurchased",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1665,
                                "src": "1142:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ResalePurchaseStruct_$1661_storage_$",
                                  "typeString": "mapping(address => struct ResalePurchaser.ResalePurchaseStruct storage ref)"
                                }
                              },
                              "id": 1786,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1784,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4225,
                                  "src": "1158:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1785,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1158:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1142:27:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ResalePurchaseStruct_$1661_storage",
                                "typeString": "struct ResalePurchaser.ResalePurchaseStruct storage ref"
                              }
                            },
                            "id": 1787,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "purchaseList",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1660,
                            "src": "1142:40:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 1788,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1142:47:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1789,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1780,
                          "src": "1192:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1142:55:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e646578206f766572666c6f77",
                        "id": 1791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1199:16:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a63642ac19db43bf1ce38fcd827ea6bf1820fe3a26ff2241c726a45e02d2e16",
                          "typeString": "literal_string \"index overflow\""
                        },
                        "value": "index overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a63642ac19db43bf1ce38fcd827ea6bf1820fe3a26ff2241c726a45e02d2e16",
                          "typeString": "literal_string \"index overflow\""
                        }
                      ],
                      "id": 1782,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4228,
                        4229
                      ],
                      "referencedDeclaration": 4229,
                      "src": "1134:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1134:82:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1793,
                  "nodeType": "ExpressionStatement",
                  "src": "1134:82:11"
                },
                {
                  "id": 1794,
                  "nodeType": "PlaceholderStatement",
                  "src": "1222:1:11"
                }
              ]
            },
            "documentation": null,
            "id": 1796,
            "name": "rangeResaleIndex",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1780,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 1796,
                  "src": "1107:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1101:23:11"
            },
            "src": "1076:152:11",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1814,
              "nodeType": "Block",
              "src": "1366:65:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1806,
                          "name": "resalePurchased",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1665,
                          "src": "1379:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ResalePurchaseStruct_$1661_storage_$",
                            "typeString": "mapping(address => struct ResalePurchaser.ResalePurchaseStruct storage ref)"
                          }
                        },
                        "id": 1809,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1807,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4225,
                            "src": "1395:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1395:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1379:27:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResalePurchaseStruct_$1661_storage",
                          "typeString": "struct ResalePurchaser.ResalePurchaseStruct storage ref"
                        }
                      },
                      "id": 1810,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "purchaseList",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1660,
                      "src": "1379:40:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 1812,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1811,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1798,
                      "src": "1420:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1379:47:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1805,
                  "id": 1813,
                  "nodeType": "Return",
                  "src": "1372:54:11"
                }
              ]
            },
            "documentation": null,
            "id": 1815,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1801,
                    "name": "index",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1798,
                    "src": "1322:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1802,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1800,
                  "name": "rangeResaleIndex",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1796,
                  "src": "1305:16:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1305:23:11"
              }
            ],
            "name": "resaleAtIndex",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1798,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 1815,
                  "src": "1260:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1260:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1254:23:11"
            },
            "returnParameters": {
              "id": 1805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1804,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1815,
                  "src": "1349:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1803,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1341:21:11"
            },
            "scope": 1816,
            "src": "1232:199:11",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1817,
        "src": "56:2090:11"
      }
    ],
    "src": "0:2146:11"
  },
  "legacyAST": {
    "absolutePath": "/Users/tech/dev/prd/programming-lectures/lesson011/contracts/Product/ResalePurchaser.sol",
    "exportedSymbols": {
      "ResalePurchaser": [
        1816
      ]
    },
    "id": 1817,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1654,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "absolutePath": "/Users/tech/dev/prd/programming-lectures/lesson011/contracts/Product/ResaleHistory.sol",
        "file": "./ResaleHistory.sol",
        "id": 1655,
        "nodeType": "ImportDirective",
        "scope": 1817,
        "sourceUnit": 1653,
        "src": "25:29:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1656,
              "name": "ResaleHistory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1652,
              "src": "84:13:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ResaleHistory_$1652",
                "typeString": "contract ResaleHistory"
              }
            },
            "id": 1657,
            "nodeType": "InheritanceSpecifier",
            "src": "84:13:11"
          }
        ],
        "contractDependencies": [
          1217,
          1528,
          1652,
          2098,
          2189,
          2317,
          2502,
          2612,
          2713,
          2723,
          3532,
          3869,
          3893,
          4022,
          4125,
          4152,
          4175
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1816,
        "linearizedBaseContracts": [
          1816,
          1652,
          1528,
          2317,
          2189,
          2098,
          1217,
          2612,
          2502,
          3893,
          4022,
          4175,
          3869,
          4152,
          3532,
          4125,
          2713,
          2723
        ],
        "name": "ResalePurchaser",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ResalePurchaser.ResalePurchaseStruct",
            "id": 1661,
            "members": [
              {
                "constant": false,
                "id": 1660,
                "name": "purchaseList",
                "nodeType": "VariableDeclaration",
                "scope": 1661,
                "src": "136:22:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 1658,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "136:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1659,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "136:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ResalePurchaseStruct",
            "nodeType": "StructDefinition",
            "scope": 1816,
            "src": "102:61:11",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1665,
            "name": "resalePurchased",
            "nodeType": "VariableDeclaration",
            "scope": 1816,
            "src": "166:64:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ResalePurchaseStruct_$1661_storage_$",
              "typeString": "mapping(address => struct ResalePurchaser.ResalePurchaseStruct)"
            },
            "typeName": {
              "id": 1664,
              "keyType": {
                "id": 1662,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "174:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "166:40:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ResalePurchaseStruct_$1661_storage_$",
                "typeString": "mapping(address => struct ResalePurchaser.ResalePurchaseStruct)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1663,
                "name": "ResalePurchaseStruct",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1661,
                "src": "185:20:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ResalePurchaseStruct_$1661_storage_ptr",
                  "typeString": "struct ResalePurchaser.ResalePurchaseStruct"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1685,
              "nodeType": "Block",
              "src": "284:124:11",
              "statements": [
                {
                  "assignments": [
                    1670
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1670,
                      "name": "resale",
                      "nodeType": "VariableDeclaration",
                      "scope": 1685,
                      "src": "290:27:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage_ptr",
                        "typeString": "struct Resale.ResaleStruct"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1669,
                        "name": "ResaleStruct",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1250,
                        "src": "290:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage_ptr",
                          "typeString": "struct Resale.ResaleStruct"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1674,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1671,
                      "name": "resaleMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1254,
                      "src": "320:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResaleStruct_$1250_storage_$",
                        "typeString": "mapping(uint256 => struct Resale.ResaleStruct storage ref)"
                      }
                    },
                    "id": 1673,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1672,
                      "name": "tid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1667,
                      "src": "330:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "320:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage",
                      "typeString": "struct Resale.ResaleStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "290:44:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1676,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4225,
                            "src": "348:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "348:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1678,
                            "name": "resale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1670,
                            "src": "361:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage_ptr",
                              "typeString": "struct Resale.ResaleStruct storage pointer"
                            }
                          },
                          "id": 1679,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1235,
                          "src": "361:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "348:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "726573616c65207072696365206572726f72",
                        "id": 1681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "375:20:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6adfbb5075e0a0ad80a4df265eb099d5ef74ba6d0103792362b2dbaa9fec26f2",
                          "typeString": "literal_string \"resale price error\""
                        },
                        "value": "resale price error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6adfbb5075e0a0ad80a4df265eb099d5ef74ba6d0103792362b2dbaa9fec26f2",
                          "typeString": "literal_string \"resale price error\""
                        }
                      ],
                      "id": 1675,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4228,
                        4229
                      ],
                      "referencedDeclaration": 4229,
                      "src": "340:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "340:56:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1683,
                  "nodeType": "ExpressionStatement",
                  "src": "340:56:11"
                },
                {
                  "id": 1684,
                  "nodeType": "PlaceholderStatement",
                  "src": "402:1:11"
                }
              ]
            },
            "documentation": null,
            "id": 1686,
            "name": "sameResalePrice",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1667,
                  "name": "tid",
                  "nodeType": "VariableDeclaration",
                  "scope": 1686,
                  "src": "265:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1666,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "265:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "259:21:11"
            },
            "src": "235:173:11",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1764,
              "nodeType": "Block",
              "src": "529:383:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1699,
                        "name": "tid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1688,
                        "src": "557:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1696,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4302,
                        "src": "535:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ResalePurchaser_$1816",
                          "typeString": "contract super ResalePurchaser"
                        }
                      },
                      "id": 1698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_purchaseResale",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1617,
                      "src": "535:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "535:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1701,
                  "nodeType": "ExpressionStatement",
                  "src": "535:26:11"
                },
                {
                  "assignments": [
                    1703
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1703,
                      "name": "resale",
                      "nodeType": "VariableDeclaration",
                      "scope": 1764,
                      "src": "567:27:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage_ptr",
                        "typeString": "struct Resale.ResaleStruct"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1702,
                        "name": "ResaleStruct",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1250,
                        "src": "567:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage_ptr",
                          "typeString": "struct Resale.ResaleStruct"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1707,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1704,
                      "name": "resaleMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1254,
                      "src": "597:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResaleStruct_$1250_storage_$",
                        "typeString": "mapping(uint256 => struct Resale.ResaleStruct storage ref)"
                      }
                    },
                    "id": 1706,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1705,
                      "name": "tid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1688,
                      "src": "607:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "597:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage",
                      "typeString": "struct Resale.ResaleStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "567:44:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1716,
                          "name": "resale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1703,
                          "src": "672:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage_ptr",
                            "typeString": "struct Resale.ResaleStruct storage pointer"
                          }
                        },
                        "id": 1717,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1233,
                        "src": "672:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1708,
                            "name": "resalePurchased",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1665,
                            "src": "617:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ResalePurchaseStruct_$1661_storage_$",
                              "typeString": "mapping(address => struct ResalePurchaser.ResalePurchaseStruct storage ref)"
                            }
                          },
                          "id": 1713,
                          "indexExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1710,
                                  "name": "resale",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1703,
                                  "src": "641:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage_ptr",
                                    "typeString": "struct Resale.ResaleStruct storage pointer"
                                  }
                                },
                                "id": 1711,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cid",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1233,
                                "src": "641:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1709,
                              "name": "ownerOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                3068
                              ],
                              "referencedDeclaration": 3068,
                              "src": "633:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 1712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "633:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "617:36:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResalePurchaseStruct_$1661_storage",
                            "typeString": "struct ResalePurchaser.ResalePurchaseStruct storage ref"
                          }
                        },
                        "id": 1714,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "purchaseList",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1660,
                        "src": "617:49:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "617:54:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "617:66:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1719,
                  "nodeType": "ExpressionStatement",
                  "src": "617:66:11"
                },
                {
                  "assignments": [
                    1721
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1721,
                      "name": "trade",
                      "nodeType": "VariableDeclaration",
                      "scope": 1764,
                      "src": "689:25:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeStruct_$1836_storage_ptr",
                        "typeString": "struct Trade.TradeStruct"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1720,
                        "name": "TradeStruct",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1836,
                        "src": "689:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeStruct_$1836_storage_ptr",
                          "typeString": "struct Trade.TradeStruct"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1726,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1722,
                      "name": "tradeMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1840,
                      "src": "717:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TradeStruct_$1836_storage_$",
                        "typeString": "mapping(uint256 => struct Trade.TradeStruct storage ref)"
                      }
                    },
                    "id": 1725,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1723,
                        "name": "resale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1703,
                        "src": "726:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage_ptr",
                          "typeString": "struct Resale.ResaleStruct storage pointer"
                        }
                      },
                      "id": 1724,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1233,
                      "src": "726:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "717:20:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeStruct_$1836_storage",
                      "typeString": "struct Trade.TradeStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "689:48:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1736,
                              "name": "resale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1703,
                              "src": "790:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage_ptr",
                                "typeString": "struct Resale.ResaleStruct storage pointer"
                              }
                            },
                            "id": 1737,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "price",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1235,
                            "src": "790:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1738,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1721,
                                  "src": "806:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeStruct_$1836_storage_ptr",
                                    "typeString": "struct Trade.TradeStruct storage pointer"
                                  }
                                },
                                "id": 1739,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ratio",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1825,
                                "src": "806:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1740,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "805:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "790:28:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 1742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "821:3:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "790:34:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1730,
                                      "name": "resale",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1703,
                                      "src": "767:6:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage_ptr",
                                        "typeString": "struct Resale.ResaleStruct storage pointer"
                                      }
                                    },
                                    "id": 1731,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "cid",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1233,
                                    "src": "767:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1729,
                                  "name": "ownerOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    3068
                                  ],
                                  "referencedDeclaration": 3068,
                                  "src": "759:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                    "typeString": "function (uint256) view returns (address)"
                                  }
                                },
                                "id": 1732,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "759:19:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "751:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint160_$",
                                "typeString": "type(uint160)"
                              },
                              "typeName": "uint160"
                            },
                            "id": 1733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "751:28:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 1727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "743:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "743:37:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "743:46:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "743:82:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1745,
                  "nodeType": "ExpressionStatement",
                  "src": "743:82:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1752,
                              "name": "resale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1703,
                              "src": "865:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ResaleStruct_$1250_storage_ptr",
                                "typeString": "struct Resale.ResaleStruct storage pointer"
                              }
                            },
                            "id": 1753,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "price",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1235,
                            "src": "865:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1757,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "313030",
                                  "id": 1754,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "882:3:11",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1755,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1721,
                                    "src": "888:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TradeStruct_$1836_storage_ptr",
                                      "typeString": "struct Trade.TradeStruct storage pointer"
                                    }
                                  },
                                  "id": 1756,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "ratio",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1825,
                                  "src": "888:11:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "882:17:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1758,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "880:20:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "865:35:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 1760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "903:3:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "865:41:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1748,
                                "name": "seller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1690,
                                "src": "847:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "839:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint160_$",
                                "typeString": "type(uint160)"
                              },
                              "typeName": "uint160"
                            },
                            "id": 1749,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "839:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 1746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "831:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "831:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "831:33:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "831:76:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1763,
                  "nodeType": "ExpressionStatement",
                  "src": "831:76:11"
                }
              ]
            },
            "documentation": null,
            "id": 1765,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1693,
                    "name": "tid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1688,
                    "src": "510:3:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1694,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1692,
                  "name": "sameResalePrice",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1686,
                  "src": "494:15:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "494:20:11"
              }
            ],
            "name": "purchaseResale",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1688,
                  "name": "tid",
                  "nodeType": "VariableDeclaration",
                  "scope": 1765,
                  "src": "441:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1687,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "441:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1690,
                  "name": "seller",
                  "nodeType": "VariableDeclaration",
                  "scope": 1765,
                  "src": "458:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1689,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "435:41:11"
            },
            "returnParameters": {
              "id": 1695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "529:0:11"
            },
            "scope": 1816,
            "src": "412:500:11",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1777,
              "nodeType": "Block",
              "src": "1007:65:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1770,
                          "name": "resalePurchased",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1665,
                          "src": "1020:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ResalePurchaseStruct_$1661_storage_$",
                            "typeString": "mapping(address => struct ResalePurchaser.ResalePurchaseStruct storage ref)"
                          }
                        },
                        "id": 1773,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1771,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4225,
                            "src": "1036:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1036:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1020:27:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResalePurchaseStruct_$1661_storage",
                          "typeString": "struct ResalePurchaser.ResalePurchaseStruct storage ref"
                        }
                      },
                      "id": 1774,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "purchaseList",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1660,
                      "src": "1020:40:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 1775,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1020:47:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1769,
                  "id": 1776,
                  "nodeType": "Return",
                  "src": "1013:54:11"
                }
              ]
            },
            "documentation": null,
            "id": 1778,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "countResalePurchased",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "945:2:11"
            },
            "returnParameters": {
              "id": 1769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1768,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1778,
                  "src": "990:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1767,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "990:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "982:21:11"
            },
            "scope": 1816,
            "src": "916:156:11",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1795,
              "nodeType": "Block",
              "src": "1128:100:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1783,
                                "name": "resalePurchased",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1665,
                                "src": "1142:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ResalePurchaseStruct_$1661_storage_$",
                                  "typeString": "mapping(address => struct ResalePurchaser.ResalePurchaseStruct storage ref)"
                                }
                              },
                              "id": 1786,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1784,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4225,
                                  "src": "1158:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1785,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1158:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1142:27:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ResalePurchaseStruct_$1661_storage",
                                "typeString": "struct ResalePurchaser.ResalePurchaseStruct storage ref"
                              }
                            },
                            "id": 1787,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "purchaseList",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1660,
                            "src": "1142:40:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 1788,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1142:47:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1789,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1780,
                          "src": "1192:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1142:55:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e646578206f766572666c6f77",
                        "id": 1791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1199:16:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a63642ac19db43bf1ce38fcd827ea6bf1820fe3a26ff2241c726a45e02d2e16",
                          "typeString": "literal_string \"index overflow\""
                        },
                        "value": "index overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a63642ac19db43bf1ce38fcd827ea6bf1820fe3a26ff2241c726a45e02d2e16",
                          "typeString": "literal_string \"index overflow\""
                        }
                      ],
                      "id": 1782,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4228,
                        4229
                      ],
                      "referencedDeclaration": 4229,
                      "src": "1134:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1134:82:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1793,
                  "nodeType": "ExpressionStatement",
                  "src": "1134:82:11"
                },
                {
                  "id": 1794,
                  "nodeType": "PlaceholderStatement",
                  "src": "1222:1:11"
                }
              ]
            },
            "documentation": null,
            "id": 1796,
            "name": "rangeResaleIndex",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1780,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 1796,
                  "src": "1107:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1101:23:11"
            },
            "src": "1076:152:11",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1814,
              "nodeType": "Block",
              "src": "1366:65:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1806,
                          "name": "resalePurchased",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1665,
                          "src": "1379:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ResalePurchaseStruct_$1661_storage_$",
                            "typeString": "mapping(address => struct ResalePurchaser.ResalePurchaseStruct storage ref)"
                          }
                        },
                        "id": 1809,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1807,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4225,
                            "src": "1395:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1395:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1379:27:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResalePurchaseStruct_$1661_storage",
                          "typeString": "struct ResalePurchaser.ResalePurchaseStruct storage ref"
                        }
                      },
                      "id": 1810,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "purchaseList",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1660,
                      "src": "1379:40:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 1812,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1811,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1798,
                      "src": "1420:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1379:47:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1805,
                  "id": 1813,
                  "nodeType": "Return",
                  "src": "1372:54:11"
                }
              ]
            },
            "documentation": null,
            "id": 1815,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1801,
                    "name": "index",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1798,
                    "src": "1322:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1802,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1800,
                  "name": "rangeResaleIndex",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1796,
                  "src": "1305:16:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1305:23:11"
              }
            ],
            "name": "resaleAtIndex",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1798,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 1815,
                  "src": "1260:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1260:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1254:23:11"
            },
            "returnParameters": {
              "id": 1805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1804,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1815,
                  "src": "1349:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1803,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1341:21:11"
            },
            "scope": 1816,
            "src": "1232:199:11",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1817,
        "src": "56:2090:11"
      }
    ],
    "src": "0:2146:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xb1910B59de87d58ABE43d719b0009380735611c7",
      "transactionHash": "0x1960daa799d6448ab77f30aa17b5f8096c8e246743ab9e0fd24c8ced071204de"
    }
  },
  "schemaVersion": "3.0.10",
  "updatedAt": "2019-06-09T14:11:15.659Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}