{
  "contractName": "Resale",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "count",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "cid",
          "type": "uint256"
        }
      ],
      "name": "getTradeInfo",
      "outputs": [
        {
          "name": "price",
          "type": "uint256"
        },
        {
          "name": "publish",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceWhitelistAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "countTradePurchased",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelistAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "cid",
          "type": "uint256"
        },
        {
          "name": "title",
          "type": "string"
        },
        {
          "name": "description",
          "type": "string"
        },
        {
          "name": "imgsrc",
          "type": "string"
        }
      ],
      "name": "updateContent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "cid",
          "type": "uint256"
        },
        {
          "name": "price",
          "type": "uint256"
        },
        {
          "name": "publish",
          "type": "bool"
        }
      ],
      "name": "updateTradeInfo",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "cid",
          "type": "uint256"
        }
      ],
      "name": "purchaseTrade",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelistAdmin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "title",
          "type": "string"
        },
        {
          "name": "description",
          "type": "string"
        },
        {
          "name": "imgsrc",
          "type": "string"
        }
      ],
      "name": "createContent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tradeAtIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistedAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistedRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistAdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistAdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "cid",
          "type": "uint256"
        },
        {
          "name": "price",
          "type": "uint256"
        },
        {
          "name": "publish",
          "type": "bool"
        }
      ],
      "name": "updateResaleInfo",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "cid",
          "type": "uint256"
        }
      ],
      "name": "getResaleInfo",
      "outputs": [
        {
          "name": "price",
          "type": "uint256"
        },
        {
          "name": "publish",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "cid",
          "type": "uint256"
        }
      ],
      "name": "getContent",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cid\",\"type\":\"uint256\"}],\"name\":\"getContent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cid\",\"type\":\"uint256\"}],\"name\":\"getTradeInfo\",\"outputs\":[{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"publish\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceWhitelistAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countTradePurchased\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addWhitelistAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cid\",\"type\":\"uint256\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"imgsrc\",\"type\":\"string\"}],\"name\":\"updateContent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cid\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"publish\",\"type\":\"bool\"}],\"name\":\"updateTradeInfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cid\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"publish\",\"type\":\"bool\"}],\"name\":\"updateResaleInfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cid\",\"type\":\"uint256\"}],\"name\":\"purchaseTrade\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cid\",\"type\":\"uint256\"}],\"name\":\"getResaleInfo\",\"outputs\":[{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"publish\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelistAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"imgsrc\",\"type\":\"string\"}],\"name\":\"createContent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tradeAtIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistedAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistedRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistAdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistAdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/tech/dev/prd/programming-lectures/lesson011/contracts/Product/Resale.sol\":\"Resale\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/tech/dev/prd/programming-lectures/lesson011/contracts/Product/Article.sol\":{\"keccak256\":\"0x07b55d2fe20ce16265daafe2486c2dd4ab1a75e5035290a629dfae189c9ca9dc\",\"urls\":[\"bzzr://550e13764dbab28652bd37674c5b6f3797f90018caf4164993bc36796d2275c1\"]},\"/Users/tech/dev/prd/programming-lectures/lesson011/contracts/Product/Resale.sol\":{\"keccak256\":\"0xbd52462bee5f3830ff8adbc0f0a77cd6083729c602a53f870beaaccf8a9e6057\",\"urls\":[\"bzzr://33af110cd90cc2b561b93e77d6ecef2b8dad92a89e8d011f1f4689f4cb0641ad\"]},\"/Users/tech/dev/prd/programming-lectures/lesson011/contracts/Product/Trade.sol\":{\"keccak256\":\"0x05fd734ef4295b080e8ec368acc1d68efb14dfc19cb3369100adf52665d9e108\",\"urls\":[\"bzzr://8a3a66cd462749ea1ddb6de4b935f690fbdfb12cd9025e2eedcaa31ee37ddac9\"]},\"/Users/tech/dev/prd/programming-lectures/lesson011/contracts/Product/TradePurchaser.sol\":{\"keccak256\":\"0x45adf9e09abe1a27e97e2cc5f62627a17718d576057c3df43d6ac4a73e26f730\",\"urls\":[\"bzzr://9308f967ddac9fc07b7e27f107e36d6ec91f14df1228657245e1ce6a69c08e5b\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzzr://bd34c1ce05b5b2b3a62fc02e160f6805b1cadd476854664f433c685b2fda8dad\"]},\"openzeppelin-solidity/contracts/access/roles/WhitelistAdminRole.sol\":{\"keccak256\":\"0xd2c87384e7346f702df3be70e99fff30f22f7b9767a9502afb345f0457ddf36f\",\"urls\":[\"bzzr://3f300be02f06cae39a29cdf6d4f1d6b3faedf818c83c5623a512e189bdad690a\"]},\"openzeppelin-solidity/contracts/access/roles/WhitelistedRole.sol\":{\"keccak256\":\"0x110b2fab50ea257de28a8d2b03e05dc11b9e5213841dabfe784aacca8c109cda\",\"urls\":[\"bzzr://a7085973dd319349c9cfd1323e560bddc5e1db25959fd0198b2db1bd02631f72\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5eb69360d3441ab2ee799bd7c007cccbffb0896f12b2dfe1456193e2aa180a11\",\"urls\":[\"bzzr://ecd0352164978c418c8f5b0080c972b65e4b07f6afc593fb7cdd856185a458ea\"]},\"openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xac2eacd7e7762e275442f28f21d821544df5aae2ed7698af13be8c41b7005e2e\",\"urls\":[\"bzzr://43e901f6f210568ebc1d3591da3ce6a9d10796b854767a9c6e3da10305a8a332\"]},\"openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x661553e43d7c4fbb2de504e5999fd5c104d367488350ed5bf023031bd1ba5ac5\",\"urls\":[\"bzzr://fc2ba15143ce3a00268ecd15fc98eb2469b18bfe27a64bbab0ac6446f161c739\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xf79fb10e8235770eb4aea7249034076a3cc9f9119ad944fc48705bae9c9d20dc\",\"urls\":[\"bzzr://d12a11272051eb6586de8f7e0a82c04a98c9984ce8b2a6cf1ee439f65aba29a9\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xf151df411bbf4eaef1fc8e8480cd10c2cd985f1a36517e63981517610213efc1\",\"urls\":[\"bzzr://9bca20c0c1208be8f31fc7a73faccd2fca4c5f84dc0a432ae2e066970551db34\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0xb42cb5a7471d98114af8f7050e7d08dfd543f432713a8aee72a45ce9485f5bed\",\"urls\":[\"bzzr://b0d4d8eb319d67dc4b5def23d48a84806dcd6492782c176309da449903e58766\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0x908d0d6fd8d30cffb1fe9fce1f7db6802cb885fbe88d2f170539e8dcc6afa946\",\"urls\":[\"bzzr://691f4df66b5aa95410d8205f7afcd90e5f066d13513392ab797b2c9ce2f4f669\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0xe5e28b1a405164faa98f8ecd8ed2b00907b89e3d58b2b2bb8ac8b12bc5714489\",\"urls\":[\"bzzr://5a804c3710e9eca0a111db4536b0c5d23bf4a66734a9856f3df2992900ed8f28\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xce48937a8007c580b8e2e35705738c922dd17540de89ebee6df06d2917a3f9fc\",\"urls\":[\"bzzr://de494d3843e2c151aa108782382720b5d9f4531f0aa620a4244ca12fc1f8a780\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x5c573acd6c7b98d71f3c1c44d63dc17400b0fd7b26a52c9fded43b8b533dc4ec\",\"urls\":[\"bzzr://8f483b76debd9f5948c445dcb83dac4c8b4881218776a6cd43ca07bd62f647de\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x2b2b99dc7fe8fcd1f9427d00822b99cbc683dc21f5dd7532bd7e2281fd2c2ca2\",\"urls\":[\"bzzr://b89c69b072072e7fa1c8da973f82c7b28a64fb6bdc1e47626fedc89050ae783c\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xadbfb7028fb0f851dc848a48b9e54e7c89ffd2c2edc12fa4ba9bb383dfaa83d9\",\"urls\":[\"bzzr://2466b6491600969dd9ffdeb0b705e7cecc38418aa215cec64b2481273bba9076\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzzr://f7f6da60a184233fd666ac44e6fb2bd51ca6ebdc4867a310d368049aa4e62786\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280601281526020017f4169726520566f6963652041727469636c6500000000000000000000000000008152506040518060400160405280600381526020017f414941000000000000000000000000000000000000000000000000000000000081525081816200008a6301ffc9a760e01b6200011f60201b60201c565b620000a26380ac58cd60e01b6200011f60201b60201c565b620000ba63780e9d6360e01b6200011f60201b60201c565b8160099080519060200190620000d29291906200044d565b5080600a9080519060200190620000eb9291906200044d565b5062000104635b5e139f60e01b6200011f60201b60201c565b5050505062000119336200022860201b60201c565b620004fc565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620001bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6200024381600c6200028960201b620038d31790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b6200029b82826200036d60201b60201c565b156200030f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620003f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806200474d6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200049057805160ff1916838001178555620004c1565b82800160010185558215620004c1579182015b82811115620004c0578251825591602001919060010190620004a3565b5b509050620004d09190620004d4565b5090565b620004f991905b80821115620004f5576000816000905550600101620004db565b5090565b90565b614241806200050c6000396000f3fe6080604052600436106101f95760003560e01c80636713ad4d1161010d578063aa5ddec6116100a0578063c87b56dd1161006f578063c87b56dd14610f4a578063d35216a214610ffe578063d6cd94731461112e578063e985e9c514611145578063ff3b0160146111ce576101f9565b8063aa5ddec614610d47578063aee7e54c14610d75578063b88d4fde14610dcf578063bb5f747b14610ee1576101f9565b80639570dc06116100dc5780639570dc0614610bb857806395d89b4114610c095780639e302ad814610c99578063a22cb46514610cea576101f9565b80636713ad4d1461099d57806370a08231146109c85780637362d9c814610a2d578063786f7e5714610a7e576101f9565b806323b872dd116101905780633af32abf1161015f5780633af32abf146107d857806342842e0e146108415780634c5a628c146108bc5780634f6ccce7146108d35780636352211e14610922576101f9565b806323b872dd14610643578063291d9549146106be5780632f745c591461070f57806336c678971461077e576101f9565b8063095ea7b3116101cc578063095ea7b3146103a65780630b7ad54c1461040157806310154bad146105c757806318160ddd14610618576101f9565b806301ffc9a7146101fe57806306661abd1461027057806306fdde031461029b578063081812fc1461032b575b600080fd5b34801561020a57600080fd5b506102566004803603602081101561022157600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061121d565b604051808215151515815260200191505060405180910390f35b34801561027c57600080fd5b50610285611284565b6040518082815260200191505060405180910390f35b3480156102a757600080fd5b506102b0611293565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102f05780820151818401526020810190506102d5565b50505050905090810190601f16801561031d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561033757600080fd5b506103646004803603602081101561034e57600080fd5b8101908080359060200190929190505050611335565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103b257600080fd5b506103ff600480360360408110156103c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113d0565b005b34801561040d57600080fd5b5061043a6004803603602081101561042457600080fd5b81019080803590602001909291905050506115a9565b604051808681526020018060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848103845288818151815260200191508051906020019080838360005b838110156104ba57808201518184015260208101905061049f565b50505050905090810190601f1680156104e75780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b83811015610520578082015181840152602081019050610505565b50505050905090810190601f16801561054d5780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b8381101561058657808201518184015260208101905061056b565b50505050905090810190601f1680156105b35780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b3480156105d357600080fd5b50610616600480360360208110156105ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116bb565b005b34801561062457600080fd5b5061062d611725565b6040518082815260200191505060405180910390f35b34801561064f57600080fd5b506106bc6004803603606081101561066657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611732565b005b3480156106ca57600080fd5b5061070d600480360360208110156106e157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117a1565b005b34801561071b57600080fd5b506107686004803603604081101561073257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061180b565b6040518082815260200191505060405180910390f35b34801561078a57600080fd5b506107b7600480360360208110156107a157600080fd5b81019080803590602001909291905050506118ca565b60405180838152602001821515151581526020019250505060405180910390f35b3480156107e457600080fd5b50610827600480360360208110156107fb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611917565b604051808215151515815260200191505060405180910390f35b34801561084d57600080fd5b506108ba6004803603606081101561086457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611929565b005b3480156108c857600080fd5b506108d1611949565b005b3480156108df57600080fd5b5061090c600480360360208110156108f657600080fd5b8101908080359060200190929190505050611954565b6040518082815260200191505060405180910390f35b34801561092e57600080fd5b5061095b6004803603602081101561094557600080fd5b81019080803590602001909291905050506119d4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156109a957600080fd5b506109b2611a9c565b6040518082815260200191505060405180910390f35b3480156109d457600080fd5b50610a17600480360360208110156109eb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ae6565b6040518082815260200191505060405180910390f35b348015610a3957600080fd5b50610a7c60048036036020811015610a5057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bbb565b005b348015610a8a57600080fd5b50610bb660048036036080811015610aa157600080fd5b810190808035906020019092919080359060200190640100000000811115610ac857600080fd5b820183602082011115610ada57600080fd5b80359060200191846001830284011164010000000083111715610afc57600080fd5b909192939192939080359060200190640100000000811115610b1d57600080fd5b820183602082011115610b2f57600080fd5b80359060200191846001830284011164010000000083111715610b5157600080fd5b909192939192939080359060200190640100000000811115610b7257600080fd5b820183602082011115610b8457600080fd5b80359060200191846001830284011164010000000083111715610ba657600080fd5b9091929391929390505050611c25565b005b348015610bc457600080fd5b50610c0760048036036060811015610bdb57600080fd5b810190808035906020019092919080359060200190929190803515159060200190929190505050611d28565b005b348015610c1557600080fd5b50610c1e611e16565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c5e578082015181840152602081019050610c43565b50505050905090810190601f168015610c8b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610ca557600080fd5b50610ce860048036036060811015610cbc57600080fd5b810190808035906020019092919080359060200190929190803515159060200190929190505050611eb8565b005b348015610cf657600080fd5b50610d4560048036036040811015610d0d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611fa6565b005b610d7360048036036020811015610d5d57600080fd5b8101908080359060200190929190505050612149565b005b348015610d8157600080fd5b50610dae60048036036020811015610d9857600080fd5b81019080803590602001909291905050506122c4565b60405180838152602001821515151581526020019250505060405180910390f35b348015610ddb57600080fd5b50610edf60048036036080811015610df257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610e5957600080fd5b820183602082011115610e6b57600080fd5b80359060200191846001830284011164010000000083111715610e8d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612311565b005b348015610eed57600080fd5b50610f3060048036036020811015610f0457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612383565b604051808215151515815260200191505060405180910390f35b348015610f5657600080fd5b50610f8360048036036020811015610f6d57600080fd5b81019080803590602001909291905050506123a0565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610fc3578082015181840152602081019050610fa8565b50505050905090810190601f168015610ff05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561100a57600080fd5b5061112c6004803603606081101561102157600080fd5b810190808035906020019064010000000081111561103e57600080fd5b82018360208201111561105057600080fd5b8035906020019184600183028401116401000000008311171561107257600080fd5b90919293919293908035906020019064010000000081111561109357600080fd5b8201836020820111156110a557600080fd5b803590602001918460018302840111640100000000831117156110c757600080fd5b9091929391929390803590602001906401000000008111156110e857600080fd5b8201836020820111156110fa57600080fd5b8035906020019184600183028401116401000000008311171561111c57600080fd5b90919293919293905050506124b3565b005b34801561113a57600080fd5b506111436126bf565b005b34801561115157600080fd5b506111b46004803603604081101561116857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506126ca565b604051808215151515815260200191505060405180910390f35b3480156111da57600080fd5b50611207600480360360208110156111f157600080fd5b810190808035906020019092919050505061275e565b6040518082815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b600061128e611725565b905090565b606060098054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561132b5780601f106113005761010080835404028352916020019161132b565b820191906000526020600020905b81548152906001019060200180831161130e57829003601f168201915b5050505050905090565b600061134082612875565b611395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180614078602c913960400191505060405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006113db826119d4565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611462576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806141986021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806114a257506114a181336126ca565b5b6114f7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180613fcc6038913960400191505060405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000606080606060008560006011600083815260200190815260200160002090508060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661168b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6e6f74207369676e65642c20706c6561736520757064617465496e666f00000081525060200191505060405180910390fd5b61169488612875565b61169d57600080fd5b6116a6886128e7565b96509650965096509650505091939590929450565b6116c433612383565b611719576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260408152602001806140ef6040913960400191505060405180910390fd5b61172281612bf0565b50565b6000600780549050905090565b61173c3382612c5a565b611791576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806141b96031913960400191505060405180910390fd5b61179c838383612d4e565b505050565b6117aa33612383565b6117ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260408152602001806140ef6040913960400191505060405180910390fd5b61180881612d72565b50565b600061181683611ae6565b821061186d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613f1f602b913960400191505060405180910390fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106118b757fe5b9060005260206000200154905092915050565b6000806118d683612875565b6118df57600080fd5b6000600f6000858152602001908152602001600020905080600001548160010160009054906101000a900460ff169250925050915091565b600061192282612dcc565b9050919050565b61194483838360405180602001604052806000815250612311565b505050565b61195233612de9565b565b600061195e611725565b82106119b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806141ea602c913960400191505060405180910390fd5b600782815481106119c257fe5b90600052602060002001549050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a93576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602981526020018061402e6029913960400191505060405180910390fd5b80915050919050565b6000601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b6d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180614004602a913960400191505060405180910390fd5b611bb4600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612e43565b9050919050565b611bc433612383565b611c19576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260408152602001806140ef6040913960400191505060405180910390fd5b611c2281612e51565b50565b611c2e33611917565b611c83576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a81526020018061415e603a913960400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16611ca3886119d4565b73ffffffffffffffffffffffffffffffffffffffff1614611cc357600080fd5b6000600e8881548110611cd257fe5b906000526020600020906004020190508686826000019190611cf5929190613da5565b508484826001019190611d09929190613da5565b508282826002019190611d1d929190613da5565b505050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff16611d48846119d4565b73ffffffffffffffffffffffffffffffffffffffff1614611d6857600080fd5b611d7183612875565b611d7a57600080fd5b6000600f60008581526020019081526020016000209050828160000181905550818160010160006101000a81548160ff02191690831515021790555060018160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050565b6060600a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611eae5780601f10611e8357610100808354040283529160200191611eae565b820191906000526020600020905b815481529060010190602001808311611e9157829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff16611ed8846119d4565b73ffffffffffffffffffffffffffffffffffffffff1614611ef857600080fd5b611f0183612875565b611f0a57600080fd5b6000601160008581526020019081526020016000209050828160000181905550818160010160006101000a81548160ff02191690831515021790555060018160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612048576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b806000600f60008381526020019081526020016000209050806000015434146121da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f7472616465207072696365206572726f7200000000000000000000000000000081525060200191505060405180910390fd5b6121e383612eab565b6000600f6000858152602001908152602001600020905060106000612207866119d4565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020849080600181540180825580915050906001820390600052602060002001600090919290919091505550612274846119d4565b73ffffffffffffffffffffffffffffffffffffffff166108fc82600001549081150290604051600060405180830381858888f193505050501580156122bd573d6000803e3d6000fd5b5050505050565b6000806122d083612875565b6122d957600080fd5b600060116000858152602001908152602001600020905080600001548160010160009054906101000a900460ff169250925050915091565b61231c848484611732565b61232884848484613014565b61237d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180613f4a6032913960400191505060405180910390fd5b50505050565b600061239982600c6131fd90919063ffffffff16565b9050919050565b60606123ab82612875565b612400576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061412f602f913960400191505060405180910390fd5b600b60008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124a75780601f1061247c576101008083540402835291602001916124a7565b820191906000526020600020905b81548152906001019060200180831161248a57829003601f168201915b50505050509050919050565b6124bc33611917565b612511576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a81526020018061415e603a913960400191505060405180910390fd5b612519613e25565b86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816000018190525084848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816020018190525082828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816040018190525060006001600e8390806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061264e929190613e4d565b50602082015181600101908051906020019061266b929190613e4d565b506040820151816002019080519060200190612688929190613e4d565b5060608201518160030190805190602001906126a5929190613e4d565b5050500390506126b533826132db565b5050505050505050565b6126c833612d72565b565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008180601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905010612818576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f696e646578206f766572666c6f7700000000000000000000000000000000000081525060200191505060405180910390fd5b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061286257fe5b9060005260206000200154915050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000606080606060006128f986612875565b61290257600080fd5b61290a613e25565b600e878154811061291757fe5b9060005260206000209060040201604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156129c95780601f1061299e576101008083540402835291602001916129c9565b820191906000526020600020905b8154815290600101906020018083116129ac57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612a6b5780601f10612a4057610100808354040283529160200191612a6b565b820191906000526020600020905b815481529060010190602001808311612a4e57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612b0d5780601f10612ae257610100808354040283529160200191612b0d565b820191906000526020600020905b815481529060010190602001808311612af057829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612baf5780601f10612b8457610100808354040283529160200191612baf565b820191906000526020600020905b815481529060010190602001808311612b9257829003601f168201915b505050505081525050905086816000015182602001518360400151612bd38b6119d4565b839350829250819150955095509550955095505091939590929450565b612bf933612383565b612c4e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260408152602001806140ef6040913960400191505060405180910390fd5b612c57816132fc565b50565b6000612c6582612875565b612cba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180613fa0602c913960400191505060405180910390fd5b6000612cc5836119d4565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612d3457508373ffffffffffffffffffffffffffffffffffffffff16612d1c84611335565b73ffffffffffffffffffffffffffffffffffffffff16145b80612d455750612d4481856126ca565b5b91505092915050565b612d59838383613356565b612d6383826135b1565b612d6d828261374f565b505050565b612d8681600d61381690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b660405160405180910390a250565b6000612de282600d6131fd90919063ffffffff16565b9050919050565b612dfd81600c61381690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e16560405160405180910390a250565b600081600001549050919050565b612e6581600c6138d390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b806000600f60008381526020019081526020016000209050600015158160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514612f8b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f747261646520657869737400000000000000000000000000000000000000000081525060200191505060405180910390fd5b612f9483612875565b612f9d57600080fd5b6000600f6000858152602001908152602001600020905060018160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050565b60006130358473ffffffffffffffffffffffffffffffffffffffff166139ae565b61304257600190506131f5565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561311d578082015181840152602081019050613102565b50505050905090810190601f16801561314a5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561316c57600080fd5b505af1158015613180573d6000803e3d6000fd5b505050506040513d602081101561319657600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613284576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806140a46022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6132e582826139c1565b6132ef828261374f565b6132f881613bd9565b5050565b61331081600d6138d390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f60405160405180910390a250565b8273ffffffffffffffffffffffffffffffffffffffff16613376826119d4565b73ffffffffffffffffffffffffffffffffffffffff16146133e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806140c66029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613468576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180613f7c6024913960400191505060405180910390fd5b61347181613c25565b6134b8600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613ce3565b6134ff600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613d06565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006136096001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050613d1c90919063ffffffff16565b90506000600660008481526020019081526020016000205490508181146136f6576000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061367657fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106136ce57fe5b9060005260206000200181905550816006600083815260200190815260200160002081905550505b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036137489190613ecd565b5050505050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506006600083815260200190815260200160002081905550600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b61382082826131fd565b613875576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806140576021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6138dd82826131fd565b15613950576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613a64576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b613a6d81612875565b15613ae0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613b79600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613d06565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6007805490506008600083815260200190815260200160002081905550600781908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613ce05760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b613cfb60018260000154613d1c90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600082821115613d94576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613de657803560ff1916838001178555613e14565b82800160010185558215613e14579182015b82811115613e13578235825591602001919060010190613df8565b5b509050613e219190613ef9565b5090565b6040518060800160405280606081526020016060815260200160608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613e8e57805160ff1916838001178555613ebc565b82800160010185558215613ebc579182015b82811115613ebb578251825591602001919060010190613ea0565b5b509050613ec99190613ef9565b5090565b815481835581811115613ef457818360005260206000209182019101613ef39190613ef9565b5b505050565b613f1b91905b80821115613f17576000816000905550600101613eff565b5090565b9056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e57686974656c69737441646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652057686974656c69737441646d696e20726f6c654552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e57686974656c6973746564526f6c653a2063616c6c657220646f6573206e6f742068617665207468652057686974656c697374656420726f6c654552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a165627a7a723058205d6d0c46981e9d2498b9bc0741a511525c1382cdc65b13c44efe03ffd3f9c8830029526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x6080604052600436106101f95760003560e01c80636713ad4d1161010d578063aa5ddec6116100a0578063c87b56dd1161006f578063c87b56dd14610f4a578063d35216a214610ffe578063d6cd94731461112e578063e985e9c514611145578063ff3b0160146111ce576101f9565b8063aa5ddec614610d47578063aee7e54c14610d75578063b88d4fde14610dcf578063bb5f747b14610ee1576101f9565b80639570dc06116100dc5780639570dc0614610bb857806395d89b4114610c095780639e302ad814610c99578063a22cb46514610cea576101f9565b80636713ad4d1461099d57806370a08231146109c85780637362d9c814610a2d578063786f7e5714610a7e576101f9565b806323b872dd116101905780633af32abf1161015f5780633af32abf146107d857806342842e0e146108415780634c5a628c146108bc5780634f6ccce7146108d35780636352211e14610922576101f9565b806323b872dd14610643578063291d9549146106be5780632f745c591461070f57806336c678971461077e576101f9565b8063095ea7b3116101cc578063095ea7b3146103a65780630b7ad54c1461040157806310154bad146105c757806318160ddd14610618576101f9565b806301ffc9a7146101fe57806306661abd1461027057806306fdde031461029b578063081812fc1461032b575b600080fd5b34801561020a57600080fd5b506102566004803603602081101561022157600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061121d565b604051808215151515815260200191505060405180910390f35b34801561027c57600080fd5b50610285611284565b6040518082815260200191505060405180910390f35b3480156102a757600080fd5b506102b0611293565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102f05780820151818401526020810190506102d5565b50505050905090810190601f16801561031d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561033757600080fd5b506103646004803603602081101561034e57600080fd5b8101908080359060200190929190505050611335565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103b257600080fd5b506103ff600480360360408110156103c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113d0565b005b34801561040d57600080fd5b5061043a6004803603602081101561042457600080fd5b81019080803590602001909291905050506115a9565b604051808681526020018060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848103845288818151815260200191508051906020019080838360005b838110156104ba57808201518184015260208101905061049f565b50505050905090810190601f1680156104e75780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b83811015610520578082015181840152602081019050610505565b50505050905090810190601f16801561054d5780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b8381101561058657808201518184015260208101905061056b565b50505050905090810190601f1680156105b35780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b3480156105d357600080fd5b50610616600480360360208110156105ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116bb565b005b34801561062457600080fd5b5061062d611725565b6040518082815260200191505060405180910390f35b34801561064f57600080fd5b506106bc6004803603606081101561066657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611732565b005b3480156106ca57600080fd5b5061070d600480360360208110156106e157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117a1565b005b34801561071b57600080fd5b506107686004803603604081101561073257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061180b565b6040518082815260200191505060405180910390f35b34801561078a57600080fd5b506107b7600480360360208110156107a157600080fd5b81019080803590602001909291905050506118ca565b60405180838152602001821515151581526020019250505060405180910390f35b3480156107e457600080fd5b50610827600480360360208110156107fb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611917565b604051808215151515815260200191505060405180910390f35b34801561084d57600080fd5b506108ba6004803603606081101561086457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611929565b005b3480156108c857600080fd5b506108d1611949565b005b3480156108df57600080fd5b5061090c600480360360208110156108f657600080fd5b8101908080359060200190929190505050611954565b6040518082815260200191505060405180910390f35b34801561092e57600080fd5b5061095b6004803603602081101561094557600080fd5b81019080803590602001909291905050506119d4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156109a957600080fd5b506109b2611a9c565b6040518082815260200191505060405180910390f35b3480156109d457600080fd5b50610a17600480360360208110156109eb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ae6565b6040518082815260200191505060405180910390f35b348015610a3957600080fd5b50610a7c60048036036020811015610a5057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bbb565b005b348015610a8a57600080fd5b50610bb660048036036080811015610aa157600080fd5b810190808035906020019092919080359060200190640100000000811115610ac857600080fd5b820183602082011115610ada57600080fd5b80359060200191846001830284011164010000000083111715610afc57600080fd5b909192939192939080359060200190640100000000811115610b1d57600080fd5b820183602082011115610b2f57600080fd5b80359060200191846001830284011164010000000083111715610b5157600080fd5b909192939192939080359060200190640100000000811115610b7257600080fd5b820183602082011115610b8457600080fd5b80359060200191846001830284011164010000000083111715610ba657600080fd5b9091929391929390505050611c25565b005b348015610bc457600080fd5b50610c0760048036036060811015610bdb57600080fd5b810190808035906020019092919080359060200190929190803515159060200190929190505050611d28565b005b348015610c1557600080fd5b50610c1e611e16565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c5e578082015181840152602081019050610c43565b50505050905090810190601f168015610c8b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610ca557600080fd5b50610ce860048036036060811015610cbc57600080fd5b810190808035906020019092919080359060200190929190803515159060200190929190505050611eb8565b005b348015610cf657600080fd5b50610d4560048036036040811015610d0d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611fa6565b005b610d7360048036036020811015610d5d57600080fd5b8101908080359060200190929190505050612149565b005b348015610d8157600080fd5b50610dae60048036036020811015610d9857600080fd5b81019080803590602001909291905050506122c4565b60405180838152602001821515151581526020019250505060405180910390f35b348015610ddb57600080fd5b50610edf60048036036080811015610df257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610e5957600080fd5b820183602082011115610e6b57600080fd5b80359060200191846001830284011164010000000083111715610e8d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612311565b005b348015610eed57600080fd5b50610f3060048036036020811015610f0457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612383565b604051808215151515815260200191505060405180910390f35b348015610f5657600080fd5b50610f8360048036036020811015610f6d57600080fd5b81019080803590602001909291905050506123a0565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610fc3578082015181840152602081019050610fa8565b50505050905090810190601f168015610ff05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561100a57600080fd5b5061112c6004803603606081101561102157600080fd5b810190808035906020019064010000000081111561103e57600080fd5b82018360208201111561105057600080fd5b8035906020019184600183028401116401000000008311171561107257600080fd5b90919293919293908035906020019064010000000081111561109357600080fd5b8201836020820111156110a557600080fd5b803590602001918460018302840111640100000000831117156110c757600080fd5b9091929391929390803590602001906401000000008111156110e857600080fd5b8201836020820111156110fa57600080fd5b8035906020019184600183028401116401000000008311171561111c57600080fd5b90919293919293905050506124b3565b005b34801561113a57600080fd5b506111436126bf565b005b34801561115157600080fd5b506111b46004803603604081101561116857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506126ca565b604051808215151515815260200191505060405180910390f35b3480156111da57600080fd5b50611207600480360360208110156111f157600080fd5b810190808035906020019092919050505061275e565b6040518082815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b600061128e611725565b905090565b606060098054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561132b5780601f106113005761010080835404028352916020019161132b565b820191906000526020600020905b81548152906001019060200180831161130e57829003601f168201915b5050505050905090565b600061134082612875565b611395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180614078602c913960400191505060405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006113db826119d4565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611462576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806141986021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806114a257506114a181336126ca565b5b6114f7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180613fcc6038913960400191505060405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000606080606060008560006011600083815260200190815260200160002090508060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661168b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6e6f74207369676e65642c20706c6561736520757064617465496e666f00000081525060200191505060405180910390fd5b61169488612875565b61169d57600080fd5b6116a6886128e7565b96509650965096509650505091939590929450565b6116c433612383565b611719576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260408152602001806140ef6040913960400191505060405180910390fd5b61172281612bf0565b50565b6000600780549050905090565b61173c3382612c5a565b611791576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806141b96031913960400191505060405180910390fd5b61179c838383612d4e565b505050565b6117aa33612383565b6117ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260408152602001806140ef6040913960400191505060405180910390fd5b61180881612d72565b50565b600061181683611ae6565b821061186d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613f1f602b913960400191505060405180910390fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106118b757fe5b9060005260206000200154905092915050565b6000806118d683612875565b6118df57600080fd5b6000600f6000858152602001908152602001600020905080600001548160010160009054906101000a900460ff169250925050915091565b600061192282612dcc565b9050919050565b61194483838360405180602001604052806000815250612311565b505050565b61195233612de9565b565b600061195e611725565b82106119b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806141ea602c913960400191505060405180910390fd5b600782815481106119c257fe5b90600052602060002001549050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a93576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602981526020018061402e6029913960400191505060405180910390fd5b80915050919050565b6000601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b6d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180614004602a913960400191505060405180910390fd5b611bb4600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612e43565b9050919050565b611bc433612383565b611c19576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260408152602001806140ef6040913960400191505060405180910390fd5b611c2281612e51565b50565b611c2e33611917565b611c83576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a81526020018061415e603a913960400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16611ca3886119d4565b73ffffffffffffffffffffffffffffffffffffffff1614611cc357600080fd5b6000600e8881548110611cd257fe5b906000526020600020906004020190508686826000019190611cf5929190613da5565b508484826001019190611d09929190613da5565b508282826002019190611d1d929190613da5565b505050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff16611d48846119d4565b73ffffffffffffffffffffffffffffffffffffffff1614611d6857600080fd5b611d7183612875565b611d7a57600080fd5b6000600f60008581526020019081526020016000209050828160000181905550818160010160006101000a81548160ff02191690831515021790555060018160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050565b6060600a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611eae5780601f10611e8357610100808354040283529160200191611eae565b820191906000526020600020905b815481529060010190602001808311611e9157829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff16611ed8846119d4565b73ffffffffffffffffffffffffffffffffffffffff1614611ef857600080fd5b611f0183612875565b611f0a57600080fd5b6000601160008581526020019081526020016000209050828160000181905550818160010160006101000a81548160ff02191690831515021790555060018160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612048576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b806000600f60008381526020019081526020016000209050806000015434146121da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f7472616465207072696365206572726f7200000000000000000000000000000081525060200191505060405180910390fd5b6121e383612eab565b6000600f6000858152602001908152602001600020905060106000612207866119d4565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020849080600181540180825580915050906001820390600052602060002001600090919290919091505550612274846119d4565b73ffffffffffffffffffffffffffffffffffffffff166108fc82600001549081150290604051600060405180830381858888f193505050501580156122bd573d6000803e3d6000fd5b5050505050565b6000806122d083612875565b6122d957600080fd5b600060116000858152602001908152602001600020905080600001548160010160009054906101000a900460ff169250925050915091565b61231c848484611732565b61232884848484613014565b61237d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180613f4a6032913960400191505060405180910390fd5b50505050565b600061239982600c6131fd90919063ffffffff16565b9050919050565b60606123ab82612875565b612400576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061412f602f913960400191505060405180910390fd5b600b60008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124a75780601f1061247c576101008083540402835291602001916124a7565b820191906000526020600020905b81548152906001019060200180831161248a57829003601f168201915b50505050509050919050565b6124bc33611917565b612511576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a81526020018061415e603a913960400191505060405180910390fd5b612519613e25565b86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816000018190525084848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816020018190525082828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816040018190525060006001600e8390806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061264e929190613e4d565b50602082015181600101908051906020019061266b929190613e4d565b506040820151816002019080519060200190612688929190613e4d565b5060608201518160030190805190602001906126a5929190613e4d565b5050500390506126b533826132db565b5050505050505050565b6126c833612d72565b565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008180601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905010612818576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f696e646578206f766572666c6f7700000000000000000000000000000000000081525060200191505060405180910390fd5b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061286257fe5b9060005260206000200154915050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000606080606060006128f986612875565b61290257600080fd5b61290a613e25565b600e878154811061291757fe5b9060005260206000209060040201604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156129c95780601f1061299e576101008083540402835291602001916129c9565b820191906000526020600020905b8154815290600101906020018083116129ac57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612a6b5780601f10612a4057610100808354040283529160200191612a6b565b820191906000526020600020905b815481529060010190602001808311612a4e57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612b0d5780601f10612ae257610100808354040283529160200191612b0d565b820191906000526020600020905b815481529060010190602001808311612af057829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612baf5780601f10612b8457610100808354040283529160200191612baf565b820191906000526020600020905b815481529060010190602001808311612b9257829003601f168201915b505050505081525050905086816000015182602001518360400151612bd38b6119d4565b839350829250819150955095509550955095505091939590929450565b612bf933612383565b612c4e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260408152602001806140ef6040913960400191505060405180910390fd5b612c57816132fc565b50565b6000612c6582612875565b612cba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180613fa0602c913960400191505060405180910390fd5b6000612cc5836119d4565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612d3457508373ffffffffffffffffffffffffffffffffffffffff16612d1c84611335565b73ffffffffffffffffffffffffffffffffffffffff16145b80612d455750612d4481856126ca565b5b91505092915050565b612d59838383613356565b612d6383826135b1565b612d6d828261374f565b505050565b612d8681600d61381690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b660405160405180910390a250565b6000612de282600d6131fd90919063ffffffff16565b9050919050565b612dfd81600c61381690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e16560405160405180910390a250565b600081600001549050919050565b612e6581600c6138d390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b806000600f60008381526020019081526020016000209050600015158160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514612f8b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f747261646520657869737400000000000000000000000000000000000000000081525060200191505060405180910390fd5b612f9483612875565b612f9d57600080fd5b6000600f6000858152602001908152602001600020905060018160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050565b60006130358473ffffffffffffffffffffffffffffffffffffffff166139ae565b61304257600190506131f5565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561311d578082015181840152602081019050613102565b50505050905090810190601f16801561314a5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561316c57600080fd5b505af1158015613180573d6000803e3d6000fd5b505050506040513d602081101561319657600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613284576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806140a46022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6132e582826139c1565b6132ef828261374f565b6132f881613bd9565b5050565b61331081600d6138d390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f60405160405180910390a250565b8273ffffffffffffffffffffffffffffffffffffffff16613376826119d4565b73ffffffffffffffffffffffffffffffffffffffff16146133e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806140c66029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613468576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180613f7c6024913960400191505060405180910390fd5b61347181613c25565b6134b8600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613ce3565b6134ff600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613d06565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006136096001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050613d1c90919063ffffffff16565b90506000600660008481526020019081526020016000205490508181146136f6576000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061367657fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106136ce57fe5b9060005260206000200181905550816006600083815260200190815260200160002081905550505b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036137489190613ecd565b5050505050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506006600083815260200190815260200160002081905550600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b61382082826131fd565b613875576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806140576021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6138dd82826131fd565b15613950576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613a64576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b613a6d81612875565b15613ae0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613b79600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613d06565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6007805490506008600083815260200190815260200160002081905550600781908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613ce05760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b613cfb60018260000154613d1c90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600082821115613d94576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613de657803560ff1916838001178555613e14565b82800160010185558215613e14579182015b82811115613e13578235825591602001919060010190613df8565b5b509050613e219190613ef9565b5090565b6040518060800160405280606081526020016060815260200160608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613e8e57805160ff1916838001178555613ebc565b82800160010185558215613ebc579182015b82811115613ebb578251825591602001919060010190613ea0565b5b509050613ec99190613ef9565b5090565b815481835581811115613ef457818360005260206000209182019101613ef39190613ef9565b5b505050565b613f1b91905b80821115613f17576000816000905550600101613eff565b5090565b9056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e57686974656c69737441646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652057686974656c69737441646d696e20726f6c654552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e57686974656c6973746564526f6c653a2063616c6c657220646f6573206e6f742068617665207468652057686974656c697374656420726f6c654552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a165627a7a723058205d6d0c46981e9d2498b9bc0741a511525c1382cdc65b13c44efe03ffd3f9c8830029",
  "sourceMap": "57:2174:9:-;;;452:155:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;529:4;535:6;718:40:17;385:10;737:20;;718:18;;;:40;;:::i;:::-;2220::21;2094:10;2239:20;;2220:18;;;:40;;:::i;:::-;1316:51:22;1131:10;1335:31;;1316:18;;;:51;;:::i;:::-;833:4:24;825:5;:12;;;;;;;;;;;;:::i;:::-;;857:6;847:7;:16;;;;;;;;;;;;:::i;:::-;;951:49;687:10;970:29;;951:18;;;:49;;:::i;:::-;753:254;;452:155:23;;433:30:14;452:10;433:18;;;:30;;:::i;:::-;57:2174:9;;1442:190:17;1532:10;1517:25;;:11;:25;;;;;1509:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1621:4;1585:20;:33;1606:11;1585:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1442:190;:::o;991:143:14:-;1055:29;1076:7;1055:16;:20;;;;;;:29;;;;:::i;:::-;1119:7;1099:28;;;;;;;;;;;;991:143;:::o;260:175:13:-;337:18;341:4;347:7;337:3;;;:18;;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;779:200::-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;57:2174:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "57:2174:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;915:133:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;915:133:17;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1729:82:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1729:82:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1112:83:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1112:83:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1112:83:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4237:200:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4237:200:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4237:200:21;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3541:411;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3541:411:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3541:411:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1041:271:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1041:271:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1041:271:9;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1041:271:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1041:271:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1041:271:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1815:107:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1815:107:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1815:107:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;2130:94:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2130:94:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5877:285:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5877:285:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5877:285:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1024:114:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1024:114:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1024:114:15;;;;;;;;;;;;;;;;;;;:::i;:::-;;1748:229:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1748:229:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1748:229:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;554:267:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;554:267:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;554:267:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1926:112:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1926:112:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1926:112:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6795:132:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6795:132:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6795:132:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;894:91:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;894:91:14;;;:::i;:::-;;2562:196:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2562:196:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2562:196:22;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2897:223:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2897:223:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2897:223:21;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;586:144:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;586:144:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2471:207:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2471:207:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2471:207:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;774:114:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;774:114:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;774:114:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;1005:365:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1005:365:7;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1005:365:7;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1005:365:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1005:365:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1005:365:7;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1005:365:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1005:365:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1005:365:7;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1005:365:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1005:365:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1005:365:7;;;;;;;;;;;;:::i;:::-;;232:318:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;232:318:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;232:318:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1304:87:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1304:87:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1304:87:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;250:325:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;250:325:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;250:325:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4730:243:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4730:243:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4730:243:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;302:280:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;302:280:12;;;;;;;;;;;;;;;;;:::i;:::-;;579:273:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;579:273:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;579:273:9;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7632:265:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7632:265:21;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7632:265:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7632:265:21;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7632:265:21;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7632:265:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7632:265:21;;;;;;;;;;;;;;;:::i;:::-;;645:123:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;645:123:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;645:123:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1591:202:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1591:202:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1591:202:24;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1591:202:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;639:362:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;639:362:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;639:362:7;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;639:362:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;639:362:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;639:362:7;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;639:362:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;639:362:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;639:362:7;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;639:362:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;639:362:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;639:362:7;;;;;;;;;;;;:::i;:::-;;1144:85:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1144:85:15;;;:::i;:::-;;5295:145:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5295:145:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5295:145:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;875:195:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;875:195:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;875:195:12;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;915:133:17;985:4;1008:20;:33;1029:11;1008:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:40;;915:133;;;:::o;1729:82:7:-;1766:7;1787:19;:17;:19::i;:::-;1780:26;;1729:82;:::o;1112:83:24:-;1151:13;1183:5;1176:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:83;:::o;4237:200:21:-;4296:7;4323:16;4331:7;4323;:16::i;:::-;4315:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4406:15;:24;4422:7;4406:24;;;;;;;;;;;;;;;;;;;;;4399:31;;4237:200;;;:::o;3541:411::-;3604:13;3620:16;3628:7;3620;:16::i;:::-;3604:32;;3660:5;3654:11;;:2;:11;;;;3646:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3736:5;3722:19;;:10;:19;;;:58;;;;3745:35;3762:5;3769:10;3745:16;:35::i;:::-;3722:58;3714:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3900:2;3873:15;:24;3889:7;3873:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3937:7;3933:2;3917:28;;3926:5;3917:28;;;;;;;;;;;;3541:411;;;:::o;1041:271:9:-;1145:7;1161:13;1183;1205;1227:7;1121:3;903:27;933:9;:14;943:3;933:14;;;;;;;;;;;903:44;;961:6;:18;;:30;980:10;961:30;;;;;;;;;;;;;;;;;;;;;;;;;953:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1259:12;1267:3;1259:7;:12::i;:::-;1251:21;;;;;;1285:22;1303:3;1285:17;:22::i;:::-;1278:29;;;;;;;;;;1041:271;;;;;;;;;:::o;1815:107:7:-;524:28:14;541:10;524:16;:28::i;:::-;516:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1888:29:7;1909:7;1888:20;:29::i;:::-;1815:107;:::o;2130:94:22:-;2174:7;2200:10;:17;;;;2193:24;;2130:94;:::o;5877:285:21:-;6019:39;6038:10;6050:7;6019:18;:39::i;:::-;6011:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6123:32;6137:4;6143:2;6147:7;6123:13;:32::i;:::-;5877:285;;;:::o;1024:114:15:-;524:28:14;541:10;524:16;:28::i;:::-;516:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1104:27:15;1123:7;1104:18;:27::i;:::-;1024:114;:::o;1748:229:22:-;1828:7;1863:16;1873:5;1863:9;:16::i;:::-;1855:5;:24;1847:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1944:12;:19;1957:5;1944:19;;;;;;;;;;;;;;;1964:5;1944:26;;;;;;;;;;;;;;;;1937:33;;1748:229;;;;:::o;554:267:11:-;641:13;662:12;697;705:3;697:7;:12::i;:::-;689:21;;;;;;716:25;744:8;:13;753:3;744:13;;;;;;;;;;;716:41;;778:5;:11;;;797:5;:13;;;;;;;;;;;;763:53;;;;;554:267;;;:::o;1926:112:7:-;1986:4;2005:28;2025:7;2005:19;:28::i;:::-;1998:35;;1926:112;;;:::o;6795:132:21:-;6881:39;6898:4;6904:2;6908:7;6881:39;;;;;;;;;;;;:16;:39::i;:::-;6795:132;;;:::o;894:91:14:-;945:33;967:10;945:21;:33::i;:::-;894:91::o;2562:196:22:-;2620:7;2655:13;:11;:13::i;:::-;2647:5;:21;2639:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2734:10;2745:5;2734:17;;;;;;;;;;;;;;;;2727:24;;2562:196;;;:::o;2897:223:21:-;2952:7;2971:13;2987:11;:20;2999:7;2987:20;;;;;;;;;;;;;;;;;;;;;2971:36;;3042:1;3025:19;;:5;:19;;;;3017:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3108:5;3101:12;;;2897:223;;;:::o;586:144:12:-;662:7;692:14;:26;707:10;692:26;;;;;;;;;;;;;;;:33;;;;685:40;;586:144;:::o;2471:207:21:-;2526:7;2570:1;2553:19;;:5;:19;;;;2545:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2637:34;:17;:24;2655:5;2637:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2630:41;;2471:207;;;:::o;774:114:14:-;524:28;541:10;524:16;:28::i;:::-;516:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;854:27;873:7;854:18;:27::i;:::-;774:114;:::o;1005:365:7:-;675:25:15;689:10;675:13;:25::i;:::-;667:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1208:10:7;1192:26;;:12;1200:3;1192:7;:12::i;:::-;:26;;;1184:35;;;;;;1225:29;1257:8;1266:3;1257:13;;;;;;;;;;;;;;;;;;1225:45;;1292:5;;1276:7;:13;;:21;;;;;;;:::i;:::-;;1325:11;;1303:7;:19;;:33;;;;;;;:::i;:::-;;1359:6;;1342:7;:14;;:23;;;;;;;:::i;:::-;;773:1:15;1005:365:7;;;;;;;:::o;232:318:11:-;364:10;348:26;;:12;356:3;348:7;:12::i;:::-;:26;;;340:35;;;;;;389:12;397:3;389:7;:12::i;:::-;381:21;;;;;;408:25;436:8;:13;445:3;436:13;;;;;;;;;;;408:41;;469:5;455;:11;;:19;;;;496:7;480:5;:13;;;:23;;;;;;;;;;;;;;;;;;541:4;509:5;:17;;:29;527:10;509:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;232:318;;;;:::o;1304:87:24:-;1345:13;1377:7;1370:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1304:87;:::o;250:325:9:-;383:10;367:26;;:12;375:3;367:7;:12::i;:::-;:26;;;359:35;;;;;;408:12;416:3;408:7;:12::i;:::-;400:21;;;;;;427:27;457:9;:14;467:3;457:14;;;;;;;;;;;427:44;;492:5;477:6;:12;;:20;;;;520:7;503:6;:14;;;:24;;;;;;;;;;;;;;;;;;566:4;533:6;:18;;:30;552:10;533:30;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;250:325;;;;:::o;4730:243:21:-;4815:10;4809:16;;:2;:16;;;;4801:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4903:8;4866:18;:30;4885:10;4866:30;;;;;;;;;;;;;;;:34;4897:2;4866:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4953:2;4926:40;;4941:10;4926:40;;;4957:8;4926:40;;;;;;;;;;;;;;;;;;;;;;4730:243;;:::o;302:280:12:-;378:3;185:25;213:8;:13;222:3;213:13;;;;;;;;;;;185:41;;253:5;:11;;;240:9;:24;232:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;403:25;424:3;403:20;:25::i;:::-;434;462:8;:13;471:3;462:13;;;;;;;;;;;434:41;;481:14;:28;496:12;504:3;496:7;:12::i;:::-;481:28;;;;;;;;;;;;;;;515:3;481:38;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;481:38:12;;;;;;;;;;;;;;;;;;;;;;541:12;549:3;541:7;:12::i;:::-;525:39;;:52;565:5;:11;;;525:52;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;525:52:12;292:1;302:280;;;:::o;579:273:9:-;667:13;688:12;723;731:3;723:7;:12::i;:::-;715:21;;;;;;742:27;772:9;:14;782:3;772:14;;;;;;;;;;;742:44;;807:6;:12;;;827:6;:14;;;;;;;;;;;;792:55;;;;;579:273;;;:::o;7632:265:21:-;7738:31;7751:4;7757:2;7761:7;7738:12;:31::i;:::-;7787:48;7810:4;7816:2;7820:7;7829:5;7787:22;:48::i;:::-;7779:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7632:265;;;;:::o;645:123:14:-;709:4;732:29;753:7;732:16;:20;;:29;;;;:::i;:::-;725:36;;645:123;;;:::o;1591:202:24:-;1649:13;1682:16;1690:7;1682;:16::i;:::-;1674:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1767:10;:19;1778:7;1767:19;;;;;;;;;;;1760:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1591:202;;;:::o;639:362:7:-;675:25:15;689:10;675:13;:25::i;:::-;667:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;800:28:7;;:::i;:::-;850:5;;834:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;834:21:7;;;;;;:7;:13;;:21;;;;883:11;;861:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;861:33:7;;;;;;:7;:19;;:33;;;;917:6;;900:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;900:23:7;;;;;;:7;:14;;:23;;;;929:11;967:1;943:8;957:7;943:22;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;943:22:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:25;929:39;;974:22;980:10;992:3;974:5;:22::i;:::-;773:1:15;;639:362:7;;;;;;:::o;1144:85:15:-;1192:30;1211:10;1192:18;:30::i;:::-;1144:85::o;5295:145:21:-;5375:4;5398:18;:25;5417:5;5398:25;;;;;;;;;;;;;;;:35;5424:8;5398:35;;;;;;;;;;;;;;;;;;;;;;;;;5391:42;;5295:145;;;;:::o;875:195:12:-;1002:7;970:5;835;799:14;:26;814:10;799:26;;;;;;;;;;;;;;;:33;;;;:41;791:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1032:14;:26;1047:10;1032:26;;;;;;;;;;;;;;;1059:5;1032:33;;;;;;;;;;;;;;;;1025:40;;875:195;;;;:::o;8092:152:21:-;8149:4;8165:13;8181:11;:20;8193:7;8181:20;;;;;;;;;;;;;;;;;;;;;8165:36;;8235:1;8218:19;;:5;:19;;;;8211:26;;;8092:152;;;:::o;1374:351:7:-;1460:7;1476:13;1498;1520;1542:7;1573:12;1581:3;1573:7;:12::i;:::-;1565:21;;;;;;1592:28;;:::i;:::-;1623:8;1632:3;1623:13;;;;;;;;;;;;;;;;;;1592:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1650:3;1655:7;:13;;;1670:7;:19;;;1691:7;:14;;;1707:12;1715:3;1707:7;:12::i;:::-;1642:78;;;;;;;;;;;;;;;;;;;;1374:351;;;;;;;:::o;910:108:15:-;524:28:14;541:10;524:16;:28::i;:::-;516:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;987:24:15;1003:7;987:15;:24::i;:::-;910:108;:::o;8605:329:21:-;8690:4;8714:16;8722:7;8714;:16::i;:::-;8706:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8789:13;8805:16;8813:7;8805;:16::i;:::-;8789:32;;8850:5;8839:16;;:7;:16;;;:51;;;;8883:7;8859:31;;:20;8871:7;8859:11;:20::i;:::-;:31;;;8839:51;:87;;;;8894:32;8911:5;8918:7;8894:16;:32::i;:::-;8839:87;8831:96;;;8605:329;;;;:::o;3133:239:22:-;3218:38;3238:4;3244:2;3248:7;3218:19;:38::i;:::-;3267:47;3300:4;3306:7;3267:32;:47::i;:::-;3325:40;3353:2;3357:7;3325:27;:40::i;:::-;3133:239;;;:::o;1375:142:15:-;1439:29;1460:7;1439:13;:20;;:29;;;;:::i;:::-;1502:7;1483:27;;;;;;;;;;;;1375:142;:::o;787:117::-;848:4;871:26;889:7;871:13;:17;;:26;;;;:::i;:::-;864:33;;787:117;;;:::o;1140:151:14:-;1207:32;1231:7;1207:16;:23;;:32;;;;:::i;:::-;1276:7;1254:30;;;;;;;;;;;;1140:151;:::o;1063:112:16:-;1128:7;1154;:14;;;1147:21;;1063:112;;;:::o;991:143:14:-;1055:29;1076:7;1055:16;:20;;:29;;;;:::i;:::-;1119:7;1099:28;;;;;;;;;;;;991:143;:::o;1453:208:11:-;1533:3;1328:25;1356:8;:13;1365:3;1356:13;;;;;;;;;;;1328:41;;1416:5;1383:38;;:5;:17;;:29;1401:10;1383:29;;;;;;;;;;;;;;;;;;;;;;;;;:38;;;1375:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1554:12;1562:3;1554:7;:12::i;:::-;1546:21;;;;;;1573:25;1601:8;:13;1610:3;1601:13;;;;;;;;;;;1573:41;;1652:4;1620:5;:17;;:29;1638:10;1620:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;1443:1;1453:208;;;:::o;11771:347:21:-;11892:4;11917:15;:2;:13;;;:15::i;:::-;11912:58;;11955:4;11948:11;;;;11912:58;11980:13;12012:2;11996:36;;;12033:10;12045:4;12051:7;12060:5;11996:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11996:70:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11996:70:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11996:70:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11996:70:21;;;;;;;;;;;;;;;;11980:86;;713:10;12094:16;;12084:26;;;:6;:26;;;;12076:35;;;11771:347;;;;;;;:::o;779:200:13:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;3629:196:22:-;3692:24;3704:2;3708:7;3692:11;:24::i;:::-;3727:40;3755:2;3759:7;3727:27;:40::i;:::-;3778;3810:7;3778:31;:40::i;:::-;3629:196;;:::o;1235:134:15:-;1296:26;1314:7;1296:13;:17;;:26;;;;:::i;:::-;1354:7;1337:25;;;;;;;;;;;;1235:134;:::o;10751:447:21:-;10864:4;10844:24;;:16;10852:7;10844;:16::i;:::-;:24;;;10836:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10946:1;10932:16;;:2;:16;;;;10924:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11000:23;11015:7;11000:14;:23::i;:::-;11034:35;:17;:23;11052:4;11034:23;;;;;;;;;;;;;;;:33;:35::i;:::-;11079:33;:17;:21;11097:2;11079:21;;;;;;;;;;;;;;;:31;:33::i;:::-;11146:2;11123:11;:20;11135:7;11123:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11183:7;11179:2;11164:27;;11173:4;11164:27;;;;;;;;;;;;10751:447;;;:::o;6241:1128:22:-;6503:22;6528:32;6558:1;6528:12;:18;6541:4;6528:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6503:57;;6570:18;6591:17;:26;6609:7;6591:26;;;;;;;;;;;;6570:47;;6735:14;6721:10;:28;6717:323;;6765:19;6787:12;:18;6800:4;6787:18;;;;;;;;;;;;;;;6806:14;6787:34;;;;;;;;;;;;;;;;6765:56;;6869:11;6836:12;:18;6849:4;6836:18;;;;;;;;;;;;;;;6855:10;6836:30;;;;;;;;;;;;;;;:44;;;;6985:10;6952:17;:30;6970:11;6952:30;;;;;;;;;;;:43;;;;6717:323;;7126:12;:18;7139:4;7126:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6241:1128;;;;:::o;5087:183::-;5200:12;:16;5213:2;5200:16;;;;;;;;;;;;;;;:23;;;;5171:17;:26;5189:7;5171:26;;;;;;;;;;;:52;;;;5233:12;:16;5246:2;5233:16;;;;;;;;;;;;;;;5255:7;5233:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5233:30:22;;;;;;;;;;;;;;;;;;;;;;5087:183;;:::o;510:180:13:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o;260:175::-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;542:413:29:-;602:4;805:12;914:7;902:20;894:28;;947:1;940:4;:8;933:15;;;542:413;;;:::o;9179:327:21:-;9264:1;9250:16;;:2;:16;;;;9242:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9322:16;9330:7;9322;:16::i;:::-;9321:17;9313:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9405:2;9382:11;:20;9394:7;9382:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9417:33;:17;:21;9435:2;9417:21;;;;;;;;;;;;;;;:31;:33::i;:::-;9491:7;9487:2;9466:33;;9483:1;9466:33;;;;;;;;;;;;9179:327;;:::o;5465:161:22:-;5568:10;:17;;;;5541:15;:24;5557:7;5541:24;;;;;;;;;;;:44;;;;5595:10;5611:7;5595:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5595:24:22;;;;;;;;;;;;;;;;;;;;;;5465:161;:::o;12280:171:21:-;12379:1;12343:38;;:15;:24;12359:7;12343:24;;;;;;;;;;;;;;;;;;;;;:38;;;12339:106;;12432:1;12397:15;:24;12413:7;12397:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;12339:106;12280:171;:::o;1276:108:16:-;1356:21;1375:1;1356:7;:14;;;:18;;:21;;;;:::i;:::-;1339:7;:14;;:38;;;;1276:108;:::o;1181:89::-;1262:1;1244:7;:14;;;:19;;;;;;;;;;;1181:89;:::o;1274:179:19:-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;57:2174:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./TradePurchaser.sol\";\n\ncontract Resale is TradePurchaser {\n  struct ResaleStruct {\n    uint256 price;\n    bool publish;\n    mapping(address  => bool) customerMap;\n  }\n  mapping(uint256 => ResaleStruct) resaleMap;\n\n  function updateResaleInfo(\n    uint256 cid, \n    uint256 price,\n    bool publish\n  ) \n    external  \n  {\n    require(ownerOf(cid) == msg.sender);\n    require(_exists(cid));\n    ResaleStruct storage resale = resaleMap[cid];\n    resale.price = price;\n    resale.publish = publish;\n    resale.customerMap[msg.sender] = true;\n  }\n\n  function getResaleInfo(\n    uint256 cid\n  ) \n    external \n    view \n    returns(\n      uint256 price,\n      bool publish\n    )\n  {\n    require(_exists(cid));\n    ResaleStruct storage resale = resaleMap[cid];\n    return (\n      resale.price,\n      resale.publish\n    );\n  }\n\n  modifier onlySigner(\n    uint256 cid\n  ) {\n    ResaleStruct storage resale = resaleMap[cid];\n    require(resale.customerMap[msg.sender], \"not signed, please updateInfo\");\n    _;\n  }\n\n  function getContent(\n    uint256 cid\n  )\n    external \n    view \n    onlySigner(cid)\n    returns(\n      uint256, \n      string memory, \n      string memory, \n      string memory, \n      address \n    ) \n  {\n    require(_exists(cid));\n    return super._getContent(cid);\n  }\n\n  modifier notResalePurchased(uint256 cid) {\n    ResaleStruct storage resale = resaleMap[cid];\n    require(resale.customerMap[msg.sender] == false, \"resale exist\");\n    _;\n  }\n\n  function _purchaseResale(\n    uint256 cid\n  )\n    internal\n    notResalePurchased(cid)\n  {\n    require(_exists(cid));\n    ResaleStruct storage resale = resaleMap[cid];\n    resale.customerMap[msg.sender] = true;\n  }\n\n  // step\n  // accounts = await web3.eth.getAccounts();\n  // i = await Trade.deployed()\n  // i.addWhitelisted(accounts[0]);\n  // i.isWhitelisted(accounts[0]);\n  // i.createContent(\"hello\",\"world\",\"img.png\");\n  // i.updateTradeInfo(0,100,true);\n  // i.getTradeInfo(0);\n  // i.getContent(0);\n  // i.getContent(0, {from: accounts[0]});\n  // i.getContent(0, {from: accounts[1]});\n  // i.purchase(0, {from: accounts[1], value: 100});\n  // i.getContent(0, {from: accounts[0]});\n  // i.getContent(0, {from: accounts[1]});\n\n  //\n}\n",
  "sourcePath": "/Users/tech/dev/prd/programming-lectures/lesson011/contracts/Product/Resale.sol",
  "ast": {
    "absolutePath": "/Users/tech/dev/prd/programming-lectures/lesson011/contracts/Product/Resale.sol",
    "exportedSymbols": {
      "Resale": [
        1429
      ]
    },
    "id": 1430,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1228,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "/Users/tech/dev/prd/programming-lectures/lesson011/contracts/Product/TradePurchaser.sol",
        "file": "./TradePurchaser.sol",
        "id": 1229,
        "nodeType": "ImportDirective",
        "scope": 1430,
        "sourceUnit": 1851,
        "src": "25:30:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1230,
              "name": "TradePurchaser",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1850,
              "src": "76:14:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TradePurchaser_$1850",
                "typeString": "contract TradePurchaser"
              }
            },
            "id": 1231,
            "nodeType": "InheritanceSpecifier",
            "src": "76:14:9"
          }
        ],
        "contractDependencies": [
          1729,
          1850,
          2256,
          2035,
          2145,
          2246,
          1217,
          3065,
          3402,
          3426,
          3555,
          3658,
          3685,
          3708
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1429,
        "linearizedBaseContracts": [
          1429,
          1850,
          1729,
          1217,
          2145,
          2035,
          3426,
          3555,
          3708,
          3402,
          3685,
          3065,
          3658,
          2246,
          2256
        ],
        "name": "Resale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Resale.ResaleStruct",
            "id": 1240,
            "members": [
              {
                "constant": false,
                "id": 1233,
                "name": "price",
                "nodeType": "VariableDeclaration",
                "scope": 1240,
                "src": "121:13:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1232,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "121:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1235,
                "name": "publish",
                "nodeType": "VariableDeclaration",
                "scope": 1240,
                "src": "140:12:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1234,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "140:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1239,
                "name": "customerMap",
                "nodeType": "VariableDeclaration",
                "scope": 1240,
                "src": "158:37:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 1238,
                  "keyType": {
                    "id": 1236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "166:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "158:25:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueType": {
                    "id": 1237,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "178:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ResaleStruct",
            "nodeType": "StructDefinition",
            "scope": 1429,
            "src": "95:105:9",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1244,
            "name": "resaleMap",
            "nodeType": "VariableDeclaration",
            "scope": 1429,
            "src": "203:42:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResaleStruct_$1240_storage_$",
              "typeString": "mapping(uint256 => struct Resale.ResaleStruct)"
            },
            "typeName": {
              "id": 1243,
              "keyType": {
                "id": 1241,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "211:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "203:32:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResaleStruct_$1240_storage_$",
                "typeString": "mapping(uint256 => struct Resale.ResaleStruct)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1242,
                "name": "ResaleStruct",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1240,
                "src": "222:12:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                  "typeString": "struct Resale.ResaleStruct"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1295,
              "nodeType": "Block",
              "src": "353:222:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1255,
                              "name": "cid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1246,
                              "src": "375:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1254,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2601
                            ],
                            "referencedDeclaration": 2601,
                            "src": "367:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 1256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "367:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1257,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3758,
                            "src": "383:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "383:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "367:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1253,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3761,
                        3762
                      ],
                      "referencedDeclaration": 3761,
                      "src": "359:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "359:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1261,
                  "nodeType": "ExpressionStatement",
                  "src": "359:35:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1264,
                            "name": "cid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1246,
                            "src": "416:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1263,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2805,
                          "src": "408:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "408:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3761,
                        3762
                      ],
                      "referencedDeclaration": 3761,
                      "src": "400:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "400:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1267,
                  "nodeType": "ExpressionStatement",
                  "src": "400:21:9"
                },
                {
                  "assignments": [
                    1269
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1269,
                      "name": "resale",
                      "nodeType": "VariableDeclaration",
                      "scope": 1295,
                      "src": "427:27:9",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                        "typeString": "struct Resale.ResaleStruct"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1268,
                        "name": "ResaleStruct",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1240,
                        "src": "427:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                          "typeString": "struct Resale.ResaleStruct"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1273,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1270,
                      "name": "resaleMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1244,
                      "src": "457:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResaleStruct_$1240_storage_$",
                        "typeString": "mapping(uint256 => struct Resale.ResaleStruct storage ref)"
                      }
                    },
                    "id": 1272,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1271,
                      "name": "cid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1246,
                      "src": "467:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "457:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage",
                      "typeString": "struct Resale.ResaleStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "427:44:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1274,
                        "name": "resale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1269,
                        "src": "477:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                          "typeString": "struct Resale.ResaleStruct storage pointer"
                        }
                      },
                      "id": 1276,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1233,
                      "src": "477:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1277,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1248,
                      "src": "492:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "477:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1279,
                  "nodeType": "ExpressionStatement",
                  "src": "477:20:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1280,
                        "name": "resale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1269,
                        "src": "503:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                          "typeString": "struct Resale.ResaleStruct storage pointer"
                        }
                      },
                      "id": 1282,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "publish",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1235,
                      "src": "503:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1283,
                      "name": "publish",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1250,
                      "src": "520:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "503:24:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1285,
                  "nodeType": "ExpressionStatement",
                  "src": "503:24:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1286,
                          "name": "resale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1269,
                          "src": "533:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                            "typeString": "struct Resale.ResaleStruct storage pointer"
                          }
                        },
                        "id": 1290,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "customerMap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1239,
                        "src": "533:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1291,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1288,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3758,
                          "src": "552:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "552:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "533:30:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "566:4:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "533:37:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1294,
                  "nodeType": "ExpressionStatement",
                  "src": "533:37:9"
                }
              ]
            },
            "documentation": null,
            "id": 1296,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateResaleInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1246,
                  "name": "cid",
                  "nodeType": "VariableDeclaration",
                  "scope": 1296,
                  "src": "281:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "281:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1248,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 1296,
                  "src": "299:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "299:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1250,
                  "name": "publish",
                  "nodeType": "VariableDeclaration",
                  "scope": 1296,
                  "src": "318:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1249,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "318:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "275:59:9"
            },
            "returnParameters": {
              "id": 1252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "353:0:9"
            },
            "scope": 1429,
            "src": "250:325:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1323,
              "nodeType": "Block",
              "src": "709:143:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1307,
                            "name": "cid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1298,
                            "src": "731:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1306,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2805,
                          "src": "723:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "723:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1305,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3761,
                        3762
                      ],
                      "referencedDeclaration": 3761,
                      "src": "715:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "715:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1310,
                  "nodeType": "ExpressionStatement",
                  "src": "715:21:9"
                },
                {
                  "assignments": [
                    1312
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1312,
                      "name": "resale",
                      "nodeType": "VariableDeclaration",
                      "scope": 1323,
                      "src": "742:27:9",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                        "typeString": "struct Resale.ResaleStruct"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1311,
                        "name": "ResaleStruct",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1240,
                        "src": "742:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                          "typeString": "struct Resale.ResaleStruct"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1316,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1313,
                      "name": "resaleMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1244,
                      "src": "772:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResaleStruct_$1240_storage_$",
                        "typeString": "mapping(uint256 => struct Resale.ResaleStruct storage ref)"
                      }
                    },
                    "id": 1315,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1314,
                      "name": "cid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1298,
                      "src": "782:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "772:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage",
                      "typeString": "struct Resale.ResaleStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "742:44:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1317,
                          "name": "resale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1312,
                          "src": "807:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                            "typeString": "struct Resale.ResaleStruct storage pointer"
                          }
                        },
                        "id": 1318,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1233,
                        "src": "807:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1319,
                          "name": "resale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1312,
                          "src": "827:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                            "typeString": "struct Resale.ResaleStruct storage pointer"
                          }
                        },
                        "id": 1320,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "publish",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1235,
                        "src": "827:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1321,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "799:48:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,bool)"
                    }
                  },
                  "functionReturnParameters": 1304,
                  "id": 1322,
                  "nodeType": "Return",
                  "src": "792:55:9"
                }
              ]
            },
            "documentation": null,
            "id": 1324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getResaleInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1298,
                  "name": "cid",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "607:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "601:21:9"
            },
            "returnParameters": {
              "id": 1304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1301,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "667:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "667:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1303,
                  "name": "publish",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "688:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1302,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "659:47:9"
            },
            "scope": 1429,
            "src": "579:273:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1344,
              "nodeType": "Block",
              "src": "897:140:9",
              "statements": [
                {
                  "assignments": [
                    1329
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1329,
                      "name": "resale",
                      "nodeType": "VariableDeclaration",
                      "scope": 1344,
                      "src": "903:27:9",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                        "typeString": "struct Resale.ResaleStruct"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1328,
                        "name": "ResaleStruct",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1240,
                        "src": "903:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                          "typeString": "struct Resale.ResaleStruct"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1333,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1330,
                      "name": "resaleMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1244,
                      "src": "933:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResaleStruct_$1240_storage_$",
                        "typeString": "mapping(uint256 => struct Resale.ResaleStruct storage ref)"
                      }
                    },
                    "id": 1332,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1331,
                      "name": "cid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1326,
                      "src": "943:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "933:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage",
                      "typeString": "struct Resale.ResaleStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "903:44:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1335,
                            "name": "resale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1329,
                            "src": "961:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                              "typeString": "struct Resale.ResaleStruct storage pointer"
                            }
                          },
                          "id": 1336,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "customerMap",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1239,
                          "src": "961:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1339,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1337,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3758,
                            "src": "980:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "980:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "961:30:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f74207369676e65642c20706c6561736520757064617465496e666f",
                        "id": 1340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "993:31:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c8b91f76a606699ccf655696c304827029f1ef6dd6417bf9d3267e59e084de9",
                          "typeString": "literal_string \"not signed, please updateInfo\""
                        },
                        "value": "not signed, please updateInfo"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c8b91f76a606699ccf655696c304827029f1ef6dd6417bf9d3267e59e084de9",
                          "typeString": "literal_string \"not signed, please updateInfo\""
                        }
                      ],
                      "id": 1334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3761,
                        3762
                      ],
                      "referencedDeclaration": 3762,
                      "src": "953:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "953:72:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1342,
                  "nodeType": "ExpressionStatement",
                  "src": "953:72:9"
                },
                {
                  "id": 1343,
                  "nodeType": "PlaceholderStatement",
                  "src": "1031:1:9"
                }
              ]
            },
            "documentation": null,
            "id": 1345,
            "name": "onlySigner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1326,
                  "name": "cid",
                  "nodeType": "VariableDeclaration",
                  "scope": 1345,
                  "src": "881:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "881:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "875:21:9"
            },
            "src": "856:181:9",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1374,
              "nodeType": "Block",
              "src": "1245:67:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1365,
                            "name": "cid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1347,
                            "src": "1267:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1364,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2805,
                          "src": "1259:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1259:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3761,
                        3762
                      ],
                      "referencedDeclaration": 3761,
                      "src": "1251:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1251:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1368,
                  "nodeType": "ExpressionStatement",
                  "src": "1251:21:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1371,
                        "name": "cid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1347,
                        "src": "1303:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1369,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3829,
                        "src": "1285:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Resale_$1429",
                          "typeString": "contract super Resale"
                        }
                      },
                      "id": 1370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getContent",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1179,
                      "src": "1285:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "function (uint256) view returns (uint256,string memory,string memory,string memory,address)"
                      }
                    },
                    "id": 1372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1285:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$",
                      "typeString": "tuple(uint256,string memory,string memory,string memory,address)"
                    }
                  },
                  "functionReturnParameters": 1362,
                  "id": 1373,
                  "nodeType": "Return",
                  "src": "1278:29:9"
                }
              ]
            },
            "documentation": null,
            "id": 1375,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1350,
                    "name": "cid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1347,
                    "src": "1121:3:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1351,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1349,
                  "name": "onlySigner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1345,
                  "src": "1110:10:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1110:15:9"
              }
            ],
            "name": "getContent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1347,
                  "name": "cid",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "1066:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1066:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1060:21:9"
            },
            "returnParameters": {
              "id": 1362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1353,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "1145:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1352,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1145:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1355,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "1161:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1354,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1357,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "1183:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1356,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1183:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1359,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "1205:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1358,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1361,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "1227:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1360,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1227:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1137:104:9"
            },
            "scope": 1429,
            "src": "1041:271:9",
            "stateMutability": "view",
            "superFunction": 1675,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1397,
              "nodeType": "Block",
              "src": "1357:132:9",
              "statements": [
                {
                  "assignments": [
                    1380
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1380,
                      "name": "resale",
                      "nodeType": "VariableDeclaration",
                      "scope": 1397,
                      "src": "1363:27:9",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                        "typeString": "struct Resale.ResaleStruct"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1379,
                        "name": "ResaleStruct",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1240,
                        "src": "1363:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                          "typeString": "struct Resale.ResaleStruct"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1384,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1381,
                      "name": "resaleMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1244,
                      "src": "1393:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResaleStruct_$1240_storage_$",
                        "typeString": "mapping(uint256 => struct Resale.ResaleStruct storage ref)"
                      }
                    },
                    "id": 1383,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1382,
                      "name": "cid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1377,
                      "src": "1403:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1393:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage",
                      "typeString": "struct Resale.ResaleStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1363:44:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1386,
                              "name": "resale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1380,
                              "src": "1421:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                                "typeString": "struct Resale.ResaleStruct storage pointer"
                              }
                            },
                            "id": 1387,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "customerMap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1239,
                            "src": "1421:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1390,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1388,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3758,
                              "src": "1440:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1440:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1421:30:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 1391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1455:5:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1421:39:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "726573616c65206578697374",
                        "id": 1393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1462:14:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36bf1d2e59e5560197e275104366dfd3edebdc1c0dcb61172434c3a7db70fd6f",
                          "typeString": "literal_string \"resale exist\""
                        },
                        "value": "resale exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36bf1d2e59e5560197e275104366dfd3edebdc1c0dcb61172434c3a7db70fd6f",
                          "typeString": "literal_string \"resale exist\""
                        }
                      ],
                      "id": 1385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3761,
                        3762
                      ],
                      "referencedDeclaration": 3762,
                      "src": "1413:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1413:64:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1395,
                  "nodeType": "ExpressionStatement",
                  "src": "1413:64:9"
                },
                {
                  "id": 1396,
                  "nodeType": "PlaceholderStatement",
                  "src": "1483:1:9"
                }
              ]
            },
            "documentation": null,
            "id": 1398,
            "name": "notResalePurchased",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1377,
                  "name": "cid",
                  "nodeType": "VariableDeclaration",
                  "scope": 1398,
                  "src": "1344:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1344:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1343:13:9"
            },
            "src": "1316:173:9",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1427,
              "nodeType": "Block",
              "src": "1582:125:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1408,
                            "name": "cid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1400,
                            "src": "1604:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1407,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2805,
                          "src": "1596:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1596:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1406,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3761,
                        3762
                      ],
                      "referencedDeclaration": 3761,
                      "src": "1588:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1588:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1411,
                  "nodeType": "ExpressionStatement",
                  "src": "1588:21:9"
                },
                {
                  "assignments": [
                    1413
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1413,
                      "name": "resale",
                      "nodeType": "VariableDeclaration",
                      "scope": 1427,
                      "src": "1615:27:9",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                        "typeString": "struct Resale.ResaleStruct"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1412,
                        "name": "ResaleStruct",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1240,
                        "src": "1615:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                          "typeString": "struct Resale.ResaleStruct"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1417,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1414,
                      "name": "resaleMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1244,
                      "src": "1645:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResaleStruct_$1240_storage_$",
                        "typeString": "mapping(uint256 => struct Resale.ResaleStruct storage ref)"
                      }
                    },
                    "id": 1416,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1415,
                      "name": "cid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1400,
                      "src": "1655:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1645:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage",
                      "typeString": "struct Resale.ResaleStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1615:44:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1418,
                          "name": "resale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1413,
                          "src": "1665:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                            "typeString": "struct Resale.ResaleStruct storage pointer"
                          }
                        },
                        "id": 1422,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "customerMap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1239,
                        "src": "1665:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1423,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1420,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3758,
                          "src": "1684:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1684:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1665:30:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1698:4:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1665:37:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1426,
                  "nodeType": "ExpressionStatement",
                  "src": "1665:37:9"
                }
              ]
            },
            "documentation": null,
            "id": 1428,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1403,
                    "name": "cid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1400,
                    "src": "1575:3:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1404,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1402,
                  "name": "notResalePurchased",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1398,
                  "src": "1556:18:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1556:23:9"
              }
            ],
            "name": "_purchaseResale",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1400,
                  "name": "cid",
                  "nodeType": "VariableDeclaration",
                  "scope": 1428,
                  "src": "1523:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1523:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1517:21:9"
            },
            "returnParameters": {
              "id": 1405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1582:0:9"
            },
            "scope": 1429,
            "src": "1493:214:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 1430,
        "src": "57:2174:9"
      }
    ],
    "src": "0:2232:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/tech/dev/prd/programming-lectures/lesson011/contracts/Product/Resale.sol",
    "exportedSymbols": {
      "Resale": [
        1429
      ]
    },
    "id": 1430,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1228,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "/Users/tech/dev/prd/programming-lectures/lesson011/contracts/Product/TradePurchaser.sol",
        "file": "./TradePurchaser.sol",
        "id": 1229,
        "nodeType": "ImportDirective",
        "scope": 1430,
        "sourceUnit": 1851,
        "src": "25:30:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1230,
              "name": "TradePurchaser",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1850,
              "src": "76:14:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TradePurchaser_$1850",
                "typeString": "contract TradePurchaser"
              }
            },
            "id": 1231,
            "nodeType": "InheritanceSpecifier",
            "src": "76:14:9"
          }
        ],
        "contractDependencies": [
          1729,
          1850,
          2256,
          2035,
          2145,
          2246,
          1217,
          3065,
          3402,
          3426,
          3555,
          3658,
          3685,
          3708
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1429,
        "linearizedBaseContracts": [
          1429,
          1850,
          1729,
          1217,
          2145,
          2035,
          3426,
          3555,
          3708,
          3402,
          3685,
          3065,
          3658,
          2246,
          2256
        ],
        "name": "Resale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Resale.ResaleStruct",
            "id": 1240,
            "members": [
              {
                "constant": false,
                "id": 1233,
                "name": "price",
                "nodeType": "VariableDeclaration",
                "scope": 1240,
                "src": "121:13:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1232,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "121:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1235,
                "name": "publish",
                "nodeType": "VariableDeclaration",
                "scope": 1240,
                "src": "140:12:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1234,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "140:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1239,
                "name": "customerMap",
                "nodeType": "VariableDeclaration",
                "scope": 1240,
                "src": "158:37:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 1238,
                  "keyType": {
                    "id": 1236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "166:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "158:25:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueType": {
                    "id": 1237,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "178:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ResaleStruct",
            "nodeType": "StructDefinition",
            "scope": 1429,
            "src": "95:105:9",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1244,
            "name": "resaleMap",
            "nodeType": "VariableDeclaration",
            "scope": 1429,
            "src": "203:42:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResaleStruct_$1240_storage_$",
              "typeString": "mapping(uint256 => struct Resale.ResaleStruct)"
            },
            "typeName": {
              "id": 1243,
              "keyType": {
                "id": 1241,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "211:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "203:32:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResaleStruct_$1240_storage_$",
                "typeString": "mapping(uint256 => struct Resale.ResaleStruct)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1242,
                "name": "ResaleStruct",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1240,
                "src": "222:12:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                  "typeString": "struct Resale.ResaleStruct"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1295,
              "nodeType": "Block",
              "src": "353:222:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1255,
                              "name": "cid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1246,
                              "src": "375:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1254,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2601
                            ],
                            "referencedDeclaration": 2601,
                            "src": "367:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 1256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "367:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1257,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3758,
                            "src": "383:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "383:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "367:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1253,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3761,
                        3762
                      ],
                      "referencedDeclaration": 3761,
                      "src": "359:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "359:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1261,
                  "nodeType": "ExpressionStatement",
                  "src": "359:35:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1264,
                            "name": "cid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1246,
                            "src": "416:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1263,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2805,
                          "src": "408:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "408:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3761,
                        3762
                      ],
                      "referencedDeclaration": 3761,
                      "src": "400:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "400:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1267,
                  "nodeType": "ExpressionStatement",
                  "src": "400:21:9"
                },
                {
                  "assignments": [
                    1269
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1269,
                      "name": "resale",
                      "nodeType": "VariableDeclaration",
                      "scope": 1295,
                      "src": "427:27:9",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                        "typeString": "struct Resale.ResaleStruct"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1268,
                        "name": "ResaleStruct",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1240,
                        "src": "427:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                          "typeString": "struct Resale.ResaleStruct"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1273,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1270,
                      "name": "resaleMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1244,
                      "src": "457:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResaleStruct_$1240_storage_$",
                        "typeString": "mapping(uint256 => struct Resale.ResaleStruct storage ref)"
                      }
                    },
                    "id": 1272,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1271,
                      "name": "cid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1246,
                      "src": "467:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "457:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage",
                      "typeString": "struct Resale.ResaleStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "427:44:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1274,
                        "name": "resale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1269,
                        "src": "477:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                          "typeString": "struct Resale.ResaleStruct storage pointer"
                        }
                      },
                      "id": 1276,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1233,
                      "src": "477:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1277,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1248,
                      "src": "492:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "477:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1279,
                  "nodeType": "ExpressionStatement",
                  "src": "477:20:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1280,
                        "name": "resale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1269,
                        "src": "503:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                          "typeString": "struct Resale.ResaleStruct storage pointer"
                        }
                      },
                      "id": 1282,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "publish",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1235,
                      "src": "503:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1283,
                      "name": "publish",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1250,
                      "src": "520:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "503:24:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1285,
                  "nodeType": "ExpressionStatement",
                  "src": "503:24:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1286,
                          "name": "resale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1269,
                          "src": "533:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                            "typeString": "struct Resale.ResaleStruct storage pointer"
                          }
                        },
                        "id": 1290,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "customerMap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1239,
                        "src": "533:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1291,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1288,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3758,
                          "src": "552:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "552:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "533:30:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "566:4:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "533:37:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1294,
                  "nodeType": "ExpressionStatement",
                  "src": "533:37:9"
                }
              ]
            },
            "documentation": null,
            "id": 1296,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateResaleInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1246,
                  "name": "cid",
                  "nodeType": "VariableDeclaration",
                  "scope": 1296,
                  "src": "281:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "281:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1248,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 1296,
                  "src": "299:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "299:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1250,
                  "name": "publish",
                  "nodeType": "VariableDeclaration",
                  "scope": 1296,
                  "src": "318:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1249,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "318:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "275:59:9"
            },
            "returnParameters": {
              "id": 1252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "353:0:9"
            },
            "scope": 1429,
            "src": "250:325:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1323,
              "nodeType": "Block",
              "src": "709:143:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1307,
                            "name": "cid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1298,
                            "src": "731:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1306,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2805,
                          "src": "723:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "723:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1305,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3761,
                        3762
                      ],
                      "referencedDeclaration": 3761,
                      "src": "715:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "715:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1310,
                  "nodeType": "ExpressionStatement",
                  "src": "715:21:9"
                },
                {
                  "assignments": [
                    1312
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1312,
                      "name": "resale",
                      "nodeType": "VariableDeclaration",
                      "scope": 1323,
                      "src": "742:27:9",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                        "typeString": "struct Resale.ResaleStruct"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1311,
                        "name": "ResaleStruct",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1240,
                        "src": "742:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                          "typeString": "struct Resale.ResaleStruct"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1316,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1313,
                      "name": "resaleMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1244,
                      "src": "772:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResaleStruct_$1240_storage_$",
                        "typeString": "mapping(uint256 => struct Resale.ResaleStruct storage ref)"
                      }
                    },
                    "id": 1315,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1314,
                      "name": "cid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1298,
                      "src": "782:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "772:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage",
                      "typeString": "struct Resale.ResaleStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "742:44:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1317,
                          "name": "resale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1312,
                          "src": "807:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                            "typeString": "struct Resale.ResaleStruct storage pointer"
                          }
                        },
                        "id": 1318,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1233,
                        "src": "807:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1319,
                          "name": "resale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1312,
                          "src": "827:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                            "typeString": "struct Resale.ResaleStruct storage pointer"
                          }
                        },
                        "id": 1320,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "publish",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1235,
                        "src": "827:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1321,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "799:48:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,bool)"
                    }
                  },
                  "functionReturnParameters": 1304,
                  "id": 1322,
                  "nodeType": "Return",
                  "src": "792:55:9"
                }
              ]
            },
            "documentation": null,
            "id": 1324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getResaleInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1298,
                  "name": "cid",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "607:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "601:21:9"
            },
            "returnParameters": {
              "id": 1304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1301,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "667:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "667:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1303,
                  "name": "publish",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "688:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1302,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "659:47:9"
            },
            "scope": 1429,
            "src": "579:273:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1344,
              "nodeType": "Block",
              "src": "897:140:9",
              "statements": [
                {
                  "assignments": [
                    1329
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1329,
                      "name": "resale",
                      "nodeType": "VariableDeclaration",
                      "scope": 1344,
                      "src": "903:27:9",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                        "typeString": "struct Resale.ResaleStruct"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1328,
                        "name": "ResaleStruct",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1240,
                        "src": "903:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                          "typeString": "struct Resale.ResaleStruct"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1333,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1330,
                      "name": "resaleMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1244,
                      "src": "933:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResaleStruct_$1240_storage_$",
                        "typeString": "mapping(uint256 => struct Resale.ResaleStruct storage ref)"
                      }
                    },
                    "id": 1332,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1331,
                      "name": "cid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1326,
                      "src": "943:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "933:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage",
                      "typeString": "struct Resale.ResaleStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "903:44:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1335,
                            "name": "resale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1329,
                            "src": "961:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                              "typeString": "struct Resale.ResaleStruct storage pointer"
                            }
                          },
                          "id": 1336,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "customerMap",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1239,
                          "src": "961:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1339,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1337,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3758,
                            "src": "980:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "980:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "961:30:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f74207369676e65642c20706c6561736520757064617465496e666f",
                        "id": 1340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "993:31:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c8b91f76a606699ccf655696c304827029f1ef6dd6417bf9d3267e59e084de9",
                          "typeString": "literal_string \"not signed, please updateInfo\""
                        },
                        "value": "not signed, please updateInfo"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c8b91f76a606699ccf655696c304827029f1ef6dd6417bf9d3267e59e084de9",
                          "typeString": "literal_string \"not signed, please updateInfo\""
                        }
                      ],
                      "id": 1334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3761,
                        3762
                      ],
                      "referencedDeclaration": 3762,
                      "src": "953:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "953:72:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1342,
                  "nodeType": "ExpressionStatement",
                  "src": "953:72:9"
                },
                {
                  "id": 1343,
                  "nodeType": "PlaceholderStatement",
                  "src": "1031:1:9"
                }
              ]
            },
            "documentation": null,
            "id": 1345,
            "name": "onlySigner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1326,
                  "name": "cid",
                  "nodeType": "VariableDeclaration",
                  "scope": 1345,
                  "src": "881:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "881:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "875:21:9"
            },
            "src": "856:181:9",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1374,
              "nodeType": "Block",
              "src": "1245:67:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1365,
                            "name": "cid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1347,
                            "src": "1267:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1364,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2805,
                          "src": "1259:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1259:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3761,
                        3762
                      ],
                      "referencedDeclaration": 3761,
                      "src": "1251:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1251:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1368,
                  "nodeType": "ExpressionStatement",
                  "src": "1251:21:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1371,
                        "name": "cid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1347,
                        "src": "1303:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1369,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3829,
                        "src": "1285:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Resale_$1429",
                          "typeString": "contract super Resale"
                        }
                      },
                      "id": 1370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getContent",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1179,
                      "src": "1285:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "function (uint256) view returns (uint256,string memory,string memory,string memory,address)"
                      }
                    },
                    "id": 1372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1285:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$",
                      "typeString": "tuple(uint256,string memory,string memory,string memory,address)"
                    }
                  },
                  "functionReturnParameters": 1362,
                  "id": 1373,
                  "nodeType": "Return",
                  "src": "1278:29:9"
                }
              ]
            },
            "documentation": null,
            "id": 1375,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1350,
                    "name": "cid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1347,
                    "src": "1121:3:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1351,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1349,
                  "name": "onlySigner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1345,
                  "src": "1110:10:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1110:15:9"
              }
            ],
            "name": "getContent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1347,
                  "name": "cid",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "1066:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1066:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1060:21:9"
            },
            "returnParameters": {
              "id": 1362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1353,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "1145:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1352,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1145:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1355,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "1161:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1354,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1357,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "1183:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1356,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1183:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1359,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "1205:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1358,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1361,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "1227:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1360,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1227:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1137:104:9"
            },
            "scope": 1429,
            "src": "1041:271:9",
            "stateMutability": "view",
            "superFunction": 1675,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1397,
              "nodeType": "Block",
              "src": "1357:132:9",
              "statements": [
                {
                  "assignments": [
                    1380
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1380,
                      "name": "resale",
                      "nodeType": "VariableDeclaration",
                      "scope": 1397,
                      "src": "1363:27:9",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                        "typeString": "struct Resale.ResaleStruct"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1379,
                        "name": "ResaleStruct",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1240,
                        "src": "1363:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                          "typeString": "struct Resale.ResaleStruct"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1384,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1381,
                      "name": "resaleMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1244,
                      "src": "1393:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResaleStruct_$1240_storage_$",
                        "typeString": "mapping(uint256 => struct Resale.ResaleStruct storage ref)"
                      }
                    },
                    "id": 1383,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1382,
                      "name": "cid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1377,
                      "src": "1403:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1393:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage",
                      "typeString": "struct Resale.ResaleStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1363:44:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1386,
                              "name": "resale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1380,
                              "src": "1421:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                                "typeString": "struct Resale.ResaleStruct storage pointer"
                              }
                            },
                            "id": 1387,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "customerMap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1239,
                            "src": "1421:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1390,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1388,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3758,
                              "src": "1440:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1440:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1421:30:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 1391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1455:5:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1421:39:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "726573616c65206578697374",
                        "id": 1393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1462:14:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36bf1d2e59e5560197e275104366dfd3edebdc1c0dcb61172434c3a7db70fd6f",
                          "typeString": "literal_string \"resale exist\""
                        },
                        "value": "resale exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36bf1d2e59e5560197e275104366dfd3edebdc1c0dcb61172434c3a7db70fd6f",
                          "typeString": "literal_string \"resale exist\""
                        }
                      ],
                      "id": 1385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3761,
                        3762
                      ],
                      "referencedDeclaration": 3762,
                      "src": "1413:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1413:64:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1395,
                  "nodeType": "ExpressionStatement",
                  "src": "1413:64:9"
                },
                {
                  "id": 1396,
                  "nodeType": "PlaceholderStatement",
                  "src": "1483:1:9"
                }
              ]
            },
            "documentation": null,
            "id": 1398,
            "name": "notResalePurchased",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1377,
                  "name": "cid",
                  "nodeType": "VariableDeclaration",
                  "scope": 1398,
                  "src": "1344:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1344:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1343:13:9"
            },
            "src": "1316:173:9",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1427,
              "nodeType": "Block",
              "src": "1582:125:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1408,
                            "name": "cid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1400,
                            "src": "1604:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1407,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2805,
                          "src": "1596:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1596:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1406,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3761,
                        3762
                      ],
                      "referencedDeclaration": 3761,
                      "src": "1588:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1588:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1411,
                  "nodeType": "ExpressionStatement",
                  "src": "1588:21:9"
                },
                {
                  "assignments": [
                    1413
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1413,
                      "name": "resale",
                      "nodeType": "VariableDeclaration",
                      "scope": 1427,
                      "src": "1615:27:9",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                        "typeString": "struct Resale.ResaleStruct"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1412,
                        "name": "ResaleStruct",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1240,
                        "src": "1615:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                          "typeString": "struct Resale.ResaleStruct"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1417,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1414,
                      "name": "resaleMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1244,
                      "src": "1645:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResaleStruct_$1240_storage_$",
                        "typeString": "mapping(uint256 => struct Resale.ResaleStruct storage ref)"
                      }
                    },
                    "id": 1416,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1415,
                      "name": "cid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1400,
                      "src": "1655:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1645:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage",
                      "typeString": "struct Resale.ResaleStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1615:44:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1418,
                          "name": "resale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1413,
                          "src": "1665:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResaleStruct_$1240_storage_ptr",
                            "typeString": "struct Resale.ResaleStruct storage pointer"
                          }
                        },
                        "id": 1422,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "customerMap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1239,
                        "src": "1665:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1423,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1420,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3758,
                          "src": "1684:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1684:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1665:30:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1698:4:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1665:37:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1426,
                  "nodeType": "ExpressionStatement",
                  "src": "1665:37:9"
                }
              ]
            },
            "documentation": null,
            "id": 1428,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1403,
                    "name": "cid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1400,
                    "src": "1575:3:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1404,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1402,
                  "name": "notResalePurchased",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1398,
                  "src": "1556:18:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1556:23:9"
              }
            ],
            "name": "_purchaseResale",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1400,
                  "name": "cid",
                  "nodeType": "VariableDeclaration",
                  "scope": 1428,
                  "src": "1523:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1523:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1517:21:9"
            },
            "returnParameters": {
              "id": 1405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1582:0:9"
            },
            "scope": 1429,
            "src": "1493:214:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 1430,
        "src": "57:2174:9"
      }
    ],
    "src": "0:2232:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.10",
  "updatedAt": "2019-06-09T02:35:12.020Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}